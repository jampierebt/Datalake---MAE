CREATE OR REPLACE PROCEDURE `iter-data-storage-pv.programs.sp_plnt_uniarrendatarios`(par_fecha DATE)
OPTIONS (strict_mode=true)
BEGIN 

 /********************************************************************
* Proyecto      : INVERSIONES
* Fecha         : 11 / 03 / 2024
* Autor         : Jampiere Berrio         
* Descripción   : Valorizacion Inmuebles Uniarrendatarios 
* Ejecuciòn     : Reprocesable
*********************************************************************
*                       MODIFICACIONES POSTERIORES                  *
*===================================================================*
*=  Fecha   | Persona |           Modificación Realizada           =*
*===================================================================*/

########################################################################################################################
--                                           CALULOS PARA INMUEBLES DUPLICADOS
########################################################################################################################
-------------------------------------------------------------------------------
-- Universo de informacion
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_RENTAS` 
AS
SELECT 
DENSE_RANK()OVER(ORDER BY NOMBRE_CORTO) AS INDICADOR_VALORIZACION
,A.FECHA_VALORIZACION
,A.INMUEBLE_NOMBRE
,A.TIPO_INMUEBLE
,A.INMUEBLE_AREA
,A.INMUEBLE_LEGALIDAD
,A.INMUEBLE_COLOCACION
,A.FECHA_INICIO
,A.FECHA_VENCIMIENTO
,A.FECHA_VENCIMIENTO_PERITO
,A.MONEDA_RENTA
,A.MONTO_ULTIMA_RENTA
,A.MONTO_ULTIMA_RENTA_PERITO
,A.FECHA_ULTIMA_RENTA
,A.MES_AJUSTE_RENTA
,A.MES_AJUSTE_RENTA_PERITO
,A.PERIODICIDAD_RENTA
,A.PERIODICIDAD_RENTA_PERITO
,A.PORC_GASTOS_ADM
,A.MONTO_HIST_GASTOS_OP
,A.MONTO_HIST_ARBITRIOS
,A.MONTO_HIST_SEGUROS
,A.MONTO_HIST_PREDIAL
,A.PORC_HIST_INCOBRABILIDAD
,A.MONTO_DEPRECIACION
,A.PORC_IMPUESTO_RENTA
,A.TIPO_AJUSTE_RENTA
,A.INDICE_REFERENCIAL_AJUSTE_RENTA
,A.VALOR_REFERENCIAL_AJUSTE_RENTA
,A.TIPO_AJUSTE_RENTA_2
,A.INDICE_REFERENCIAL_AJUSTE_RENTA_2
,A.REVALUACION_ACUMULADA_RENTA
,A.VACANCIA_PROM_MENSUAL
,A.NOMBRE_CORTO
,W.WACC_PEN
,W.WACC_USD
,W.PROMEDIO_20_ANIO_PEN
,W.PROMEDIO_20_ANIO_USD
,LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) AS FECHA_VALORIZACION_10_YEAR
,LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) AS FECHA_VENCIMIENTO_ADJ
,DATE_ADD(LAST_DAY(A.FECHA_VENCIMIENTO,MONTH), INTERVAL CAST(A.INMUEBLE_COLOCACION AS INT64) MONTH) AS FECHA_RECOLOCACION_ADJ
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_MAX_PROJ
,DATE_SUB(DATE_TRUNC((DATE_ADD(FECHA_VALORIZACION, INTERVAL 2 MONTH)),MONTH),INTERVAL 1 DAY ) AS FECHA_PROYECCION_INICIO
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_PROYECCION_FIN
,DATE_SUB(DATE_TRUNC(DATE_ADD(A.FECHA_ULTIMA_RENTA, INTERVAL 2 MONTH),MONTH),INTERVAL 1 DAY) AS FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_PROYECCION_ULTIMA_RENTA_FIN
,DATE_ADD(A.FECHA_ULTIMA_RENTA,INTERVAL PERIODICIDAD_RENTA MONTH) AS FECHA_SIGUIENTE_RENTA
FROM `iter-data-storage-pv.inputfiles.IV_CONTRATOS_UNIARRENDATARIOS` A
LEFT JOIN `iter-data-storage-pv-uat.temp.PLNT_VARIABLES_WACC` W
       ON W.FECHA_CORTE = A.FECHA_VALORIZACION
      AND W.TIPO_ESCENARIO='REAL'
;
--WHERE INMUEBLE_NOMBRE IN ('CPSA Puruchuco-Cancha Fulb.','CPSA Puruchuco-Colegio')
--WHERE INMUEBLE_NOMBRE IN ('CPSA Puruchuco-Colegio')


-------------------------------------------------------------------------------
-- primer FOR python para tomar los 4 valores que estan repetidos es decir
-- una empresa con mas de 1 renta
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS` 
AS
SELECT 
 LAST_DAY(MES,MONTH) AS MES
,TAB.INDICADOR_VALORIZACION
,TAB.FECHA_VALORIZACION
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.TIPO_AJUSTE_RENTA_2
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA_2
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.VACANCIA_PROM_MENSUAL
,TAB.NOMBRE_CORTO
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_VALORIZACION_10_YEAR
,TAB.FECHA_VENCIMIENTO_ADJ
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ
,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
,INFI.MONTO
#Definimos ajuste inflación INICIO
#VALIDADO
,CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
      WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL
      END AS INFLACION_PROYECCION

,1 AS AJUSTE_INFLACION

#VALIDADO
,EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC)) AS AJUSTE_INGRESO
#VALIDADO
,SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA ELSE 0 END ) OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES) AS AJUSTE_ARITMETICO

#Definimos ajuste inflación FIN
#VALIDADO

--,CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)
--      END AS FECHA_SIGUIENTE_RENTA_CALC

,CASE WHEN PERIODICIDAD_RENTA = 12 THEN (CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) 
                                              THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH) END) 
      ELSE DATE_ADD(FECHA_SIGUIENTE_RENTA,INTERVAL (ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1) MONTH )
      END AS FECHA_SIGUIENTE_RENTA_CALC
--,ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1  AS NUMERACION

/*
fecha_siguiente_renta += pd.DateOffset(months = periodicidad_renta)
*/
#VALIDADO --> PERO CAMBIA EL VALOR RESPECTO AL PYTHON 16291.41665 por un tema de decimales aparentemente
,IF(EXTRACT(MONTH FROM MES) = EXTRACT(MONTH FROM (CASE WHEN PERIODICIDAD_RENTA = 12 THEN (CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) 
                                                                                               THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH) END) 
                                                       ELSE DATE_ADD(FECHA_SIGUIENTE_RENTA,INTERVAL (ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1) MONTH )
                                                  END 
                                                 )
                                     )
      ,(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN MONTO_ULTIMA_RENTA + (SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA 
                                                                                           ELSE 0 END 
                                                                                     )OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                 ) 
             ELSE MONTO_ULTIMA_RENTA * (EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 + 
                                                                                    (CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                                    )
                                                         ELSE 1 END
                                                     )) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES))
                                       )     
             END
       )
      ,0) AS RENTA_PROYECTADA

,CASE WHEN MONEDA_RENTA = 'USD'THEN  IF(CPI_USD_MA.MONTO<>0,CPI_USD.MONTO / CPI_USD_MA.MONTO ,0)
      ELSE IF(IPC_PEN.MONTO<>0,IPC_PEN.MONTO / IPC_PEN_MA.MONTO ,0) END AS AJUSTE_MENSUAL_INGRESO


,COALESCE(
CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN IF(LAST_DAY(MES,MONTH) <= FECHA_RECOLOCACION_ADJ,0,NULL)
      ELSE (
      IF(EXTRACT(MONTH FROM MES) = EXTRACT(MONTH FROM ((CASE WHEN PERIODICIDAD_RENTA = 12 THEN (CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) 
                                                                                               THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH) END) 
                                                             ELSE DATE_ADD(FECHA_SIGUIENTE_RENTA,INTERVAL (ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1) MONTH )
                                                             END 
                                                        )
                                                      )
                                          )
      ,(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN MONTO_ULTIMA_RENTA + (SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA 
                                                                                           ELSE 0 END 
                                                                                     )OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                 ) 
             ELSE MONTO_ULTIMA_RENTA * (EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 + 
                                                                                    (CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                                    )
                                                         ELSE 1 END
                                                     )) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES))
                                       )     
        END
       )
      ,0) ) END,0
         ) AS RENTA_CONTRATO -- df_proyeccion_ultima_renta - vect_rentas_contrato_last --> APARENTEMENTE ESTA OK 

FROM (SELECT 
      GENERATE_DATE_ARRAY(FECHA_PROYECCION_ULTIMA_RENTA_INICIO,FECHA_PROYECCION_ULTIMA_RENTA_FIN,INTERVAL 1 MONTH) AS MESES , * 
      FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_RENTAS`
      ) TAB
     ,UNNEST(TAB.MESES) MES
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INF
       ON INF.FECHA = LAST_DAY(MES,MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INF.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INFI
       ON INFI.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INFI.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD
       ON CPI_USD.FECHA = LAST_DAY(MES,MONTH)
      AND CPI_USD.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD_MA
       ON CPI_USD_MA.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND CPI_USD_MA.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN
       ON IPC_PEN.FECHA = LAST_DAY(MES,MONTH)
      AND IPC_PEN.DESCRIPCION ='IPC_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = LAST_DAY(DATE_SUB(MES,INTERVAL 1 MONTH),MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='IPC_PEN'
WHERE TAB.INDICADOR_VALORIZACION IN (SELECT INDICADOR_VALORIZACION
                                     FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_RENTAS`
                                     GROUP BY INDICADOR_VALORIZACION 
                                     HAVING COUNT(1)>1
                                    )
--WHERE LAST_DAY(MES,MONTH)='2024-01-31'
--WHERE INMUEBLE_NOMBRE='CPSA Puruchuco-Cancha Fulb.'
--ORDER BY INMUEBLE_NOMBRE DESC ,  MES ASC 
;

-------------------------------------------------------------------------------
-- Inmueble de rentas 2 para esos inmuebles de arriba repetidos
-- se considera realizar un calculo a estos como universos o es decir totales
-- ejemplo A -- A1 150
--         A -- A2 120
--         A --    270
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_2_RENTAS`
AS
SELECT 
 A.FECHA_VALORIZACION
,A.ID_INMUEBLE
,A.INMUEBLE_NOMBRE
,A.TIPO_INMUEBLE
,A.INMUEBLE_AREA
,A.INMUEBLE_LEGALIDAD
,A.INMUEBLE_COLOCACION
,A.FECHA_INICIO
,A.FECHA_VENCIMIENTO
,A.FECHA_VENCIMIENTO_PERITO
,A.MONEDA_RENTA
,A.MONTO_ULTIMA_RENTA
,A.MONTO_ULTIMA_RENTA_PERITO
,A.FECHA_ULTIMA_RENTA
,A.MES_AJUSTE_RENTA
,A.MES_AJUSTE_RENTA_PERITO
,A.PERIODICIDAD_RENTA
,A.PERIODICIDAD_RENTA_PERITO
,A.PORC_GASTOS_ADM
,A.MONTO_HIST_GASTOS_OP
,A.MONTO_HIST_ARBITRIOS
,A.MONTO_HIST_SEGUROS
,A.MONTO_HIST_PREDIAL
,A.PORC_HIST_INCOBRABILIDAD
,A.MONTO_DEPRECIACION
,A.PORC_IMPUESTO_RENTA
,A.TIPO_AJUSTE_RENTA
,A.INDICE_REFERENCIAL_AJUSTE_RENTA
,A.VALOR_REFERENCIAL_AJUSTE_RENTA
,A.REVALUACION_ACUMULADA_RENTA
,A.NOMBRE_CORTO
,A.VALOR_TASACION
,A.M2_TERRENO_TOTAL
,A.M2_CPSA
,A.VALOR_EDIFICACION
,A.VALOR_OBRAS_COMPL
,A.ANIOS_DEPRECIACION
,LAST_DAY(DATE_ADD(A.FECHA_VALORIZACION,INTERVAL 10 YEAR),MONTH) AS FECHA_10A_VALORIZACION
,SEG.MONTO_PEN  AS MONTO_SEGUROS_PEN
,AR.MONTO_PEN   AS MONTO_ARBITRIOS_PEN
,PRE.MONTO_PEN  AS MONTO_PREDIALES_PEN
,DE.MONTO_PEN   AS MONTO_DEPRECIACION_PEN
,GA.MONTO_PEN   AS MONTO_GASTOS_PEN
#porc_hist_incobrabilidad = df_data_inmuebles.loc[filaprueba, 'porc_hist_incobrabilidad'] viene de la otra base ojo  ES INCORRECTO EN EL PYTHON
#porc_impuesto_renta=df_data_inmuebles.loc[filaprueba, 'porc_impuesto_renta'] -- ES INCORRECTO EN EL PYTHON
,W.WACC_PEN
,W.WACC_USD
,W.PROMEDIO_20_ANIO_PEN
,W.PROMEDIO_20_ANIO_USD
,LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) AS FECHA_VALORIZACION_10_YEAR --_> Revisar innecesario 
,LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) AS FECHA_VENCIMIENTO_ADJ
,DATE_ADD(LAST_DAY(A.FECHA_VENCIMIENTO,MONTH), INTERVAL CAST(A.INMUEBLE_COLOCACION AS INT64) MONTH) AS FECHA_RECOLOCACION_ADJ
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_MAX_PROJ
,DATE_SUB(DATE_TRUNC((DATE_ADD(FECHA_VALORIZACION, INTERVAL 2 MONTH)),MONTH),INTERVAL 1 DAY ) AS FECHA_PROYECCION_INICIO
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_PROYECCION_FIN
,DATE_SUB(DATE_TRUNC(DATE_ADD(A.FECHA_ULTIMA_RENTA, INTERVAL 2 MONTH),MONTH),INTERVAL 1 DAY) AS FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,GREATEST( LAST_DAY(A.FECHA_VENCIMIENTO,MONTH) , LAST_DAY(DATE_ADD(FECHA_VALORIZACION, INTERVAL 10 YEAR),MONTH) ) AS FECHA_PROYECCION_ULTIMA_RENTA_FIN
,DATE_ADD(A.FECHA_ULTIMA_RENTA,INTERVAL PERIODICIDAD_RENTA MONTH) AS FECHA_SIGUIENTE_RENTA
FROM `iter-data-storage-pv.inputfiles.IV_CONTRATOS_UNIARRENDATARIOS_2` A
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` SEG
       ON A.FECHA_VALORIZACION = SEG.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = SEG.INMUEBLE_NOMBRE
      AND SEG.CONCEPTO_EGRESO ='SEGUROS'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` AR
       ON A.FECHA_VALORIZACION = SEG.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = AR.INMUEBLE_NOMBRE
      AND AR.CONCEPTO_EGRESO ='ARBITRIOS'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` PRE
       ON A.FECHA_VALORIZACION = PRE.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = PRE.INMUEBLE_NOMBRE
      AND PRE.CONCEPTO_EGRESO ='PREDIALES'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` DE
       ON A.FECHA_VALORIZACION = DE.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = DE.INMUEBLE_NOMBRE
      AND DE.CONCEPTO_EGRESO ='DEPRECIACIÓN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` GA
       ON A.FECHA_VALORIZACION = GA.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = GA.INMUEBLE_NOMBRE
      AND GA.CONCEPTO_EGRESO ='GASTOS ADMINISTRATIVOS'
LEFT JOIN `iter-data-storage-pv-uat.temp.PLNT_VARIABLES_WACC` W
       ON A.FECHA_VALORIZACION = W.FECHA_CORTE
      AND W.TIPO_ESCENARIO='REAL'
;

-------------------------------------------------------------------------------
-- Se usa el inmueble base
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_2_RENTAS_PROY`
AS
SELECT
LAST_DAY(MES,MONTH) AS MES
,TAB.FECHA_VALORIZACION
,TAB.ID_INMUEBLE
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.NOMBRE_CORTO
,TAB.VALOR_TASACION
,TAB.M2_TERRENO_TOTAL
,TAB.M2_CPSA
,TAB.VALOR_EDIFICACION
,TAB.VALOR_OBRAS_COMPL
,TAB.ANIOS_DEPRECIACION
,TAB.FECHA_10A_VALORIZACION
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ

,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
--,INFI.MONTO AS INF_PEN
#Definimos ajuste inflación INICIO
--> Calculo Validado
,CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
      WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL
      END AS INFLACION_PROYECCION
--> Ajuste de Ingreso 
,EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA  AND LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)) AS AJUSTE_INGRESO
#if fecha.month == mes_ajuste_renta:
#   ajuste_ingreso = (1 + inflacion_proyeccion)


,CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA
      ELSE 0 END AS AJUSTE_ARITMETICO
#Definimos ajuste inflación FIN

--,CPI_USD_MA.MONTO,CPI_USD.MONTO,CPI_USD_MA.MONTO

,CASE WHEN MONEDA_RENTA = 'USD'THEN  IF(CPI_USD_MA.MONTO<>0,CPI_USD.MONTO / CPI_USD_MA.MONTO ,0)
      ELSE IF(IPC_PEN.MONTO<>0,IPC_PEN.MONTO / IPC_PEN_MA.MONTO ,0) END AS AJUSTE_MENSUAL_INGRESO

#Todo validado hacia atras

#Variable que te ayuda a verificar la primera iteracion de n para empezar con 0 
,ROW_NUMBER()OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) AS ORDEN_NUMERACION --> CREO NO ES NECESARIO
,FECHA_VENCIMIENTO_ADJ

#Todos los valores en los cuales son VERDADEROS
,INMUEBLE_AREA AS AREA_METROS2_LAST
,CASE WHEN LAST_DAY(MES,MONTH) <= FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA END AS AREA_METROS2_CONTRATO_LAST
,CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
      WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
      ELSE NULL END AS AREA_METROS2_SIN_CONTRATO
,CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
      ELSE NULL END AS AREA_METROS2_RECOLOCACION_LAST
--, AS AREA_METROS2_SIN_CONTRATO

--,TU.RENTA_CONTRATO  / NULLIF(INMUEBLE_AREA,0) AS PRECIO_METROS2_LAST
,TU.RENTA_CONTRATO  / INMUEBLE_AREA AS PRECIO_METROS2_CONTRATO_LAST
,(LAST_VALUE(TU.RENTA_CONTRATO IGNORE NULLS)OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) / INMUEBLE_AREA )
*(EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA  AND LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)))  AS PRECIO_METROS2_SIN_CONTRATO
,RENTA_CONTRATO AS RENTA_CONTRATO_LAST
,(LAST_VALUE(TU.RENTA_CONTRATO IGNORE NULLS)OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) / INMUEBLE_AREA )
* IF(EXTRACT(MONTH FROM MES) = EXTRACT(MONTH FROM ((CASE WHEN MOD(ROW_NUMBER()OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) ,PERIODICIDAD_RENTA) = 0 
                                                             THEN DATE_ADD(FECHA_SIGUIENTE_RENTA, INTERVAL ROW_NUMBER()OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) - PERIODICIDAD_RENTA MONTH)  
                                                             END
                                                        )
                                                      )
                                          )
      ,(EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA  AND LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ 
                                                                                           AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                                                      WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                                                      ELSE INMUEBLE_AREA END)
                                          
                                          ,0)AS RENTA_PROYECTADO_LAST
,IF(LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ,((LAST_VALUE(TU.RENTA_CONTRATO IGNORE NULLS)OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) / INMUEBLE_AREA )
*(EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA  AND LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ 
                                                                                           AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                                                      WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                                                      ELSE INMUEBLE_AREA END)),0) AS RENTA_SIN_CONTRATO                                                            
/*
else:
    #renta_contrato_proy = renta_proyectada
    vect_area_m2_contrato_last[n] = inmueble_area
    vect_precio_m2_sincontrato_last[n] = vect_rentas_contrato_last[n] / inmueble_area
    vect_area_m2_sincontrato_last[n] = 0
*/
--,INF.DESCRIPCION
FROM (SELECT 
      GENERATE_DATE_ARRAY(FECHA_PROYECCION_ULTIMA_RENTA_INICIO,FECHA_PROYECCION_ULTIMA_RENTA_FIN,INTERVAL 1 MONTH) AS MESES , * 
      FROM  `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_2_RENTAS`
      ) TAB
     ,UNNEST(TAB.MESES) MES
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INF
       ON INF.FECHA = MES --> NO SIRVE
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INF.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INFI
       --ON INFI.FECHA = DATE_ADD(DATE_TRUNC(MES,MONTH),INTERVAL 1 DAY)
       ON INFI.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INFI.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD
       ON CPI_USD.FECHA = LAST_DAY(MES,MONTH)
      AND CPI_USD.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD_MA
       ON CPI_USD_MA.FECHA = LAST_DAY(DATE_SUB(MES,INTERVAL 1 MONTH))
      AND CPI_USD_MA.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN
       ON IPC_PEN.FECHA = MES
      AND IPC_PEN.DESCRIPCION ='IPC_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = DATE_SUB(MES,INTERVAL 1 MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='IPC_PEN'
LEFT JOIN (SELECT 
           LAST_DAY(MES,MONTH) AS FECHA
           ,NOMBRE_CORTO AS INMUEBLE_NOMBRE
           ,IF(SUM(RENTA_CONTRATO)=0,NULL,SUM(RENTA_CONTRATO)) AS RENTA_CONTRATO
           FROM  `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS`
           GROUP BY LAST_DAY(MES,MONTH),NOMBRE_CORTO
          ) TU ON LAST_DAY(MES,MONTH) = TU.FECHA
              AND TU.INMUEBLE_NOMBRE = TAB.INMUEBLE_NOMBRE
--WHERE TAB.INMUEBLE_NOMBRE LIKE '%Tabacalera - Atento%'
--WHERE TAB.INMUEBLE_NOMBRE = 'CPSA Puruchuco'
ORDER BY MES ASC
;
-------------------------------------------------------------------------------
-- Se tiene el calculo de uniarrendatarios que estan duplicados pero ya
-- en un solo bloque
-------------------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS_2_PROY`
AS
SELECT 
TAB.MES
,TAB.FECHA_VALORIZACION
,TAB.ID_INMUEBLE
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.NOMBRE_CORTO
,TAB.VALOR_TASACION
,TAB.M2_TERRENO_TOTAL
,TAB.M2_CPSA
,TAB.VALOR_EDIFICACION
,TAB.VALOR_OBRAS_COMPL
,TAB.ANIOS_DEPRECIACION
,TAB.FECHA_10A_VALORIZACION
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
--,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ
,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
--,TAB.INFLACION_PROYECCION
,TAB.AJUSTE_INGRESO
,TAB.AJUSTE_ARITMETICO
,TAB.AJUSTE_MENSUAL_INGRESO
,TAB.ORDEN_NUMERACION
,TAB.FECHA_VENCIMIENTO_ADJ
,TAB.PRECIO_METROS2_SIN_CONTRATO
--,TAB.AREA_METROS2_SIN_CONTRATO
,TAB.PRECIO_METROS2_CONTRATO_LAST
,TAB.AREA_METROS2_SIN_CONTRATO
,TAB.AREA_METROS2_RECOLOCACION_LAST  
,TAB.RENTA_SIN_CONTRATO
,TAB.RENTA_PROYECTADO_LAST
,TAB.RENTA_CONTRATO_LAST
,TAB.RENTA_PROYECTADO_LAST * (1 - TAB.PORC_HIST_INCOBRABILIDAD) AS RENTAS_CASTIGADAS_PROYECTADAS --> CONSULTAR
,TAB.PORC_GASTOS_ADM * TAB.RENTA_PROYECTADO_LAST * (1 - TAB.PORC_HIST_INCOBRABILIDAD)AS EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS
,TAB.PRECIO_METROS2_SIN_CONTRATO AS TARIFA_METROS2

,CASE WHEN EXTRACT(MONTH FROM MES)=1 THEN IPC_PEN_MA.MONTO END AS INFLACION_PROYECCION --> SE REALIZA TODOS LOS ENERO DE CADA AÑO

,EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO ELSE 1 END)) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)) AS AJUSTE_EGRESO --> SE REALIZA TODOS LOS ENERO DE CADA AÑO
# CALCULO --> AJUSTE_EGRESO * MONTO_HIST_GASTOS_OP
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_GASTOS_PEN * EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                     ELSE 1 END)) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       )  END  AS MONTO_HIST_GASTOS_OP_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_ARBITRIOS_PEN * EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                        ELSE 1 END)) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       )  END AS MONTO_HIST_ARBITRIOS_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_SEGUROS_PEN * EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                      ELSE 1 END)) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       ) END AS MONTO_HIST_SEGUROS_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_PREDIALES_PEN * EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                        ELSE 1 END)) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       ) END AS MONTO_HIST_PREDIAL_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TC_USDPEN.MONTO END AS TC_USDPEN

/*
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
--,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
*/
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TAB.MONTO_DEPRECIACION_PEN  END AS MONTO_DEPRECIACION_PEN
,IF(MONEDA_RENTA='USD',(CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TC_USDPEN.MONTO END),1) AS TC_PROYECTADO_TFORM

,IF(MONEDA_RENTA='USD',WACC_USD,WACC_PEN) AS WACC
,IF(MONEDA_RENTA='USD',PROMEDIO_20_ANIO_USD,PROMEDIO_20_ANIO_PEN) AS CRECIMIENTO_PERPETUO
,COUNT(IF(TAB.RENTA_CONTRATO_LAST IS NOT NULL,TAB.MES,NULL))OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY TAB.MES ASC) AS ORDEN_CONTRATO
#vect_rentas_contrato_last[n] + vect_rentas_sincontrato_last[n]
FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_2_RENTAS_PROY` TAB 
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = DATE_SUB(TAB.MES,INTERVAL 1 MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='INF_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` TC_USDPEN
       ON TC_USDPEN.FECHA = TAB.MES
      AND TC_USDPEN.DESCRIPCION ='TC_USDPEN'
--WHERE TAB.INMUEBLE_NOMBRE LIKE '%Tabacalera - Atento%'
ORDER BY TAB.MES ASC
;
-------------------------------------------------------------------------------
-- Utilidad operativa del flujo de caja
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UTILIDAD_OPERATIVA_FLUJO_CAJA_OPERATIVO`
AS
SELECT 
MES
,INMUEBLE_NOMBRE
,EGRESOS_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,TC_PROYECTADO_TFORM
,MONTO_DEPRECIACION_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,RENTAS_CASTIGADAS_PROYECTADAS
,UTILIDAD_OPERATIVA_PROYECTADO - IMPUESTO_RENTA_PROYECTADO + MONTO_DEPRECIACION_PROYECTADO AS FCO_PROYECTADO
FROM (SELECT 
       MES
      ,INMUEBLE_NOMBRE
      ,(  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0) AS EGRESOS_PROYECTADO
      ,RENTAS_CASTIGADAS_PROYECTADAS - ((  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)) - (MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) AS UTILIDAD_OPERATIVA_PROYECTADO
      ,TC_PROYECTADO_TFORM
      ,(MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) AS MONTO_DEPRECIACION_PROYECTADO
      ,(RENTAS_CASTIGADAS_PROYECTADAS - ((  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)) - (MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) ) * PORC_IMPUESTO_RENTA AS IMPUESTO_RENTA_PROYECTADO
      ,RENTAS_CASTIGADAS_PROYECTADAS
       FROM  `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS_2_PROY`
    )
;
-------------------------------------------------------------------------------
-- Generar Nof por periodo
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_NOF_PERIODO_PROY`
AS
SELECT
 MES
,INMUEBLE_NOMBRE
,PERIODICIDAD_RENTA
,MES_AJUSTE_RENTA
,RENTAS_CASTIGADAS_PROYECTADAS
,MONTO_ULTIMA_RENTA
,PORC_HIST_INCOBRABILIDAD
,COALESCE((NOF_PROYECTADO - LAG(NOF_PROYECTADO)OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC)),IF(MES_AJUSTE_RENTA=1,NOF_PROYECTADO,NULL)) AS NOF_PROYECTADO
FROM (SELECT 
       MES
      ,INMUEBLE_NOMBRE
      ,PERIODICIDAD_RENTA
      ,MES_AJUSTE_RENTA
      ,RENTAS_CASTIGADAS_PROYECTADAS
      ,MONTO_ULTIMA_RENTA
      ,CASE WHEN MES_AJUSTE_RENTA = 1 THEN IF(MES_AJUSTE_RENTA = EXTRACT(MONTH FROM MES) ,RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD),NULL) 
            ELSE RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD)   END AS PORC_HIST_INCOBRABILIDAD

      ,LAST_VALUE(CASE WHEN MES_AJUSTE_RENTA = 1 THEN IF(MES_AJUSTE_RENTA = EXTRACT(MONTH FROM MES) ,RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD),NULL) 
                       ELSE RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD)   END   IGNORE NULLS)
                  OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) AS NOF_PROYECTADO
      FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS_2_PROY` TD 
      WHERE MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN
     )
;
-------------------------------------------------------------------------------
-- Calculo de Flujo de caja continuo proyectado
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_FCC_PERIODO_PRO` 
AS
WITH TMP_LANDING AS (
SELECT 
TD.MES
,TD.INMUEBLE_NOMBRE
,TD.INMUEBLE_LEGALIDAD
,TD.PERIODICIDAD_RENTA
,TD.TC_PROYECTADO_TFORM
,FCO.FCO_PROYECTADO
,FCO.EGRESOS_PROYECTADO

,FCO.UTILIDAD_OPERATIVA_PROYECTADO
,FCO.MONTO_DEPRECIACION_PROYECTADO
,FCO.IMPUESTO_RENTA_PROYECTADO
,CASE WHEN  TD.PERIODICIDAD_RENTA = 1 AND ORDEN_NUMERACION = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN ELSE 0 END AS CAPEX
,NOF.NOF_PROYECTADO

,CASE WHEN TD.PERIODICIDAD_RENTA <> 1 THEN TD.MONTO_DEPRECIACION_PEN END AS MONTO_DEPRECIACION_PEN --> PREGUNTAR OMAR
/*
    if periodicidad_renta==1 :
        vect_capex_proyectados = np.zeros_like(vector_depr) #Lleno de 0's
        vect_capex_proyectados[-1] = vector_depr[-1] #Salvo el valor final
*/
,COALESCE(  COALESCE(FCO.FCO_PROYECTADO,0) 
          - COALESCE(NOF.NOF_PROYECTADO,0) 
          - COALESCE((CASE WHEN TD.PERIODICIDAD_RENTA = 1 AND ORDEN_NUMERACION = COUNT(TD.MES )OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN  ELSE 0 END),0),0
         ) AS FCL_PROYECTADO

,CASE WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND TD.PERIODICIDAD_RENTA = 12 THEN 
       (( (M2_CPSA / NULLIF(M2_TERRENO_TOTAL,0) ) * VALOR_TASACION ) * POW(POW((1 + CRECIMIENTO_PERPETUO),1/12),COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE)))
         +
       (VALOR_EDIFICACION + VALOR_OBRAS_COMPL + ((VALOR_EDIFICACION + VALOR_OBRAS_COMPL) / NULLIF(ANIOS_DEPRECIACION,0)  / 12) * COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE)) 
      WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND TD.PERIODICIDAD_RENTA <> 1 THEN  
      (((
        ((CASE WHEN MAX(ORDEN_CONTRATO)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) = ORDEN_NUMERACION THEN RENTA_CONTRATO_LAST END) * (12 / TD.PERIODICIDAD_RENTA)) 
        - (TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS * 12  +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12)
        ) 
       + LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12 
       ) 
      - LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12
      ) 
      * (1+CRECIMIENTO_PERPETUO) / (WACC - PROMEDIO_20_ANIO_PEN)
      ELSE COALESCE(  COALESCE(FCO.FCO_PROYECTADO,0) 
          - COALESCE(NOF.NOF_PROYECTADO,0) 
          - COALESCE((CASE WHEN TD.PERIODICIDAD_RENTA = 1 AND ORDEN_NUMERACION = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN  ELSE 0 END),0),0
         ) * 12 * (1 + CRECIMIENTO_PERPETUO) / (WACC - CRECIMIENTO_PERPETUO)
      END AS FCC_PROYECTADO
-- BLOQUE PERIODICIDAD_RENTA = 12 
#Método flujo anual
--,M2_CPSA / NULLIF(M2_TERRENO_TOTAL,0) AS PORCENTAJE_TOTAL
--,(M2_CPSA / NULLIF(M2_TERRENO_TOTAL,0)) * VALOR_TASACION AS VALOR_ASIGNABLE
--,( (M2_CPSA / NULLIF(M2_TERRENO_TOTAL,0)) * VALOR_TASACION ) * POW(POW((1 + CRECIMIENTO_PERPETUO),1/12),COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE)) AS TERMINAL_1
#valor_asignable*((1+crec_perpetuo)**(1/12))**len(vect_FCC_proyectados)
--,COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE) AS LONGITUD_VECTOR
--,(VALOR_EDIFICACION + VALOR_OBRAS_COMPL) / NULLIF(ANIOS_DEPRECIACION,0) / 12  AS DEPRECIACION_MENSUAL
--,((VALOR_EDIFICACION + VALOR_OBRAS_COMPL) / NULLIF(ANIOS_DEPRECIACION,0)  / 12) * COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE) AS DEPRECIACION_ACUMULADA
--,VALOR_EDIFICACION + VALOR_OBRAS_COMPL + ((VALOR_EDIFICACION + VALOR_OBRAS_COMPL) / NULLIF(ANIOS_DEPRECIACION,0)  / 12) * COUNT(DISTINCT TD.MES) OVER(PARTITION BY TD.INMUEBLE_NOMBRE) AS TERMINAL_2
#vect_FCC_proyectados[-1] =(valor_terminal_1+valor_terminal_2)

-- BLOQUE 2 PERIODICIDAD_RENTA <> 1
--,LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) AS MONTO_DEPRECIACION_PROYECTADO
--,RENTA_CONTRATO_LAST * (12 / TD.PERIODICIDAD_RENTA) AS INGRESOS
--,TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS * 12  +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12  AS EGRESOS
#egresos=vect_b5_egr_gastos_pred_proyectados[-1]*12+vector_depr[ubic_ult_renta+1]*12
--,((RENTA_CONTRATO_LAST * (12 / TD.PERIODICIDAD_RENTA)) - (TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS * 12  +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12)) * PORC_IMPUESTO_RENTA AS IMPUESTO_RENTA
#imp_rent=(ingresos-egresos)*porc_impuesto_renta
--,((RENTA_CONTRATO_LAST * (12 / TD.PERIODICIDAD_RENTA)) - (TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS * 12  +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12)) + LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12 AS FCO

--,CASE WHEN  TD.PERIODICIDAD_RENTA = 1 AND ORDEN_NUMERACION = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN ELSE 0 END AS CAPEX

--,(((RENTA_CONTRATO_LAST * (12 / TD.PERIODICIDAD_RENTA)) - (TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS * 12  +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12)) +  LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) * 12 ) - 
-- LEAD(TD.MONTO_DEPRECIACION_PEN)OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) *12  AS FCL

--BLOQUE 3
--,COALESCE(  COALESCE(FCO.FCO_PROYECTADO,0) 
--          - COALESCE(NOF.NOF_PROYECTADO,0) 
--          - COALESCE((CASE WHEN TD.PERIODICIDAD_RENTA = 1 AND ORDEN_NUMERACION = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN  ELSE 0 END),0),0
--         ) * 12 * (1 + CRECIMIENTO_PERPETUO) / (WACC - CRECIMIENTO_PERPETUO) AS FCC_PROYECTADO_3
--,ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) AS NUMERACION_ORDEN
,ORDEN_NUMERACION
 FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS_2_PROY` TD
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_UTILIDAD_OPERATIVA_FLUJO_CAJA_OPERATIVO` FCO
        ON TD.MES = FCO.MES
       AND TD.INMUEBLE_NOMBRE = FCO.INMUEBLE_NOMBRE
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_NOF_PERIODO_PROY` NOF
        ON TD.MES = NOF.MES
       AND TD.INMUEBLE_NOMBRE = NOF.INMUEBLE_NOMBRE
--WHERE TD.INMUEBLE_NOMBRE = 'CPSA Puruchuco'
)
SELECT 
MES
,INMUEBLE_NOMBRE
,INMUEBLE_LEGALIDAD
,PERIODICIDAD_RENTA
,TC_PROYECTADO_TFORM
,ORDEN_NUMERACION
,EGRESOS_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,MONTO_DEPRECIACION_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,CAPEX
,FCO_PROYECTADO
,NOF_PROYECTADO
,FCL_PROYECTADO
,CASE WHEN ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) = COUNT(*)OVER(PARTITION BY INMUEBLE_NOMBRE) THEN 
                        (CASE WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND PERIODICIDAD_RENTA = 12 THEN FCC_PROYECTADO
                              WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND PERIODICIDAD_RENTA <> 1 THEN MAX(FCC_PROYECTADO)OVER(PARTITION BY INMUEBLE_NOMBRE)
                              ELSE (CASE WHEN ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) = COUNT(*)OVER(PARTITION BY INMUEBLE_NOMBRE) 
                                         THEN FCC_PROYECTADO END
                                   )
                              END
                        )
      ELSE NULL END AS FCC_PROYECTADO
FROM TMP_LANDING
;

-------------------------------------------------------------------------------
-- Entregable final del modelo de proyeccion valorizacion inmuebles - Duplicado
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_DUPLICADOS_VALORIZADOS`
AS
SELECT 
 TAB.MES
,TAB.FECHA_VALORIZACION
,TAB.INMUEBLE_NOMBRE
,TAB.RENTA_PROYECTADO_LAST #A.1 Proyeccion_Ingresos': vect_rentas_proyectadas,
,TAB.RENTAS_CASTIGADAS_PROYECTADAS #A. Proyeccion_Ingresos_Castigados': vect_rentas_castigadas_proyectadas,
,COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)                AS MONTO_HIST_GASTOS_ADM_PROYECTADO #B.1 Proyeccion_Gastos_Administrativos': vect_b1_egr_gastos_adm_proyectados,
,COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_GASTOS_OP_PROYECTADO #B.2 Proyeccion_Gastos_Operacionales': vect_b2_egr_gastos_oper_proyectados,
,COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_ARBITRIOS_PROYECTADO #B.3 Proyeccion_Gastos_Arbitrios': vect_b3_egr_gastos_arb_proyectados,
,COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)   / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_SEGUROS_PROYECTADO #B.4 Proyeccion_Gastos_Seguro': vect_b4_egr_gastos_seg_proyectados,
,COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)   / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_PREDIAL_PROYECTADO #B.5 Proyeccion_Gastos_Predial': vect_b5_egr_gastos_pred_proyectados,
,EGRESOS_PROYECTADO #B. Proyeccion_Egresos': vect_egr_proyectados,
,FCC.MONTO_DEPRECIACION_PROYECTADO #C.1 Proyeccion_Depreciacion': vector_depr,
,FCC.UTILIDAD_OPERATIVA_PROYECTADO #C. Proyeccion_Utilidad_Operativa:': vect_util_operativa_proyectados,
,FCC.IMPUESTO_RENTA_PROYECTADO #D.1 Proyeccion_Impuestos_Renta': vect_impuesto_renta_proyectados,
,FCC.FCO_PROYECTADO #D. Proyeccion_FCO': vect_FCO_proyectados,
,FCC.NOF_PROYECTADO AS NOF_PROYECTADO_VAR #E.1 Proyeccion_Variacion_NOF': vect_var_NOF_proyectados,
,TAB.RENTAS_CASTIGADAS_PROYECTADAS AS NOF_PROYECTADO #E.2 Proyeccion_NOF': vect_NOF_proyectados,
,FCC.CAPEX #E.3 Proyeccion_Capex': vect_capex_proyectados,
,FCC.FCL_PROYECTADO # E. Proyeccion_FCL': vect_FCL_proyectados,
,FCC.FCC_PROYECTADO # F. Proyeccion_FCC': vect_FCC_proyectados,
,TAB.TARIFA_METROS2 # Renta m2': vect_tarifa_m2
,TAB.ORDEN_NUMERACION
,TAB.WACC
,TAB.CRECIMIENTO_PERPETUO
,TAB.MONEDA_RENTA
,TAB.TC_USDPEN
FROM  `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_UNIARRENDATARIOS_2_PROY` TAB
INNER JOIN  `iter-data-storage-pv-uat.temp.TMP_FCC_PERIODO_PRO` FCC
       ON TAB.MES = FCC.MES
      AND TAB.INMUEBLE_NOMBRE = FCC.INMUEBLE_NOMBRE
;

########################################################################################################################
--                                           CALULOS PARA INMUEBLES UNICOS
########################################################################################################################

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS`
AS
SELECT 
A.INMUEBLE_NOMBRE
,A.INDICADOR_VALORIZACION
,A.INMUEBLE_AREA
,A.FECHA_VALORIZACION
,A.INMUEBLE_COLOCACION
,A.TIPO_INMUEBLE
,A.FECHA_VENCIMIENTO
,A.INMUEBLE_LEGALIDAD
,A.MONEDA_RENTA
,A.FECHA_INICIO
,A.MONTO_ULTIMA_RENTA_PERITO
,A.FECHA_VENCIMIENTO_PERITO
,A.MES_AJUSTE_RENTA
,A.MONTO_ULTIMA_RENTA
,A.PERIODICIDAD_RENTA
,A.FECHA_ULTIMA_RENTA
,A.PORC_GASTOS_ADM
,A.MES_AJUSTE_RENTA_PERITO
,A.MONTO_HIST_ARBITRIOS
,A.PERIODICIDAD_RENTA_PERITO
,A.MONTO_HIST_PREDIAL
,A.MONTO_HIST_GASTOS_OP
,A.MONTO_DEPRECIACION
,A.MONTO_HIST_SEGUROS
,A.TIPO_AJUSTE_RENTA
,A.PORC_HIST_INCOBRABILIDAD
,A.VALOR_REFERENCIAL_AJUSTE_RENTA
,A.PORC_IMPUESTO_RENTA
,A.INDICE_REFERENCIAL_AJUSTE_RENTA_2
,A.INDICE_REFERENCIAL_AJUSTE_RENTA
,A.VACANCIA_PROM_MENSUAL
,A.TIPO_AJUSTE_RENTA_2
,A.WACC_PEN
,A.REVALUACION_ACUMULADA_RENTA
,A.PROMEDIO_20_ANIO_PEN
,A.NOMBRE_CORTO
,A.FECHA_VALORIZACION_10_YEAR
,A.WACC_USD
,A.FECHA_RECOLOCACION_ADJ
,A.PROMEDIO_20_ANIO_USD
,A.FECHA_PROYECCION_INICIO
,A.FECHA_VENCIMIENTO_ADJ
,A.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,A.FECHA_MAX_PROJ
,A.FECHA_SIGUIENTE_RENTA
,A.FECHA_PROYECCION_FIN
,A.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,LAST_DAY(DATE_ADD(A.FECHA_VALORIZACION,INTERVAL 10 YEAR),MONTH) AS FECHA_10A_VALORIZACION
,SEG.MONTO_PEN  AS MONTO_SEGUROS_PEN
,AR.MONTO_PEN   AS MONTO_ARBITRIOS_PEN
,PRE.MONTO_PEN  AS MONTO_PREDIALES_PEN
,DE.MONTO_PEN   AS MONTO_DEPRECIACION_PEN
,GA.MONTO_PEN   AS MONTO_GASTOS_PEN
#porc_hist_incobrabilidad = df_data_inmuebles.loc[filaprueba, 'porc_hist_incobrabilidad'] viene de la otra base ojo  ES INCORRECTO EN EL PYTHON
#porc_impuesto_renta=df_data_inmuebles.loc[filaprueba, 'porc_impuesto_renta'] -- ES INCORRECTO EN EL PYTHON
FROM  `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_RENTAS` A
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` SEG
       ON A.FECHA_VALORIZACION = SEG.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = SEG.INMUEBLE_NOMBRE
      AND SEG.CONCEPTO_EGRESO ='SEGUROS'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` AR
       ON A.FECHA_VALORIZACION = SEG.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = AR.INMUEBLE_NOMBRE
      AND AR.CONCEPTO_EGRESO ='ARBITRIOS'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` PRE
       ON A.FECHA_VALORIZACION = PRE.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = PRE.INMUEBLE_NOMBRE
      AND PRE.CONCEPTO_EGRESO ='PREDIALES'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` DE
       ON A.FECHA_VALORIZACION = DE.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = DE.INMUEBLE_NOMBRE
      AND DE.CONCEPTO_EGRESO ='DEPRECIACIÓN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_EGRESOS` GA
       ON A.FECHA_VALORIZACION = GA.FECHA_ACTUALIZACION 
      AND A.INMUEBLE_NOMBRE = GA.INMUEBLE_NOMBRE
      AND GA.CONCEPTO_EGRESO ='GASTOS ADMINISTRATIVOS'
--LEFT JOIN `iter-data-storage-pv-uat.temp.PLNT_VARIABLES_WACC` W
--       ON A.FECHA_VALORIZACION = W.FECHA_CORTE
WHERE A.INDICADOR_VALORIZACION NOT IN (SELECT INDICADOR_VALORIZACION
                                       FROM `iter-data-storage-pv-uat.temp.TMP_INMUEBLES_RENTAS`
                                       GROUP BY INDICADOR_VALORIZACION 
                                       HAVING COUNT(1)>1
                                      )
;

-------------------------------------------------------------------------------
-- Se hace la proyeccion renta contrato
-------------------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_RENTA`
AS
SELECT 
 LAST_DAY(MES,MONTH) AS MES
,TAB.INDICADOR_VALORIZACION
,TAB.FECHA_VALORIZACION
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.TIPO_AJUSTE_RENTA_2
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA_2
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.VACANCIA_PROM_MENSUAL
,TAB.NOMBRE_CORTO
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_VALORIZACION_10_YEAR
,TAB.FECHA_VENCIMIENTO_ADJ
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ
,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
,INFI.MONTO
#Definimos ajuste inflación INICIO
#VALIDADO
,CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
      WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
      WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL
      END AS INFLACION_PROYECCION

,1 AS AJUSTE_INFLACION

#VALIDADO
,EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC)) AS AJUSTE_INGRESO

--,EXP(SUM(LOG(
,CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND TAB.TIPO_AJUSTE_RENTA_2 = 'INDICE' THEN INFI_2.MONTO + 1 ELSE NULL END  AS AJUSTE_INGRESO_2
--)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC)) AS AJUSTE_INGRESO_2


#VALIDADO
,SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA ELSE 0 END ) OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES) AS AJUSTE_ARITMETICO

#Definimos ajuste inflación FIN
#VALIDADO

--,CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)
--      END AS FECHA_SIGUIENTE_RENTA_CALC

--,CASE WHEN PERIODICIDAD_RENTA = 12 THEN (CASE WHEN EXTRACT(MONTH FROM LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH)) = EXTRACT(MONTH FROM TAB.FECHA_SIGUIENTE_RENTA) 
--                                              THEN LAST_DAY(DATE_ADD(MES, INTERVAL PERIODICIDAD_RENTA MONTH),MONTH) END) 
--      ELSE DATE_ADD(FECHA_SIGUIENTE_RENTA,INTERVAL (ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1) MONTH )
--      END AS FECHA_SIGUIENTE_RENTA_CALC
,CASE WHEN MOD( ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) ,PERIODICIDAD_RENTA) = 0 
      THEN DATE_ADD(FECHA_SIGUIENTE_RENTA, INTERVAL ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - PERIODICIDAD_RENTA MONTH)  
      END AS FECHA_SIGUIENTE_RENTA_CALC
--,ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - 1  AS NUMERACION

/*
fecha_siguiente_renta += pd.DateOffset(months = periodicidad_renta)
*/
#VALIDADO --> PERO CAMBIA EL VALOR RESPECTO AL PYTHON 16291.41665 por un tema de decimales aparentemente
,IF(EXTRACT(MONTH FROM MES) = EXTRACT(MONTH FROM (CASE WHEN MOD(ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) ,PERIODICIDAD_RENTA) = 0 
                                                       THEN DATE_ADD(FECHA_SIGUIENTE_RENTA, INTERVAL ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - PERIODICIDAD_RENTA MONTH)  
                                                       END
                                                 )
                                     )
      ,(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN MONTO_ULTIMA_RENTA + (SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA 
                                                                                           ELSE 0 END 
                                                                                     )OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                 ) 
             ELSE MONTO_ULTIMA_RENTA * (EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 + 
                                                                                    (CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                                    )
                                                         ELSE 1 END
                                                     )) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES))
                                       )     
             END
       )
      ,0) AS RENTA_PROYECTADA

,CASE WHEN MONEDA_RENTA = 'USD'THEN  IF(CPI_USD_MA_2.MONTO<>0,CPI_USD_MA.MONTO / CPI_USD_MA_2.MONTO ,0)
      ELSE IF(IPC_PEN_MA_2.MONTO<>0,IPC_PEN_MA.MONTO / IPC_PEN_MA_2.MONTO ,0) END AS AJUSTE_MENSUAL_INGRESO

,COALESCE(
CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) <= FECHA_RECOLOCACION_ADJ THEN 0 
                                                                     WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' THEN 0
                                                                     END
                                                               )
      ELSE (
      IF(EXTRACT(MONTH FROM MES) = EXTRACT(MONTH FROM ((CASE WHEN MOD(ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) ,PERIODICIDAD_RENTA) = 0 
                                                             THEN DATE_ADD(FECHA_SIGUIENTE_RENTA, INTERVAL ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) - PERIODICIDAD_RENTA MONTH)  
                                                             END
                                                        )
                                                      )
                                          )
      ,(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN MONTO_ULTIMA_RENTA + (SUM(CASE WHEN EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA 
                                                                                           ELSE 0 END 
                                                                                     )OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                 ) 
             ELSE MONTO_ULTIMA_RENTA * (EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN 1 + 
                                                                                    (CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                                          WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                                    )
                                                         ELSE 1 END
                                                     )) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES))
                                       )     
        END
       )
      ,0) ) END,0
         ) AS RENTA_CONTRATO -- df_proyeccion_ultima_renta - vect_rentas_contrato_last --> APARENTEMENTE ESTA OK 
,CPI_USD.MONTO AS MONTO_CPI_USD
,CPI_USD_MA.MONTO AS MONTO_CPI_USD_MA
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
FROM (SELECT 
      GENERATE_DATE_ARRAY(FECHA_PROYECCION_ULTIMA_RENTA_INICIO,FECHA_PROYECCION_ULTIMA_RENTA_FIN,INTERVAL 1 MONTH) AS MESES , * 
      FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS`
      ) TAB
     ,UNNEST(TAB.MESES) MES
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INF
       ON INF.FECHA = LAST_DAY(MES,MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INF.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INFI
       ON INFI.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INFI.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INFI_2
       ON INFI_2.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA_2 = INFI_2.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD
       ON CPI_USD.FECHA = LAST_DAY(MES,MONTH)
      AND CPI_USD.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD_MA
       ON CPI_USD_MA.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND CPI_USD_MA.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN
       ON IPC_PEN.FECHA = LAST_DAY(MES,MONTH)
      AND IPC_PEN.DESCRIPCION ='IPC_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = LAST_DAY(DATE_SUB(MES,INTERVAL 1 MONTH),MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='IPC_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD_MA_2
       ON CPI_USD_MA_2.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 2 MONTH),MONTH)
      AND CPI_USD_MA_2.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA_2
       ON IPC_PEN_MA_2.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 2 MONTH),MONTH)
      AND IPC_PEN_MA_2.DESCRIPCION ='IPC_PEN'
;
-------------------------------------------------------------------------------
-- Calculos finales de rentas unicos Proy
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY`
AS
SELECT
LAST_DAY(MES,MONTH) AS MES
,TAB.FECHA_VALORIZACION
--,TAB.ID_INMUEBLE
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.NOMBRE_CORTO
--,TAB.VALOR_TASACION
--,TAB.M2_TERRENO_TOTAL
--,TAB.M2_CPSA
--,TAB.VALOR_EDIFICACION
--,TAB.VALOR_OBRAS_COMPL
--,TAB.ANIOS_DEPRECIACION
--,TAB.FECHA_10A_VALORIZACION
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ

,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
--,INFI.MONTO AS INF_PEN
#Definimos ajuste inflación INICIO
--> Calculo Validado
,TAB.INFLACION_PROYECCION
--> Ajuste de Ingreso 
,EXP(SUM(LOG(CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA  AND LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN 1 +(CASE WHEN TAB.TIPO_AJUSTE_RENTA = 'INDICE'     THEN INFI.MONTO
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'VALOR FIJO' THEN TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MAX'        THEN GREATEST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'MIN'        THEN LEAST(INFI.MONTO , TAB.VALOR_REFERENCIAL_AJUSTE_RENTA)
                                                                         WHEN TAB.TIPO_AJUSTE_RENTA = 'ARITMÉTICO' THEN NULL END    
                                                                   )
          ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)) AS AJUSTE_INGRESO
#if fecha.month == mes_ajuste_renta:
#   ajuste_ingreso = (1 + inflacion_proyeccion)


,CASE WHEN EXTRACT(MONTH FROM MES) = TAB.MES_AJUSTE_RENTA THEN VALOR_REFERENCIAL_AJUSTE_RENTA * INMUEBLE_AREA
      ELSE 0 END AS AJUSTE_ARITMETICO
#Definimos ajuste inflación FIN

--,CPI_USD_MA.MONTO,CPI_USD.MONTO,CPI_USD_MA.MONTO

,CASE WHEN MONEDA_RENTA = 'USD'THEN  IF(CPI_USD_MA.MONTO<>0,CPI_USD.MONTO / CPI_USD_MA.MONTO ,0)
      ELSE IF(IPC_PEN.MONTO<>0,IPC_PEN.MONTO / IPC_PEN_MA.MONTO ,0) END AS AJUSTE_MENSUAL_INGRESO

#Todo validado hacia atras

#Variable que te ayuda a verificar la primera iteracion de n para empezar con 0 
,ROW_NUMBER()OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES ASC) AS ORDEN_NUMERACION --> CREO NO ES NECESARIO
,FECHA_VENCIMIENTO_ADJ

#Todos los valores en los cuales son VERDADEROS
,INMUEBLE_AREA AS AREA_METROS2_LAST
,CASE WHEN LAST_DAY(MES,MONTH) <= FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA END AS AREA_METROS2_CONTRATO_LAST
,CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
      WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
      ELSE NULL END AS AREA_METROS2_SIN_CONTRATO
,CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
      ELSE NULL END AS AREA_METROS2_RECOLOCACION_LAST
--, AS AREA_METROS2_SIN_CONTRATO

--,RENTA_CONTRATO  / NULLIF(INMUEBLE_AREA,0) AS PRECIO_METROS2_LAST
,RENTA_CONTRATO  / INMUEBLE_AREA AS PRECIO_METROS2_CONTRATO_LAST

,CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN COALESCE(
CASE WHEN TIPO_INMUEBLE='EDIFICIO' THEN EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN 
                                                                             (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
                                                                             )   
      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                                                 WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                                                 ELSE NULL END)
      
      ELSE RENTA_PROYECTADA / INMUEBLE_AREA * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                    WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                    ELSE INMUEBLE_AREA END)

      END,0) / INMUEBLE_AREA ELSE 0 END AS PRECIO_METROS2_SIN_CONTRATO

--,IF((EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) = 1
--      
--      ,RENTA_PROYECTADA / INMUEBLE_AREA
--      ,(EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--                    ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) 
--    )  AS  PRECIO_METROS2_SIN_CONTRATO

,RENTA_CONTRATO AS RENTA_CONTRATO_LAST

,COALESCE(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN TIPO_INMUEBLE='EDIFICIO' THEN EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN 
                                                                             (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
                                                                             )   
      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                                                 WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                                                 ELSE INMUEBLE_AREA END)
      
      ELSE RENTA_PROYECTADA / INMUEBLE_AREA * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                    WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                    ELSE INMUEBLE_AREA END)

      END)
      ELSE RENTA_CONTRATO END,0) AS RENTA_PROYECTADO_LAST
,COALESCE(
CASE WHEN TIPO_INMUEBLE='EDIFICIO' THEN EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN 
                                                                             (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
                                                                             )   
      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES)) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                                                 WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                                                 ELSE NULL END)
      
      ELSE RENTA_PROYECTADA / INMUEBLE_AREA * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
                                                    WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
                                                    ELSE NULL END)

      END,0) AS RENTA_SIN_CONTRATO

--,COALESCE(
--IF((EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) = 1
--      
--      ,RENTA_PROYECTADA / INMUEBLE_AREA
--      ,(EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--                    ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) 
--    ) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
--              WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
--              ELSE INMUEBLE_AREA END),0
--        ) AS RENTA_PROYECTADO_LAST

--,COALESCE(
--IF((EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--      ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) = 1
--      
--      ,RENTA_PROYECTADA / INMUEBLE_AREA
--      ,(EXP(SUM(LOG(CASE WHEN LAST_DAY(MES,MONTH) > TAB.FECHA_VENCIMIENTO_ADJ THEN (CASE WHEN LAST_DAY(MES,MONTH) = LAST_DAY(DATE_ADD(FECHA_RECOLOCACION_ADJ,INTERVAL 1 MONTH),MONTH) AND TIPO_INMUEBLE='EDIFICIO' 
--                                                                                   THEN (RENTA_PROYECTADA / INMUEBLE_AREA) * MONTO_CPI_USD_MA / MONTO_CPI_USD * ( 1 + 0.10) 
--                                                                                   ELSE IF(EXTRACT(MONTH FROM LAST_DAY(MES,MONTH)) = MES_AJUSTE_RENTA AND TIPO_INMUEBLE='EDIFICIO',AJUSTE_INGRESO_2,AJUSTE_INGRESO) END
--                                                                             )   
--                    ELSE 1 END)) OVER (PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY MES))) 
--    ) * (CASE WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ AND LAST_DAY(MES,MONTH)<=LAST_DAY(FECHA_RECOLOCACION_ADJ,MONTH) THEN 0
--              WHEN LAST_DAY(MES,MONTH) > FECHA_VENCIMIENTO_ADJ THEN INMUEBLE_AREA
--              ELSE NULL END),0
--        ) AS RENTA_SIN_CONTRATO                                                            
/*
else:
    #renta_contrato_proy = renta_proyectada
    vect_area_m2_contrato_last[n] = inmueble_area
    vect_precio_m2_sincontrato_last[n] = vect_rentas_contrato_last[n] / inmueble_area
    vect_area_m2_sincontrato_last[n] = 0
*/
--,INF.DESCRIPCION
FROM  `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_RENTA` TAB
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INF
       ON INF.FECHA = MES --> NO SIRVE
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INF.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` INFI
       --ON INFI.FECHA = DATE_ADD(DATE_TRUNC(MES,MONTH),INTERVAL 1 DAY)
       ON INFI.FECHA = LAST_DAY(DATE_SUB(LAST_DAY(MES,MONTH),INTERVAL 1 MONTH),MONTH)
      AND TAB.INDICE_REFERENCIAL_AJUSTE_RENTA = INFI.DESCRIPCION
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD
       ON CPI_USD.FECHA = LAST_DAY(MES,MONTH)
      AND CPI_USD.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` CPI_USD_MA
       ON CPI_USD_MA.FECHA = LAST_DAY(DATE_SUB(MES,INTERVAL 1 MONTH))
      AND CPI_USD_MA.DESCRIPCION ='CPI_USD'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN
       ON IPC_PEN.FECHA = MES
      AND IPC_PEN.DESCRIPCION ='IPC_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = DATE_SUB(MES,INTERVAL 1 MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='IPC_PEN'
--WHERE TAB.INMUEBLE_NOMBRE LIKE '%Tabacalera - Atento%'
--WHERE TAB.INMUEBLE_NOMBRE = 'CPSA Puruchuco'
--where INMUEBLE_NOMBRE='Cineplex'
--WHERE INMUEBLE_NOMBRE='UTP Ate'
--ORDER BY INMUEBLE_NOMBRE ASC, MES ASC
;

-------------------------------------------------------------------------------
-- Variables de montos de egresos junto con rentas castigadas
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_EGRESOS`
AS
SELECT 
TAB.MES
,TAB.FECHA_VALORIZACION
--,TAB.ID_INMUEBLE
,TAB.INMUEBLE_NOMBRE
,TAB.TIPO_INMUEBLE
,TAB.INMUEBLE_AREA
,TAB.INMUEBLE_LEGALIDAD
,TAB.INMUEBLE_COLOCACION
,TAB.FECHA_INICIO
,TAB.FECHA_VENCIMIENTO
,TAB.FECHA_VENCIMIENTO_PERITO
,TAB.MONEDA_RENTA
,TAB.MONTO_ULTIMA_RENTA
,TAB.MONTO_ULTIMA_RENTA_PERITO
,TAB.FECHA_ULTIMA_RENTA
,TAB.MES_AJUSTE_RENTA
,TAB.MES_AJUSTE_RENTA_PERITO
,TAB.PERIODICIDAD_RENTA
,TAB.PERIODICIDAD_RENTA_PERITO
,TAB.PORC_GASTOS_ADM
,TAB.MONTO_HIST_GASTOS_OP
,TAB.MONTO_HIST_ARBITRIOS
,TAB.MONTO_HIST_SEGUROS
,TAB.MONTO_HIST_PREDIAL
,TAB.PORC_HIST_INCOBRABILIDAD
,TAB.MONTO_DEPRECIACION
,TAB.PORC_IMPUESTO_RENTA
,TAB.TIPO_AJUSTE_RENTA
,TAB.INDICE_REFERENCIAL_AJUSTE_RENTA
,TAB.VALOR_REFERENCIAL_AJUSTE_RENTA
,TAB.REVALUACION_ACUMULADA_RENTA
,TAB.NOMBRE_CORTO
--,TAB.VALOR_TASACION
--,TAB.M2_TERRENO_TOTAL
--,TAB.M2_CPSA
--,TAB.VALOR_EDIFICACION
--,TAB.VALOR_OBRAS_COMPL
--,TAB.ANIOS_DEPRECIACION
--,TAB.FECHA_10A_VALORIZACION
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
--,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
,TAB.WACC_PEN
,TAB.WACC_USD
,TAB.PROMEDIO_20_ANIO_PEN
,TAB.PROMEDIO_20_ANIO_USD
,TAB.FECHA_RECOLOCACION_ADJ
,TAB.FECHA_MAX_PROJ
,TAB.FECHA_PROYECCION_INICIO
,TAB.FECHA_PROYECCION_FIN
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_INICIO
,TAB.FECHA_PROYECCION_ULTIMA_RENTA_FIN
,TAB.FECHA_SIGUIENTE_RENTA
--,TAB.INFLACION_PROYECCION
,TAB.AJUSTE_INGRESO
,TAB.AJUSTE_ARITMETICO
,TAB.AJUSTE_MENSUAL_INGRESO
,TAB.ORDEN_NUMERACION
,TAB.FECHA_VENCIMIENTO_ADJ
,TAB.PRECIO_METROS2_SIN_CONTRATO
--,TAB.AREA_METROS2_SIN_CONTRATO
,TAB.PRECIO_METROS2_CONTRATO_LAST
,TAB.AREA_METROS2_SIN_CONTRATO
,TAB.AREA_METROS2_RECOLOCACION_LAST  
,TAB.RENTA_SIN_CONTRATO
,TAB.RENTA_PROYECTADO_LAST
,TAB.RENTA_CONTRATO_LAST
,TAB.RENTA_PROYECTADO_LAST * (1 - TAB.PORC_HIST_INCOBRABILIDAD) AS RENTAS_CASTIGADAS_PROYECTADAS --> CONSULTAR
,TAB.PORC_GASTOS_ADM * TAB.RENTA_PROYECTADO_LAST * (1 - TAB.PORC_HIST_INCOBRABILIDAD)AS EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS
,TAB.PRECIO_METROS2_CONTRATO_LAST + TAB.PRECIO_METROS2_SIN_CONTRATO AS TARIFA_METROS2

,CASE WHEN EXTRACT(MONTH FROM MES)=1 THEN IPC_PEN_MA.MONTO END AS INFLACION_PROYECCION --> SE REALIZA TODOS LOS ENERO DE CADA AÑO

,EXP(SUM(LOG(IF(TAB.TIPO_INMUEBLE = 'EDIFICIO',1,CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO ELSE 1 END))) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)) AS AJUSTE_EGRESO --> SE REALIZA TODOS LOS ENERO DE CADA AÑO
# CALCULO --> AJUSTE_EGRESO * MONTO_HIST_GASTOS_OP
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_GASTOS_PEN * EXP(SUM(LOG(IF(TAB.TIPO_INMUEBLE = 'EDIFICIO',1,CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                                                         ELSE 1 END))) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       )  END  AS MONTO_HIST_GASTOS_OP_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_ARBITRIOS_PEN * EXP(SUM(LOG(IF(TAB.TIPO_INMUEBLE = 'EDIFICIO',1,CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                                                         ELSE 1 END))) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       )  END AS MONTO_HIST_ARBITRIOS_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_SEGUROS_PEN * EXP(SUM(LOG(IF(TAB.TIPO_INMUEBLE = 'EDIFICIO',1,CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                                                         ELSE 1 END))) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       ) END AS MONTO_HIST_SEGUROS_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN MONTO_PREDIALES_PEN * EXP(SUM(LOG(IF(TAB.TIPO_INMUEBLE = 'EDIFICIO',1,CASE WHEN EXTRACT(MONTH FROM MES)=1 AND ORDEN_NUMERACION <> 1 THEN 1 + IPC_PEN_MA.MONTO 
                                                                                                                                                         ELSE 1 END))) OVER (PARTITION BY INMUEBLE_NOMBRE ORDER BY MES)
                                                                                                       ) END AS MONTO_HIST_PREDIAL_PROYECTADO
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TC_USDPEN.MONTO END AS TC_USDPEN

/*
,TAB.MONTO_SEGUROS_PEN
,TAB.MONTO_ARBITRIOS_PEN
,TAB.MONTO_PREDIALES_PEN
--,TAB.MONTO_DEPRECIACION_PEN
,TAB.MONTO_GASTOS_PEN
*/
,CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TAB.MONTO_DEPRECIACION_PEN  END AS MONTO_DEPRECIACION_PEN
,IF(MONEDA_RENTA='USD',(CASE WHEN TAB.MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN THEN TC_USDPEN.MONTO END),1) AS TC_PROYECTADO_TFORM

,IF(MONEDA_RENTA='USD',WACC_USD,WACC_PEN) AS WACC
,IF(MONEDA_RENTA='USD',PROMEDIO_20_ANIO_USD,PROMEDIO_20_ANIO_PEN) AS CRECIMIENTO_PERPETUO
,COUNT(IF(TAB.RENTA_CONTRATO_LAST IS NOT NULL,TAB.MES,NULL))OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY TAB.MES ASC) AS ORDEN_CONTRATO
#vect_rentas_contrato_last[n] + vect_rentas_sincontrato_last[n]
FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY`TAB 
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` IPC_PEN_MA
       ON IPC_PEN_MA.FECHA = DATE_SUB(TAB.MES,INTERVAL 1 MONTH)
      AND IPC_PEN_MA.DESCRIPCION ='INF_PEN'
LEFT JOIN `iter-data-storage-pv.inputfiles.IV_INFLACION` TC_USDPEN
       ON TC_USDPEN.FECHA = TAB.MES
      AND TC_USDPEN.DESCRIPCION ='TC_USDPEN'
--WHERE TAB.INMUEBLE_NOMBRE LIKE 'CPSA Trujillo'
ORDER BY TAB.MES ASC
;

-------------------------------------------------------------------------------
-- Utilidad operativa del flujo de caja operativo
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UTILIDAD_OPERATIVA_FLUJO_CAJA_OPERATIVO_UNICOS`
AS
SELECT 
MES
,INMUEBLE_NOMBRE
,EGRESOS_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,TC_PROYECTADO_TFORM
,MONTO_DEPRECIACION_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,RENTAS_CASTIGADAS_PROYECTADAS
,CASE WHEN MES > FECHA_VENCIMIENTO AND INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0
      ELSE  UTILIDAD_OPERATIVA_PROYECTADO - IMPUESTO_RENTA_PROYECTADO + MONTO_DEPRECIACION_PROYECTADO END AS FCO_PROYECTADO
FROM (SELECT 
       MES
      ,INMUEBLE_NOMBRE
      ,INMUEBLE_LEGALIDAD
      ,(  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0) AS EGRESOS_PROYECTADO
      ,RENTAS_CASTIGADAS_PROYECTADAS - ((  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)) - (MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) AS UTILIDAD_OPERATIVA_PROYECTADO
      ,TC_PROYECTADO_TFORM
      ,(MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) AS MONTO_DEPRECIACION_PROYECTADO
      ,(RENTAS_CASTIGADAS_PROYECTADAS - ((  COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) 
        + COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)
        + COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)
        ) / TC_PROYECTADO_TFORM + COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)) - (MONTO_DEPRECIACION_PEN / TC_PROYECTADO_TFORM) ) * PORC_IMPUESTO_RENTA AS IMPUESTO_RENTA_PROYECTADO
      ,RENTAS_CASTIGADAS_PROYECTADAS
      ,FECHA_VENCIMIENTO
       FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_EGRESOS`
    )
;

-------------------------------------------------------------------------------
-- Generar Nof por periodo
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_NOF_PERIODO_PROY_UNICOS`
AS
SELECT
 MES
,INMUEBLE_NOMBRE
,PERIODICIDAD_RENTA
,MES_AJUSTE_RENTA
,RENTAS_CASTIGADAS_PROYECTADAS
,MONTO_ULTIMA_RENTA
,PORC_HIST_INCOBRABILIDAD
,CASE WHEN MES_AJUSTE_RENTA = 1 THEN COALESCE((NOF_PROYECTADO - LAG(NOF_PROYECTADO)OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC)),IF(MES_AJUSTE_RENTA=1,NOF_PROYECTADO,NULL))
      ELSE LAST_VALUE(IF(RENTAS_CASTIGADAS_PROYECTADAS = 0,NULL,RENTAS_CASTIGADAS_PROYECTADAS)IGNORE NULLS) OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC)
          - LAST_VALUE(IF(LAG_RENTAS_CASTIGADAS_PROYECTADAS = 0,NULL,LAG_RENTAS_CASTIGADAS_PROYECTADAS) IGNORE NULLS)OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC)
      END AS NOF_PROYECTADO
FROM (SELECT 
       MES
      ,INMUEBLE_NOMBRE
      ,PERIODICIDAD_RENTA
      ,MES_AJUSTE_RENTA
      ,RENTAS_CASTIGADAS_PROYECTADAS
      ,MONTO_ULTIMA_RENTA
      ,CASE WHEN MES_AJUSTE_RENTA = 1 THEN IF(MES_AJUSTE_RENTA = EXTRACT(MONTH FROM MES) ,RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD),NULL) 
            ELSE RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD)   END AS PORC_HIST_INCOBRABILIDAD

      ,LAST_VALUE(CASE WHEN MES_AJUSTE_RENTA = 1 THEN IF(MES_AJUSTE_RENTA = EXTRACT(MONTH FROM MES) ,RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD),NULL) 
                       ELSE RENTAS_CASTIGADAS_PROYECTADAS - MONTO_ULTIMA_RENTA * (1 - PORC_HIST_INCOBRABILIDAD)   END   IGNORE NULLS)
                  OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) AS NOF_PROYECTADO
      ,LAG(RENTAS_CASTIGADAS_PROYECTADAS)OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) AS LAG_RENTAS_CASTIGADAS_PROYECTADAS
      FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_EGRESOS`TD 
      WHERE MES BETWEEN FECHA_PROYECCION_INICIO AND FECHA_PROYECCION_FIN
     )
;

-------------------------------------------------------------------------------
-- Calculo de Flujo de caja continuo proyectado
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_FCC_PERIODO_PROY_UNICOS` 
AS
WITH TMP_LANDING AS (
SELECT 
TD.MES
,TD.INMUEBLE_NOMBRE
,TD.INMUEBLE_LEGALIDAD
,TD.PERIODICIDAD_RENTA
,TD.TC_PROYECTADO_TFORM
,FCO.FCO_PROYECTADO
,FCO.EGRESOS_PROYECTADO

,FCO.UTILIDAD_OPERATIVA_PROYECTADO
,FCO.MONTO_DEPRECIACION_PROYECTADO
,FCO.IMPUESTO_RENTA_PROYECTADO
,CASE WHEN  TD.PERIODICIDAD_RENTA = 1 AND ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN / TD.TC_PROYECTADO_TFORM ELSE 0 END AS CAPEX
,NOF.NOF_PROYECTADO
,CASE WHEN TD.PERIODICIDAD_RENTA <> 1 THEN TD.MONTO_DEPRECIACION_PEN END AS MONTO_DEPRECIACION_PEN --> PREGUNTAR OMAR
,COALESCE(  COALESCE(FCO.FCO_PROYECTADO,0) 
          - COALESCE(NOF.NOF_PROYECTADO,0) 
          - COALESCE((CASE WHEN TD.PERIODICIDAD_RENTA = 1 AND ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) = COUNT(TD.MES )OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN TD.MONTO_DEPRECIACION_PEN / 
             TD.TC_PROYECTADO_TFORM  ELSE 0 END),0),0
         ) AS FCL_PROYECTADO
,CASE WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND TD.PERIODICIDAD_RENTA <> 1 THEN  
           (
            (CASE WHEN COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) = ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) THEN 
                                       LAST_VALUE(IF(RENTA_CONTRATO_LAST = 0, NULL, RENTA_CONTRATO_LAST) IGNORE NULLS) OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)
                                       END) * (12 / TD.PERIODICIDAD_RENTA)    
            - (LAST_VALUE(IF(TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS = 0, NULL, TD.EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS) IGNORE NULLS) 
                               OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)) * (12 / TD.PERIODICIDAD_RENTA)
            - (   COALESCE((LAST_VALUE(IF(TD.MONTO_HIST_GASTOS_OP_PROYECTADO = 0, NULL, TD.MONTO_HIST_GASTOS_OP_PROYECTADO) IGNORE NULLS) 
                               OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)),0)
                  +COALESCE((LAST_VALUE(IF(TD.MONTO_HIST_ARBITRIOS_PROYECTADO = 0, NULL, TD.MONTO_HIST_ARBITRIOS_PROYECTADO) IGNORE NULLS) 
                                     OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)),0) 
                  +COALESCE((LAST_VALUE(IF(TD.MONTO_HIST_SEGUROS_PROYECTADO = 0, NULL, TD.MONTO_HIST_SEGUROS_PROYECTADO) IGNORE NULLS) 
                                     OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)),0) 
                  +COALESCE((LAST_VALUE(IF(TD.MONTO_HIST_PREDIAL_PROYECTADO = 0, NULL, TD.MONTO_HIST_PREDIAL_PROYECTADO) IGNORE NULLS) 
                               OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC)),0) 
               ) * 12 
            - (TD.MONTO_DEPRECIACION_PEN / TD.TC_PROYECTADO_TFORM) * 12 
            
            ) * ( 1 - 0.295) * (1 + CRECIMIENTO_PERPETUO) / (WACC - CRECIMIENTO_PERPETUO)
      ELSE COALESCE(  COALESCE(FCO.FCO_PROYECTADO,0) 
          - COALESCE(NOF.NOF_PROYECTADO,0) 
          - COALESCE((CASE WHEN TD.PERIODICIDAD_RENTA = 1 AND ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) = COUNT(TD.MES)OVER(PARTITION BY TD.INMUEBLE_NOMBRE) THEN 
            (TD.MONTO_DEPRECIACION_PEN / TD.TC_PROYECTADO_TFORM) ELSE 0 END),0),0
         ) * 12 * (1 + CRECIMIENTO_PERPETUO) / (WACC - CRECIMIENTO_PERPETUO)
      END AS FCC_PROYECTADO
,ROW_NUMBER()OVER(PARTITION BY TD.INMUEBLE_NOMBRE ORDER BY TD.MES ASC) AS ORDEN_NUMERACION
 FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_EGRESOS`TD
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_UTILIDAD_OPERATIVA_FLUJO_CAJA_OPERATIVO_UNICOS` FCO
        ON TD.MES = FCO.MES
       AND TD.INMUEBLE_NOMBRE = FCO.INMUEBLE_NOMBRE
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_NOF_PERIODO_PROY_UNICOS` NOF
        ON TD.MES = NOF.MES
       AND TD.INMUEBLE_NOMBRE = NOF.INMUEBLE_NOMBRE
--WHERE TD.INMUEBLE_NOMBRE = 'CPSA Puruchuco'
)
SELECT 
MES
,INMUEBLE_NOMBRE
,INMUEBLE_LEGALIDAD
,PERIODICIDAD_RENTA
,TC_PROYECTADO_TFORM
,ORDEN_NUMERACION
,EGRESOS_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,MONTO_DEPRECIACION_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,CAPEX
,FCO_PROYECTADO
,NOF_PROYECTADO
,FCL_PROYECTADO
,CASE WHEN ORDEN_NUMERACION = COUNT(*) OVER(PARTITION BY INMUEBLE_NOMBRE) THEN 
                        (CASE --WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND PERIODICIDAD_RENTA = 12 THEN FCC_PROYECTADO
                              WHEN INMUEBLE_LEGALIDAD <> 'USUFRUCTO' AND PERIODICIDAD_RENTA <> 1 THEN MAX(FCC_PROYECTADO)OVER(PARTITION BY INMUEBLE_NOMBRE)
                              ELSE (CASE WHEN ORDEN_NUMERACION = COUNT(*)OVER(PARTITION BY INMUEBLE_NOMBRE) 
                                         THEN FCC_PROYECTADO END
                                   )
                              END
                        )
      ELSE NULL END AS FCC_PROYECTADO
FROM TMP_LANDING
--WHERE INMUEBLE_NOMBRE = 'CPSA Trujillo'
--ORDER BY MES ASC
;


-------------------------------------------------------------------------------
-- Entregable final del modelo de proyeccion valorizacion inmuebles - Duplicado
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_VALORIZADOS`
AS
SELECT 
 TAB.MES
,TAB.FECHA_VALORIZACION
,TAB.INMUEBLE_NOMBRE
,TAB.RENTA_PROYECTADO_LAST #A.1 Proyeccion_Ingresos': vect_rentas_proyectadas,
,TAB.RENTAS_CASTIGADAS_PROYECTADAS #A. Proyeccion_Ingresos_Castigados': vect_rentas_castigadas_proyectadas,
,COALESCE(EGRESOS_GASTOS_ADMINISTRATIVOS_PROYECTADAS,0)                AS MONTO_HIST_GASTOS_ADM_PROYECTADO #B.1 Proyeccion_Gastos_Administrativos': vect_b1_egr_gastos_adm_proyectados,
,COALESCE(MONTO_HIST_GASTOS_OP_PROYECTADO,0) / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_GASTOS_OP_PROYECTADO #B.2 Proyeccion_Gastos_Operacionales': vect_b2_egr_gastos_oper_proyectados,
,COALESCE(MONTO_HIST_ARBITRIOS_PROYECTADO,0) / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_ARBITRIOS_PROYECTADO #B.3 Proyeccion_Gastos_Arbitrios': vect_b3_egr_gastos_arb_proyectados,
,COALESCE(MONTO_HIST_SEGUROS_PROYECTADO,0)   / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_SEGUROS_PROYECTADO #B.4 Proyeccion_Gastos_Seguro': vect_b4_egr_gastos_seg_proyectados,
,COALESCE(MONTO_HIST_PREDIAL_PROYECTADO,0)   / TAB.TC_PROYECTADO_TFORM AS MONTO_HIST_PREDIAL_PROYECTADO #B.5 Proyeccion_Gastos_Predial': vect_b5_egr_gastos_pred_proyectados,
,EGRESOS_PROYECTADO #B. Proyeccion_Egresos': vect_egr_proyectados,
,FCC.MONTO_DEPRECIACION_PROYECTADO #C.1 Proyeccion_Depreciacion': vector_depr,
,FCC.UTILIDAD_OPERATIVA_PROYECTADO #C. Proyeccion_Utilidad_Operativa:': vect_util_operativa_proyectados,
,FCC.IMPUESTO_RENTA_PROYECTADO #D.1 Proyeccion_Impuestos_Renta': vect_impuesto_renta_proyectados,
,FCC.FCO_PROYECTADO #D. Proyeccion_FCO': vect_FCO_proyectados,
,CASE WHEN TAB.MES = LAST_DAY(DATE_ADD(TAB.FECHA_VENCIMIENTO,INTERVAL 1 MONTH),MONTH) THEN 
      LAST_VALUE(IF(TAB.RENTAS_CASTIGADAS_PROYECTADAS = 0,NULL,TAB.RENTAS_CASTIGADAS_PROYECTADAS)IGNORE NULLS)
      OVER(PARTITION BY TAB.INMUEBLE_NOMBRE ORDER BY TAB.MES ASC)
      WHEN TAB.MES > TAB.FECHA_VENCIMIENTO AND TAB.INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0 
      ELSE FCC.NOF_PROYECTADO END AS NOF_PROYECTADO_VAR #E.1 Proyeccion_Variacion_NOF': vect_var_NOF_proyectados,
,CASE WHEN TAB.MES > TAB.FECHA_VENCIMIENTO AND TAB.INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0 
      ELSE TAB.RENTAS_CASTIGADAS_PROYECTADAS  END AS NOF_PROYECTADO #E.2 Proyeccion_NOF': vect_NOF_proyectados,
,(CASE WHEN TAB.MES > TAB.FECHA_VENCIMIENTO AND TAB.INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0
      ELSE FCC.CAPEX END) AS CAPEX  #E.3 Proyeccion_Capex': vect_capex_proyectados,
,CASE WHEN TAB.MES > TAB.FECHA_VENCIMIENTO AND TAB.INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0
      ELSE FCC.FCL_PROYECTADO END AS FCL_PROYECTADO # E. Proyeccion_FCL': vect_FCL_proyectados,
,COALESCE(CASE WHEN TAB.MES > TAB.FECHA_VENCIMIENTO AND TAB.INMUEBLE_LEGALIDAD = 'USUFRUCTO' THEN 0
      ELSE FCC.FCC_PROYECTADO END,0) AS FCC_PROYECTADO # F. Proyeccion_FCC': vect_FCC_proyectados,
,TAB.TARIFA_METROS2 # Renta m2': vect_tarifa_m2
,TAB.ORDEN_NUMERACION
,TAB.WACC
,TAB.CRECIMIENTO_PERPETUO
,TAB.MONEDA_RENTA
,TAB.TC_USDPEN
FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_PROY_EGRESOS`TAB
INNER JOIN  `iter-data-storage-pv-uat.temp.TMP_FCC_PERIODO_PROY_UNICOS`  FCC
       ON TAB.MES = FCC.MES
      AND TAB.INMUEBLE_NOMBRE = FCC.INMUEBLE_NOMBRE
;

-------------------------------------------------------------------------------
-- Entregable final del modelo
-------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_VALORIZACION_UNIARRENDATARIOS`
AS
WITH TMP_DATA AS (
SELECT 
MES
,FECHA_VALORIZACION
,'UNIARRENDATARIOS' AS TIPO_VALORIZACION
,INMUEBLE_NOMBRE
,RENTA_PROYECTADO_LAST
,RENTAS_CASTIGADAS_PROYECTADAS
,MONTO_HIST_GASTOS_ADM_PROYECTADO
,MONTO_HIST_GASTOS_OP_PROYECTADO
,MONTO_HIST_ARBITRIOS_PROYECTADO
,MONTO_HIST_SEGUROS_PROYECTADO
,MONTO_HIST_PREDIAL_PROYECTADO
,EGRESOS_PROYECTADO
,MONTO_DEPRECIACION_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,FCO_PROYECTADO
,NOF_PROYECTADO_VAR
,NOF_PROYECTADO
,CAPEX
,FCL_PROYECTADO
,FCC_PROYECTADO
,TARIFA_METROS2
,ORDEN_NUMERACION
,WACC
,CRECIMIENTO_PERPETUO
,MONEDA_RENTA
,TC_USDPEN
,CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO
FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_UNICOS_VALORIZADOS`
UNION ALL 
SELECT  
MES
,FECHA_VALORIZACION
,'UNIARRENDATARIOS' AS TIPO_VALORIZACION
,INMUEBLE_NOMBRE
,RENTA_PROYECTADO_LAST
,RENTAS_CASTIGADAS_PROYECTADAS
,MONTO_HIST_GASTOS_ADM_PROYECTADO
,MONTO_HIST_GASTOS_OP_PROYECTADO
,MONTO_HIST_ARBITRIOS_PROYECTADO
,MONTO_HIST_SEGUROS_PROYECTADO
,MONTO_HIST_PREDIAL_PROYECTADO
,EGRESOS_PROYECTADO
,MONTO_DEPRECIACION_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,FCO_PROYECTADO
,NOF_PROYECTADO_VAR
,NOF_PROYECTADO
,CAPEX
,FCL_PROYECTADO
,FCC_PROYECTADO
,TARIFA_METROS2
,ORDEN_NUMERACION
,WACC
,CRECIMIENTO_PERPETUO
,MONEDA_RENTA
,TC_USDPEN
,CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO
FROM `iter-data-storage-pv-uat.temp.TMP_UNIARRENDATARIOS_DUPLICADOS_VALORIZADOS`
)
SELECT 
MES
,FECHA_VALORIZACION
,TIPO_VALORIZACION
,INMUEBLE_NOMBRE
,RENTA_PROYECTADO_LAST
,RENTAS_CASTIGADAS_PROYECTADAS
,MONTO_HIST_GASTOS_ADM_PROYECTADO
,MONTO_HIST_GASTOS_OP_PROYECTADO
,MONTO_HIST_ARBITRIOS_PROYECTADO
,MONTO_HIST_SEGUROS_PROYECTADO
,MONTO_HIST_PREDIAL_PROYECTADO
,EGRESOS_PROYECTADO
,MONTO_DEPRECIACION_PROYECTADO
,UTILIDAD_OPERATIVA_PROYECTADO
,IMPUESTO_RENTA_PROYECTADO
,FCO_PROYECTADO
,NOF_PROYECTADO_VAR
,NOF_PROYECTADO
,CAPEX
,FCL_PROYECTADO
,FCC_PROYECTADO
,TARIFA_METROS2
,ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) AS ORDEN_NUMERACION
,WACC
,CRECIMIENTO_PERPETUO
,MONEDA_RENTA
,TC_USDPEN
,FECHA_PROCESO
FROM TMP_DATA
;


CREATE OR REPLACE TABLE  `iter-data-storage-pv-uat.temp.PLNT_VALORIZACION_UNIARRENDATARIOS`
AS
WITH TMP_DATA AS (
SELECT 
TIPO_VALORIZACION
,FECHA_VALORIZACION
,MONEDA_RENTA AS MONEDA
,INMUEBLE_NOMBRE AS INMUEBLE_RESUMIDO
,CASE WHEN ROW_NUMBER()OVER(PARTITION BY INMUEBLE_NOMBRE ORDER BY MES ASC) = 1 THEN IF(MONEDA_RENTA='USD',TC_USDPEN,1) END AS TC_USDPEN
,FCL_PROYECTADO / POW(1 + WACC,ORDEN_NUMERACION/12 )  AS VP_FCL
,FCC_PROYECTADO / POW(1 + WACC,ORDEN_NUMERACION/12 )  AS VP_FCC
,WACC
,CRECIMIENTO_PERPETUO
,RENTA_PROYECTADO_LAST AS RENTA_PROMEDIO_CONTRATO
FROM  `iter-data-storage-pv-uat.temp.TMP_VALORIZACION_UNIARRENDATARIOS` 
)
SELECT 
MONEDA
,TIPO_VALORIZACION
,INMUEBLE_RESUMIDO
,FECHA_VALORIZACION
,MAX(WACC) AS WACC
,MAX(CRECIMIENTO_PERPETUO) AS CRECIMIENTO_PERPETUO
,SUM(RENTA_PROMEDIO_CONTRATO) AS RENTA_PROMEDIO_CONTRATO
,SUM(TC_USDPEN) AS TC_USDPEN
,SUM(VP_FCL) AS VP_FCL
,SUM(VP_FCC) AS VP_FCC
,SUM(VP_FCL) + SUM(VP_FCC) AS INMUEBLE
FROM TMP_DATA
GROUP BY 1,2,3,4
;


END;