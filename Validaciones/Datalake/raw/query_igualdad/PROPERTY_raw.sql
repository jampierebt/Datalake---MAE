SELECT SUM(CASE WHEN PROD.propertyid!=UAT.propertyid THEN 1 ELSE 0 END) AS DIFF_propertyid
,SUM(CASE WHEN TRIM(UPPER(PROD.simbolo))!=TRIM(UPPER(UAT.simbolo)) THEN 1 ELSE 0 END) AS DIFF_simbolo
,SUM(CASE WHEN PROD.type!=UAT.type THEN 1 ELSE 0 END) AS DIFF_type
,SUM(CASE WHEN TRIM(UPPER(PROD.etiqueta))!=TRIM(UPPER(UAT.etiqueta)) THEN 1 ELSE 0 END) AS DIFF_etiqueta
,SUM(CASE WHEN TRIM(UPPER(PROD.tipo))!=TRIM(UPPER(UAT.tipo)) THEN 1 ELSE 0 END) AS DIFF_tipo
,SUM(CASE WHEN TRIM(UPPER(PROD.state))!=TRIM(UPPER(UAT.state)) THEN 1 ELSE 0 END) AS DIFF_state
,SUM(CASE WHEN TRIM(UPPER(PROD.filtertransformer))!=TRIM(UPPER(UAT.filtertransformer)) THEN 1 ELSE 0 END) AS DIFF_filtertransformer
,SUM(CASE WHEN TRIM(UPPER(PROD.propertyinfo))!=TRIM(UPPER(UAT.propertyinfo)) THEN 1 ELSE 0 END) AS DIFF_propertyinfo
,SUM(CASE WHEN TRIM(UPPER(PROD.validatorfunction))!=TRIM(UPPER(UAT.validatorfunction)) THEN 1 ELSE 0 END) AS DIFF_validatorfunction
,SUM(CASE WHEN TRIM(UPPER(PROD.formula))!=TRIM(UPPER(UAT.formula)) THEN 1 ELSE 0 END) AS DIFF_formula
,SUM(CASE WHEN TRIM(UPPER(PROD.transforfunction))!=TRIM(UPPER(UAT.transforfunction)) THEN 1 ELSE 0 END) AS DIFF_transforfunction
,SUM(CASE WHEN TRIM(UPPER(PROD.tabletransformer))!=TRIM(UPPER(UAT.tabletransformer)) THEN 1 ELSE 0 END) AS DIFF_tabletransformer
,SUM(CASE WHEN PROD.visible!=UAT.visible THEN 1 ELSE 0 END) AS DIFF_visible
,SUM(CASE WHEN PROD.eraseable!=UAT.eraseable THEN 1 ELSE 0 END) AS DIFF_eraseable
,SUM(CASE WHEN PROD.resetable!=UAT.resetable THEN 1 ELSE 0 END) AS DIFF_resetable
,SUM(CASE WHEN PROD.editable!=UAT.editable THEN 1 ELSE 0 END) AS DIFF_editable
,SUM(CASE WHEN PROD.amendable!=UAT.amendable THEN 1 ELSE 0 END) AS DIFF_amendable
,SUM(CASE WHEN PROD.secondpass!=UAT.secondpass THEN 1 ELSE 0 END) AS DIFF_secondpass
,SUM(CASE WHEN PROD.temporary!=UAT.temporary THEN 1 ELSE 0 END) AS DIFF_temporary
,SUM(CASE WHEN TRIM(UPPER(PROD.typerange))!=TRIM(UPPER(UAT.typerange)) THEN 1 ELSE 0 END) AS DIFF_typerange
,SUM(CASE WHEN TRIM(UPPER(PROD.presenterfunction))!=TRIM(UPPER(UAT.presenterfunction)) THEN 1 ELSE 0 END) AS DIFF_presenterfunction
,SUM(CASE WHEN TRIM(UPPER(PROD.rule))!=TRIM(UPPER(UAT.rule)) THEN 1 ELSE 0 END) AS DIFF_rule
,SUM(CASE WHEN PROD.minvalue!=UAT.minvalue THEN 1 ELSE 0 END) AS DIFF_minvalue
,SUM(CASE WHEN PROD.maxvalue!=UAT.maxvalue THEN 1 ELSE 0 END) AS DIFF_maxvalue
,SUM(CASE WHEN TRIM(UPPER(PROD.concept))!=TRIM(UPPER(UAT.concept)) THEN 1 ELSE 0 END) AS DIFF_concept
,SUM(CASE WHEN TRIM(UPPER(PROD.mask))!=TRIM(UPPER(UAT.mask)) THEN 1 ELSE 0 END) AS DIFF_mask
,SUM(CASE WHEN TRIM(UPPER(PROD.uniquekey))!=TRIM(UPPER(UAT.uniquekey)) THEN 1 ELSE 0 END) AS DIFF_uniquekey
,SUM(CASE WHEN TRIM(UPPER(PROD.multiplantilla))!=TRIM(UPPER(UAT.multiplantilla)) THEN 1 ELSE 0 END) AS DIFF_multiplantilla
,SUM(CASE WHEN PROD.precisiontype!=UAT.precisiontype THEN 1 ELSE 0 END) AS DIFF_precisiontype
,SUM(CASE WHEN TRIM(UPPER(PROD.validator))!=TRIM(UPPER(UAT.validator)) THEN 1 ELSE 0 END) AS DIFF_validator
,SUM(CASE WHEN TRIM(UPPER(PROD.defaultvalue))!=TRIM(UPPER(UAT.defaultvalue)) THEN 1 ELSE 0 END) AS DIFF_defaultvalue
,SUM(CASE WHEN TRIM(UPPER(PROD.colinputtransformer))!=TRIM(UPPER(UAT.colinputtransformer)) THEN 1 ELSE 0 END) AS DIFF_colinputtransformer
,SUM(CASE WHEN TRIM(UPPER(PROD.colvaluetransformer))!=TRIM(UPPER(UAT.colvaluetransformer)) THEN 1 ELSE 0 END) AS DIFF_colvaluetransformer
,SUM(CASE WHEN TRIM(UPPER(PROD.parent))!=TRIM(UPPER(UAT.parent)) THEN 1 ELSE 0 END) AS DIFF_parent
,SUM(CASE WHEN PROD.numdecimal!=UAT.numdecimal THEN 1 ELSE 0 END) AS DIFF_numdecimal
,SUM(CASE WHEN TRIM(UPPER(PROD.multiformula))!=TRIM(UPPER(UAT.multiformula)) THEN 1 ELSE 0 END) AS DIFF_multiformula
,SUM(CASE WHEN TRIM(UPPER(PROD.multicolumna))!=TRIM(UPPER(UAT.multicolumna)) THEN 1 ELSE 0 END) AS DIFF_multicolumna
,SUM(CASE WHEN PROD.pty_sec_visible!=UAT.pty_sec_visible THEN 1 ELSE 0 END) AS DIFF_pty_sec_visible
,SUM(CASE WHEN PROD.pty_sec_editable!=UAT.pty_sec_editable THEN 1 ELSE 0 END) AS DIFF_pty_sec_editable
,SUM(CASE WHEN TRIM(UPPER(PROD.description))!=TRIM(UPPER(UAT.description)) THEN 1 ELSE 0 END) AS DIFF_description
,SUM(CASE WHEN PROD.pty_touaa!=UAT.pty_touaa THEN 1 ELSE 0 END) AS DIFF_pty_touaa
,SUM(CASE WHEN TRIM(UPPER(PROD.nro_dias))!=TRIM(UPPER(UAT.nro_dias)) THEN 1 ELSE 0 END) AS DIFF_nro_dias
,SUM(CASE WHEN TRIM(UPPER(PROD.status))!=TRIM(UPPER(UAT.status)) THEN 1 ELSE 0 END) AS DIFF_status
,SUM(CASE WHEN TRIM(UPPER(PROD.substatus))!=TRIM(UPPER(UAT.substatus)) THEN 1 ELSE 0 END) AS DIFF_substatus
,SUM(CASE WHEN PROD.prt_bigdata!=UAT.prt_bigdata THEN 1 ELSE 0 END) AS DIFF_prt_bigdata
,SUM(CASE WHEN PROD.prt_clause!=UAT.prt_clause THEN 1 ELSE 0 END) AS DIFF_prt_clause
,SUM(CASE WHEN PROD.prt_visibilityindocuments!=UAT.prt_visibilityindocuments THEN 1 ELSE 0 END) AS DIFF_prt_visibilityindocuments
,SUM(CASE WHEN TRIM(UPPER(PROD.prt_orderfunction))!=TRIM(UPPER(UAT.prt_orderfunction)) THEN 1 ELSE 0 END) AS DIFF_prt_orderfunction
,SUM(CASE WHEN PROD.FECHA_PROCESO!=UAT.FECHA_PROCESO THEN 1 ELSE 0 END) AS DIFF_FECHA_PROCESO
FROM iter-data-storage-pv-uat.acsele_data.PROPERTY_raw UAT 
INNER JOIN interseguro-data.acsele_data.PROPERTY_raw PROD 
ON UAT.PROPERTYID = PROD.PROPERTYID