CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_goldenrecord_beneficiario()
BEGIN
/********************************************************************
* Proyecto		: GOLDEN RECORD
* Fecha			: 02 / 01 / 2020
* Autor			: Tito Ramirez
*               : Geraldine Jayo                         
* Descripción   : Obtener el registro unico de los beneficiarios                  
*********************************************************************
*                       MODIFICACIONES POSTERIORES                  *
*===================================================================*
*=  Fecha   | Persona |           Modificación Realizada           =*
*===================================================================*
*16/02/2022 |T.Ramirez| Se agrega Beneficiarios de VIDA-CASH
*           |         | 
*********************************************************************/ 

-- =========================================================================================================
-- Paso 00: Universo de RENTA PARTICULAR - RENTA VITALICIA
-- =========================================================================================================

--CALL `iter-data-storage-pv-uat.programs.carga_beneficiario_total_temp`();

-- =========================================================================================================
--                                                ACSELE                                                  --
-- =========================================================================================================

-- =========================================================================================================
-- Paso 01: Universo de Polizas operacion en ACSELE
-- =========================================================================================================
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_OPERACION_BENEFICIARIO_ACSELE` AS 
SELECT DISTINCT TAB.NUMERO_POLIZA, TAB.NUMERO_OPERACION, TAB.ID_PRODUCTO, TAB.NOMBRE_PRODUCTO, BEN.*
FROM (
    SELECT 
      NUMERO_POLIZA
	  ,NUMERO_OPERACION
	  ,ID_PRODUCTO
	  ,NOMBRE_PRODUCTO
      ,[
		 STRUCT( '01' AS NUMERO_BENEFICIARIO, APEPATERNOBENIINPUT AS APELLIDO_PATERNO, APEMATERNOBENIINPUT AS APELLIDO_MATERNO, NOMBRESBENIINPUT AS NOMBRES, DOCIDENTIDADBENIINPUT AS DOCUMENTO_IDENTIDAD, FECHANACBENIINPUT AS FECHA_NACIMIENTO, DISTRIBUCIONBENIINPUT AS PORCENTAJE_DISTRIBUCION, PARENTESCOBENIINPUT AS PARENTESCO, CORREOIINPUT AS CORREO, TELEFONOIINPUT AS TELEFONO, DIRECCIONASEGURADOINPUT AS DIRECCION, 'PRINCIPAL' AS TIPO_BENEFICIARIO)
		,STRUCT( '02', APEPATERNOBENIIINPUT, APEMATERNOBENIIINPUT, NOMBRESBENIIINPUT, DOCIDENTIDADBENIIINPUT, FECHANACBENIIINPUT, DISTRIBUCIONBENIIINPUT, PARENTESCOBENIIINPUT, CORREOIIINPUT, TELEFONOIIINPUT, DIRECCIONASEGURADOINPUT, 'PRINCIPAL')
		,STRUCT( '03', APEPATERNOBENIIIINPUT, APEMATERNOBENIIIINPUT, NOMBRESBENIIIINPUT, DOCIDENTIDADBENIIIINPUT, FECHANACBENIIIINPUT, DISTRIBUCIONBENIIIINPUT, PARENTESCOBENIIIINPUT, CORREOIIIINPUT, TELEFONOIIIINPUT, DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '04', APEPATERNOBENIVINPUT, APEMATERNOBENIVINPUT, NOMBRESBENIVINPUT, DOCIDENTIDADBENIVINPUT, FECHANACBENIVINPUT, DISTRIBUCIONBENIVINPUT, PARENTESCOBENIVINPUT, CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '05', APEPATERNOBENVINPUT, APEMATERNOBENVINPUT, NOMBRESBENVINPUT, DOCIDENTIDADBENVINPUT, FECHANACBENVINPUT, DISTRIBUCIONBENVINPUT, PARENTESCOBENVINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '06', APEPATERNOBENVIINPUT, APEMATERNOBENVIINPUT, NOMBRESBENVIINPUT, DOCIDENTIDADBENVIINPUT, FECHANACBENVIINPUT, DISTRIBUCIONBENVIINPUT, PARENTESCOBENVIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '07', APEPATERNOBENVIIINPUT, APEMATERNOBENVIIINPUT, NOMBRESBENVIIINPUT, DOCIDENTIDADBENVIIINPUT, FECHANACBENVIIINPUT, DISTRIBUCIONBENVIIINPUT, PARENTESCOBENVIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '08', APEPATERNOBENVIIIINPUT, APEMATERNOBENVIIIINPUT, NOMBRESBENVIIIINPUT, DOCIDENTIDADBENVIIIINPUT, FECHANACBENVIIIINPUT, DISTRIBUCIONBENVIIIINPUT, PARENTESCOBENVIIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '09', APEPATERNOBENIXINPUT, APEMATERNOBENIXINPUT, NOMBRESBENIXINPUT, DOCIDENTIDADBENIXINPUT, FECHANACBENIXINPUT, DISTRIBUCIONBENIXINPUT, PARENTESCOBENIXINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '10', APEPATERNOBENXINPUT, APEMATERNOBENXINPUT, NOMBRESBENXINPUT, DOCIDENTIDADBENXINPUT, FECHANACBENXINPUT, DISTRIBUCIONBENXINPUT, PARENTESCOBENXINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'PRINCIPAL' )
		,STRUCT( '11', APEPATERNOBENCIINPUT, APEMATERNOBENCIINPUT, NOMBRESBENCIINPUT, DOCIDENTIDADBENCIINPUT, FECHANACBENCIINPUT, DISTRIBUCIONBENCIINPUT, PARENTESCOBENCIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'CONTINGENTE' )
		,STRUCT( '12', APEPATERNOBENCIIINPUT, APEMATERNOBENCIIINPUT, NOMBRESBENCIIINPUT, DOCIDENTIDADBENCIIINPUT, FECHANACBENCIIINPUT, DISTRIBUCIONBENCIIINPUT, PARENTESCOBENCIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'CONTINGENTE' )
		,STRUCT( '13', APEPATERNOBENCIIIINPUT, APEMATERNOBENCIIIINPUT, NOMBRESBENCIIIINPUT, DOCIDENTIDADBENCIIIINPUT, FECHANACBENCIIIINPUT, DISTRIBUCIONBENCIIIINPUT, PARENTESCOBENCIIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING), DIRECCIONASEGURADOINPUT, 'CONTINGENTE' )
		] AS BENEFICIARIO
    FROM `iter-data-storage-pv-uat.acsele_data.TD_OPERACION_BENEFICIARIO_raw` 
	WHERE STATUS_OPERATION IN ("Applied operation")
 	QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY TIMESTAMP(OPERATION_DATETIME) DESC ))=1
   ) TAB , UNNEST(BENEFICIARIO) AS BEN
	WHERE COALESCE(BEN.APELLIDO_PATERNO,BEN.APELLIDO_MATERNO,BEN.NOMBRES,BEN.PARENTESCO) IS NOT NULL

  UNION ALL 

  SELECT DISTINCT TAB.NUMERO_POLIZA, TAB.NUMERO_OPERACION, TAB.ID_PRODUCTO, TAB.NOMBRE_PRODUCTO, BEN.*
  FROM (
    SELECT 
      NUMERO_POLIZA
	  ,NUMERO_OPERACION
	  ,ID_PRODUCTO
	  ,NOMBRE_PRODUCTO
      ,[
		 STRUCT( '01' AS NUMERO_BENEFICIARIO, APEPATERNOBENIINPUT AS APELLIDO_PATERNO, APEMATERNOBENIINPUT AS APELLIDO_MATERNO, NOMBRESBENIINPUT AS NOMBRES, DOCIDENTIDADBENIINPUT AS DOCUMENTO_IDENTIDAD, FECHANACBENIINPUT AS FECHA_NACIMIENTO, DISTRIBUCIONBENIINPUT AS PORCENTAJE_DISTRIBUCION, PARENTESCOBENIINPUT AS PARENTESCO,  CAST(NULL AS STRING) AS CORREO,  CAST(NULL AS STRING) AS TELEFONO,  CAST(NULL AS STRING) AS DIRECCION, 'PRINCIPAL' AS TIPO_BENEFICIARIO)
		,STRUCT( '02', APEPATERNOBENIIINPUT, APEMATERNOBENIIINPUT, NOMBRESBENIIINPUT, DOCIDENTIDADBENIIINPUT, FECHANACBENIIINPUT, DISTRIBUCIONBENIIINPUT, PARENTESCOBENIIINPUT,  CAST(NULL AS STRING),  CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL')
		,STRUCT( '03', APEPATERNOBENIIIINPUT, APEMATERNOBENIIIINPUT, NOMBRESBENIIIINPUT, DOCIDENTIDADBENIIIINPUT, FECHANACBENIIIINPUT, DISTRIBUCIONBENIIIINPUT, PARENTESCOBENIIIINPUT,  CAST(NULL AS STRING),  CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '04', APEPATERNOBENIVINPUT, APEMATERNOBENIVINPUT, NOMBRESBENIVINPUT, DOCIDENTIDADBENIVINPUT, FECHANACBENIVINPUT, DISTRIBUCIONBENIVINPUT, PARENTESCOBENIVINPUT, CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '05', APEPATERNOBENVINPUT, APEMATERNOBENVINPUT, NOMBRESBENVINPUT, DOCIDENTIDADBENVINPUT, FECHANACBENVINPUT, DISTRIBUCIONBENVINPUT, PARENTESCOBENVINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '06', APEPATERNOBENVIINPUT, APEMATERNOBENVIINPUT, NOMBRESBENVIINPUT, DOCIDENTIDADBENVIINPUT, FECHANACBENVIINPUT, DISTRIBUCIONBENVIINPUT, PARENTESCOBENVIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '07', APEPATERNOBENVIIINPUT, APEMATERNOBENVIIINPUT, NOMBRESBENVIIINPUT, DOCIDENTIDADBENVIIINPUT, FECHANACBENVIIINPUT, DISTRIBUCIONBENVIIINPUT, PARENTESCOBENVIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '08', APEPATERNOBENVIIIINPUT, APEMATERNOBENVIIIINPUT, NOMBRESBENVIIIINPUT, DOCIDENTIDADBENVIIIINPUT, FECHANACBENVIIIINPUT, DISTRIBUCIONBENVIIIINPUT, PARENTESCOBENVIIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '09', APEPATERNOBENIXINPUT, APEMATERNOBENIXINPUT, NOMBRESBENIXINPUT, DOCIDENTIDADBENIXINPUT, FECHANACBENIXINPUT, DISTRIBUCIONBENIXINPUT, PARENTESCOBENIXINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '10', APEPATERNOBENXINPUT, APEMATERNOBENXINPUT, NOMBRESBENXINPUT, DOCIDENTIDADBENXINPUT, FECHANACBENXINPUT, DISTRIBUCIONBENXINPUT, PARENTESCOBENXINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'PRINCIPAL' )
		,STRUCT( '11', APEPATERNOBENCIINPUT, APEMATERNOBENCIINPUT, NOMBRESBENCIINPUT, DOCIDENTIDADBENCIINPUT, FECHANACBENCIINPUT, DISTRIBUCIONBENCIINPUT, PARENTESCOBENCIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'CONTINGENTE' )
		,STRUCT( '12', APEPATERNOBENCIIINPUT, APEMATERNOBENCIIINPUT, NOMBRESBENCIIINPUT, DOCIDENTIDADBENCIIINPUT, FECHANACBENCIIINPUT, DISTRIBUCIONBENCIIINPUT, PARENTESCOBENCIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'CONTINGENTE' )
		,STRUCT( '13', APEPATERNOBENCIIIINPUT, APEMATERNOBENCIIIINPUT, NOMBRESBENCIIIINPUT, DOCIDENTIDADBENCIIIINPUT, FECHANACBENCIIIINPUT, DISTRIBUCIONBENCIIIINPUT, PARENTESCOBENCIIIINPUT,  CAST(NULL AS STRING), CAST(NULL AS STRING),  CAST(NULL AS STRING), 'CONTINGENTE' )
		] AS BENEFICIARIO
    FROM `iter-data-storage-pv-uat.acsele_data.TD_OPERACION_BENEFICIARIO_POL_raw` 
	WHERE STATUS_OPERATION IN ("Applied operation")
 	QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY TIMESTAMP(OPERATION_DATETIME) DESC ))=1
   ) TAB , UNNEST(BENEFICIARIO) AS BEN
	WHERE COALESCE(BEN.APELLIDO_PATERNO,BEN.APELLIDO_MATERNO,BEN.NOMBRES,BEN.PARENTESCO) IS NOT NULL
  ;

-- =========================================================================================================
-- Paso 01: Universo de Polizas con sus Benecifiarios [RENTAS-VIDACASH-ACSELE]
-- =========================================================================================================
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_BENEFICIARIO_ACSELE`
AS
 -- Carga los beneficiarios de Admwr Y RVIADMIN [SE ELIMINA ESTE BLOQUE PORQUE SE TRAE TODA LA INFO DIRECTAMENTE DESDE EL RAW]
 -- =========================================================================================================
--   SELECT DISTINCT
--   TEMP.ID_PERSONA,
--   TEMP.ID_ROL,
--   TEMP.NUMERO_POLIZA,
--   POL.NOMBRE_PRODUCTO,
--   TEMP.ID_TIPO_DOCUMENTO,
--   TEMP.TIPO_DOCUMENTO,
--   TEMP.NUMERO_DOCUMENTO,
--   TEMP.APELLIDO_PATERNO,
--   TEMP.APELLIDO_MATERNO,
--   TEMP.NOMBRE,
--   TEMP.RAZON_SOCIAL,
--   TEMP.FECHA_NACIMIENTO,
--   TEMP.FECHA_FALLECIMIENTO,
--   TEMP.ID_GENERO,
--   TEMP.GENERO,
--   TEMP.ID_ESTADO_CIVIL,
--   TEMP.ESTADO_CIVIL,
--   TEMP.PROFESION,
--   TEMP.NACIONALIDAD,
--   TEMP.CENTRO_TRABAJO,
--   TEMP.ID_CONDICION_FUMADOR,
--   TEMP.CONDICION_FUMADOR,
--   TEMP.CUSPP,
--   POL.ID_PERSONA ID_PADRE,
--   TEMP.PARENTESCO,
--   TEMP.PORCENTAJE_DISTRIBUCION, 
--   '' as TIPO_BENEFICIARIO
--   FROM `iter-data-storage-pv-uat.temp.beneficiario_total` TEMP
--   INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL ON POL.NUMERO_POLIZA = TEMP.NUMERO_POLIZA AND POL.ID_FUENTE = TEMP.ID_FUENTE
--UNION ALL
 -- Carga los beneficiarios de Acsel/E
 -- =========================================================================================================
SELECT DISTINCT
  CONCAT('02', '-99-', BEN.NUMERO_POLIZA, '-', BEN.NUMERO_BENEFICIARIO) ID_PERSONA, 
  '02' AS ID_ROL,
  BEN.NUMERO_POLIZA, 
  BEN.NOMBRE_PRODUCTO,
  '99' AS ID_TIPO_DOCUMENTO,
  '-'  AS TIPO_DOCUMENTO,  
  IFNULL(BEN.DOCUMENTO_IDENTIDAD, '0')              AS NUMERO_DOCUMENTO,
  UPPER(BEN.APELLIDO_PATERNO)                       AS APELLIDO_PATERNO,
  UPPER(BEN.APELLIDO_MATERNO)                       AS APELLIDO_MATERNO,
  UPPER(BEN.NOMBRES)				                AS NOMBRE,
  CAST(NULL AS STRING) 				                AS RAZON_SOCIAL,
  SAFE.PARSE_DATE('%Y-%m-%d',BEN.FECHA_NACIMIENTO)  AS FECHA_NACIMIENTO,
  CAST(NULL AS DATE) 				                AS FECHA_FALLECIMIENTO,
  '00'               				                AS ID_GENERO,
  'SIN ESPECIFICAR' 				                AS GENERO,
  '00'               			                    AS ID_ESTADO_CIVIL,
  'SIN ESPECIFICAR' 				                AS ESTADO_CIVIL,
  'SIN ESPECIFICAR' 				                AS PROFESION,
  'SIN ESPECIFICAR' 				                AS NACIONALIDAD,
  'SIN ESPECIFICAR' 				                AS CENTRO_TRABAJO,
  '00'                   			                AS ID_CONDICION_FUMADOR,
  'SIN ESPECIFICAR'  				                AS CONDICION_FUMADOR,
  CAST(NULL AS STRING) 				                AS CUSPP,
  CAST(NULL AS STRING)                              AS ID_PADRE,
  CASE WHEN BEN.PARENTESCO IS NULL THEN 'SIN ESPECIFICAR' ELSE IFNULL(UPPER(LTRIM(RTRIM(BEN.PARENTESCO))), 'SIN ESPECIFICAR') END PARENTESCO,
  IFNULL(SAFE_CAST(BEN.PORCENTAJE_DISTRIBUCION AS NUMERIC), 0) PORCENTAJE_DISTRIBUCION,
  BEN.TIPO_BENEFICIARIO
  FROM  `iter-data-storage-pv-uat.temp.TMP_OPERACION_BENEFICIARIO_ACSELE` BEN;

-- =========================================================================================================
-- Paso FINAL: POLIZA - BENEFICIARIOS
-- =========================================================================================================
 DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO` A
      WHERE EXISTS (
         SELECT 1 
         FROM `iter-data-storage-pv-uat.temp.TMP_BENEFICIARIO_ACSELE` B 
         WHERE A.NUMERO_POLIZA    = B.NUMERO_POLIZA 
--           AND A.ID_PERSONA       = B.ID_PERSONA
);

-- ------------------------------------------------------------------------------
-- Insertar en la tabla FINAL
-- ------------------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO`(
    ID_PERSONA,
    ID_ROL,
    NUMERO_POLIZA,
    NOMBRE_PRODUCTO,
    ID_TIPO_DOCUMENTO,
    TIPO_DOCUMENTO,
    NUMERO_DOCUMENTO,
    APELLIDO_PATERNO,
    APELLIDO_MATERNO,
    NOMBRE,
    RAZON_SOCIAL,
    FECHA_NACIMIENTO,
    FECHA_FALLECIMIENTO,
    ID_GENERO,
    GENERO,
    ID_ESTADO_CIVIL,
    ESTADO_CIVIL,
    PROFESION,
    NACIONALIDAD,
    CENTRO_TRABAJO,
    ID_CONDICION_FUMADOR,
    CONDICION_FUMADOR,
    CUSPP,
    ID_PADRE,
    PARENTESCO,
    PORCENTAJE_DISTRIBUCION,
	  TIPO_BENEFICIARIO,
    FECHA_CREACION,
    FECHA_MODIFICACION
  )
SELECT
    A2.ID_PERSONA,
    A2.ID_ROL,
    A2.NUMERO_POLIZA,
    A2.NOMBRE_PRODUCTO,
    A2.ID_TIPO_DOCUMENTO,
    A2.TIPO_DOCUMENTO,
    A2.NUMERO_DOCUMENTO,
    A2.APELLIDO_PATERNO,
    A2.APELLIDO_MATERNO,
    A2.NOMBRE,
    A2.RAZON_SOCIAL,
    A2.FECHA_NACIMIENTO,
    A2.FECHA_FALLECIMIENTO,
    A2.ID_GENERO,
    A2.GENERO,
    A2.ID_ESTADO_CIVIL,
    A2.ESTADO_CIVIL,
    A2.PROFESION,
    A2.NACIONALIDAD,
    A2.CENTRO_TRABAJO,
    A2.ID_CONDICION_FUMADOR,
    A2.CONDICION_FUMADOR,
    A2.CUSPP,
    A2.ID_PADRE,
    A2.PARENTESCO,
    A2.PORCENTAJE_DISTRIBUCION,
	  A2.TIPO_BENEFICIARIO,
    CURRENT_TIMESTAMP(),
    CURRENT_TIMESTAMP()
    FROM `iter-data-storage-pv-uat.temp.TMP_BENEFICIARIO_ACSELE` A2
;

-- =========================================================================================================
--                                                RENTA PARTICULAR                                        --
-- =========================================================================================================
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_ADMWR_BENEFIARIO_UNIVERSO`
AS
SELECT DISTINCT
POL.gls_poliza       AS NUMERO_POLIZA,
CONCAT('02', '-', EG1.CODIGO_GLOBAL, '-',POL.gls_poliza , '-', PER.gls_nro_identificacion) AS ID_PERSONA,
upper(to_hex(sha256(CONCAT(EG2.CODIGO_CORPORATIVO,LPAD(PER.gls_nro_identificacion,15,'0'))))) HASH_ID,
'02' AS ID_ROL,
'03'                 AS ID_FUENTE,
EG1.CODIGO_GLOBAL    AS ID_TIPO_DOCUMENTO,
EG1.NOMBRE_GLOBAL    AS TIPO_DOCUMENTO,
PER.gls_nro_identificacion AS NUMERO_DOCUMENTO,
INITCAP(PER.gls_ape_paterno)  AS APELLIDO_PATERNO,
INITCAP(PER.gls_ape_materno)  AS APELLIDO_MATERNO,
INITCAP(PER.gls_nom_persona)  AS NOMBRE,
CASE
  WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_nacimiento AS DATE)) <= 1900 OR PER.fec_nacimiento IS NULL THEN CAST(NULL AS DATE)
  ELSE SAFE_CAST(PER.fec_nacimiento AS DATE)
END AS FECHA_NACIMIENTO,
CASE
  WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_fallecimiento AS DATE)) <= 1900 OR PER.fec_fallecimiento IS NULL THEN CAST(NULL AS DATE)
  ELSE SAFE_CAST(PER.fec_fallecimiento AS DATE)
END AS FECHA_FALLECIMIENTO,
IFNULL(EG2.CODIGO_GLOBAL, '00')                 AS ID_GENERO,
IFNULL(EG2.NOMBRE_GLOBAL, 'SIN ESPECIFICAR')    AS GENERO,
CASE 
  WHEN IFNULL(PER.cod_estado_civil, '-') = '-' OR PER.cod_estado_civil = '' THEN '00'
  ELSE PER.cod_estado_civil 
END                                            AS ID_ESTADO_CIVIL,
  IFNULL(EG3.NOMBRE_GLOBAL, 'SIN ESPECIFICAR')   AS ESTADO_CIVIL,
CASE WHEN IFNULL(CAST(OC.AttributeValue AS STRING), '') = '' THEN 'SIN ESPECIFICAR' WHEN PER.cod_profesion = '538560013' THEN 'SIN ESPECIFICAR' ELSE UPPER(OC.Value) END PROFESION,
CASE WHEN IFNULL(CAST(NC.AttributeValue AS STRING), '') = '' THEN 'SIN ESPECIFICAR' WHEN PER.cod_profesion = '538560017' THEN 'SIN ESPECIFICAR' ELSE UPPER(NC.Value) END NACIONALIDAD,
CO.inter_centrolaboral                           AS CENTRO_TRABAJO,
POL.cod_tipo_producto                            AS ID_PRODUCTO,
AP.NOMBRE_PRODUCTO,
AP.ID_GRUPO_PRODUCTO,
AP.NOMBRE_GRUPO_PRODUCTO,
BEN.cod_parentesco                              AS ID_PARENTESCO,
IFNULL(UPPER(PAR.gls_larga), 'SIN ESPECIFICAR') AS PARENTESCO,
CAST(BEN.val_pje_renta AS NUMERIC)              AS PORCENTAJE_DISTRIBUCION
FROM `iter-data-storage-pv-uat.admwr_data.persona_raw` PER
INNER JOIN `iter-data-storage-pv-uat.admwr_data.beneficiario_raw` BEN 
        ON BEN.cod_persona = PER.cod_persona
INNER JOIN `iter-data-storage-pv-uat.admwr_data.poliza_raw` POL 
        ON POL.cod_poliza = BEN.cod_poliza
INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG1 
        ON PER.cod_tipo_identificacion = EG1.VALOR_ORIGEN 
       AND EG1.ID_FUENTE = '03' 
       AND EG1.CODIGO_TIPO = 'TIPODOC'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG2 
        ON PER.cod_sexo = EG2.VALOR_ORIGEN 
       AND EG2.ID_FUENTE = '03' 
       AND EG2.CODIGO_TIPO = 'GENERO'
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG3 
        ON PER.cod_estado_civil = EG3.VALOR_ORIGEN 
       AND EG3.ID_FUENTE = '03' 
       AND EG3.CODIGO_TIPO = 'ESTADOCIVIL'
 LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.tab_codigo_raw` PAR 
        ON BEN.cod_parentesco = PAR.cod_codigo 
       AND PAR.nom_tabla = 'PARENT'
 LEFT JOIN `iter-data-storage-pv-uat.crm_data.stringmap_raw` OC 
        ON CAST(OC.AttributeValue AS STRING) = PER.cod_profesion 
       AND OC.AttributeName = 'inter_profesion' 
       AND OC.ObjectTypeCode = 10004
 LEFT JOIN `iter-data-storage-pv-uat.crm_data.stringmap_raw` NC 
        ON CAST(NC.AttributeValue AS STRING) = PER.cod_nacionalidad 
       AND NC.AttributeName = 'inter_nacionalidad' 
       AND NC.ObjectTypeCode = 10004
INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG5 
        ON PER.cod_tipo_identificacion = EG5.VALOR_ORIGEN 
       AND EG5.ID_FUENTE = '03' 
       AND EG5.CODIGO_TIPO = 'TIPODOCCRM'
 LEFT JOIN `iter-data-storage-pv-uat.crm_data.contact_raw` CO 
        ON CAST(CO.inter_tipodedocumento AS STRING) = EG5.CODIGO_GLOBAL 
       AND CO.inter_numerodedocumento = PER.gls_nro_identificacion
INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_AGRUPACION_PRODUCTO` AP 
        ON POL.cod_tipo_producto = AP.ID_PRODUCTO 
       AND AP.ID_FUENTE          = '03'
     WHERE POL.cod_tipo_producto IN ('RPP','IFP') 
       AND BEN.cod_parentesco    <> '80'
;

-- ------------------------------------------------------------------------------
-- Limpiar Polizas  RENTAS PARTICULAR
-- ------------------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO`
WHERE NUMERO_POLIZA IN (SELECT NUMERO_POLIZA FROM  `iter-data-storage-pv-uat.temp.TMP_ADMWR_BENEFIARIO_UNIVERSO`);

-- ------------------------------------------------------------------------------
-- Insertar en la tabla FINAL
-- ------------------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO`
(
 NUMERO_POLIZA
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,ID_PERSONA
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,NOMBRE_PRODUCTO
,PARENTESCO
,PORCENTAJE_DISTRIBUCION
,FECHA_CREACION
,FECHA_MODIFICACION
,ID_ROL
,HASH_ID
)
SELECT 
 NUMERO_POLIZA
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,ID_PERSONA
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,NOMBRE_PRODUCTO
,PARENTESCO
,CAST(PORCENTAJE_DISTRIBUCION AS NUMERIC)
,CURRENT_TIMESTAMP() AS FECHA_CREACION
,CURRENT_TIMESTAMP() AS FECHA_MODIFICACION
,ID_ROL
, case 
WHEN  TIPO_DOCUMENTO = 'PARTIDA NACIMIENTO'  THEN NULL
ELSE  HASH_ID  END AS HASH_ID
---,ID_GRUPO_PRODUCTO
--,NOMBRE_GRUPO_PRODUCTO
--,ID_PARENTESCO
--,ID_PRODUCTO
--ID_FUENTE
 FROM  `iter-data-storage-pv-uat.temp.TMP_ADMWR_BENEFIARIO_UNIVERSO`
;
-- =========================================================================================================
--                                                RENTA VITALICIA                                         --
-- =========================================================================================================
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_RVIADM_BENEFICIARIO_UNIVERSO`
AS
  SELECT DISTINCT
  '02'                AS ID_FUENTE,
  CAST(BEN.num_poliza  AS STRING)     AS NUMERO_POLIZA,
  EG1.CODIGO_GLOBAL   AS ID_TIPO_DOCUMENTO,
  EG1.NOMBRE_GLOBAL   AS TIPO_DOCUMENTO,
  CONCAT('02', '-', EG1.CODIGO_GLOBAL, '-', BEN.num_poliza, '-', PER.num_identificacion_pdt) AS ID_PERSONA,
  upper(to_hex(sha256(CONCAT(EG1.CODIGO_CORPORATIVO,LPAD(PER.num_identificacion_pdt,15,'0'))))) HASH_ID,
  PER.num_identificacion_pdt AS NUMERO_DOCUMENTO,
  INITCAP(PER.ape_paterno)   AS APELLIDO_PATERNO,
  INITCAP(PER.ape_materno)   AS APELLIDO_MATERNO,
  INITCAP(PER.nom_persona)   AS NOMBRE,
  (CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_nacimiento AS DATE)) <= 1900 OR PER.fec_nacimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE SAFE_CAST(PER.fec_nacimiento AS DATE)
  END) AS FECHA_NACIMIENTO,
  (CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_fallecimiento AS DATE)) <= 1900 OR PER.fec_fallecimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE SAFE_CAST(PER.fec_fallecimiento AS DATE)
  END) AS FECHA_FALLECIMIENTO,
  IFNULL(EG2.CODIGO_GLOBAL, '00')                AS ID_GENERO,
  IFNULL(EG2.NOMBRE_GLOBAL, 'SIN ESPECIFICAR')   AS GENERO,
  IFNULL(EG3.CODIGO_GLOBAL, '00')                AS ID_ESTADO_CIVIL,
  IFNULL(EG3.NOMBRE_GLOBAL, 'SIN ESPECIFICAR')   AS ESTADO_CIVIL,
  UPPER(OC.gls_ocupacion)                        AS PROFESION,
  IFNULL(NC.gls_nacionalidad, 'SIN ESPECIFICAR') AS NACIONALIDAD,  
  BEN.cod_cartera AS ID_PRODUCTO,
  AP.NOMBRE_PRODUCTO,
  AP.ID_GRUPO_PRODUCTO,
  AP.NOMBRE_GRUPO_PRODUCTO,
  BEN.cod_parentezco AS ID_PARENTESCO,
  IFNULL(UPPER(PAR.gls_larga), 'SIN ESPECIFICAR') PARENTESCO,
  BEN.pje_pension AS PORCENTAJE_DISTRIBUCION,
        FROM `iter-data-storage-pv-uat.rviadmin_data.ben_poliza_raw` BEN
  INNER JOIN `iter-data-storage-pv-uat.rviadmin_data.personas_raw` PER 
          ON REPLACE(PER.cod_tipo_identificacion, ' ', '') = REPLACE(BEN.cod_tipo_identificacion, ' ', '') 
         AND PER.num_identificacion                        = BEN.num_identificacion
  INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG1 
          ON PER.cod_tipo_identificacion = EG1.VALOR_ORIGEN  
         AND EG1.ID_FUENTE = '02' AND EG1.CODIGO_TIPO = 'TIPODOC'
   LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG2 
          ON PER.cod_sexo = EG2.VALOR_ORIGEN 
         AND EG2.ID_FUENTE = '02' 
         AND EG2.CODIGO_TIPO = 'GENERO'
   LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG3 
          ON PER.cod_estado_civil = EG3.VALOR_ORIGEN 
         AND EG3.ID_FUENTE      = '02' 
         AND EG3.CODIGO_TIPO   = 'ESTADOCIVIL'
   LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.tab_codigo_raw` PAR 
          ON BEN.cod_parentezco = PAR.cod_codigo 
         AND PAR.nom_tabla = 'PARENT'
  INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_AGRUPACION_PRODUCTO` AP 
          ON BEN.cod_cartera = AP.ID_PRODUCTO 
         AND AP.ID_FUENTE = '02'
   LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.t_ocupac_raw` OC 
          ON OC.cod_ocupacion = PER.cod_ocupacion
   LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.T_NACION_raw` NC 
          ON NC.cod_nacionalidad = PER.cod_nacionalidad
       WHERE BEN.cod_cartera = 'RVI' 
         -- (80 = Contratrante/Causante)
         AND BEN.cod_parentezco <> '80' 
;

-- ------------------------------------------------------------------------------
-- Limpiar Polizas  RENTAS VITALICIAS
-- ------------------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO`
WHERE NUMERO_POLIZA IN (SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.temp.TMP_RVIADM_BENEFICIARIO_UNIVERSO` );

-- ------------------------------------------------------------------------------
-- Insertar en la tabla FINAL
-- ------------------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO`
(
 NUMERO_POLIZA
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,ID_PERSONA
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,NOMBRE_PRODUCTO
,PARENTESCO
,PORCENTAJE_DISTRIBUCION
,FECHA_CREACION
,FECHA_MODIFICACION
,ID_ROL
,HASH_ID
)
SELECT 
 NUMERO_POLIZA
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,ID_PERSONA
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,NOMBRE_PRODUCTO
,PARENTESCO
,CAST(PORCENTAJE_DISTRIBUCION AS NUMERIC)
,CURRENT_TIMESTAMP() AS FECHA_CREACION
,CURRENT_TIMESTAMP() AS FECHA_MODIFICACION
,'02' AS ID_ROL
, case 
WHEN  TIPO_DOCUMENTO = 'PARTIDA NACIMIENTO'  THEN NULL
ELSE  HASH_ID  END AS HASH_ID
---,ID_GRUPO_PRODUCTO
--,NOMBRE_GRUPO_PRODUCTO
--,ID_PARENTESCO
--,ID_PRODUCTO
--ID_FUENTE
 FROM `iter-data-storage-pv-uat.temp.TMP_RVIADM_BENEFICIARIO_UNIVERSO`
;

-- =========================================================================================================
--                                                VIDACASH                                                --
-- =========================================================================================================


-- ------------------------------------------------------------------------------
-- Eliminar temporales
-- ------------------------------------------------------------------------------
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_OPERACION_BENEFICIARIO_ACSELE`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_BENEFICIARIO_ACSELE`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_RVIADM_BENEFICIARIO_UNIVERSO`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_ADMWR_BENEFIARIO_UNIVERSO`;

SELECT 'OK' AS EJECUCION;

END;