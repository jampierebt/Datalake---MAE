CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.carga_cliente_360()
OPTIONS(
  strict_mode=true)
BEGIN
/********************************************************************
* Proyecto		  : GOLDEN RECORD
* Fecha			    : 06 / 04 / 2019
* Autor			    : Xertica - Gustavo Felix Sedano Lopez                               
* Descripción   : Tabla sumarizada del contratante, datos relacionados a la poliza, oportunidades, cotizaciones, siniestros, requerimientos, reclamos, pagos y moras                    
*********************************************************************
*                       MODIFICACIONES POSTERIORES                  *
*===================================================================*
*=  Fecha   | Persona |           Modificación Realizada           =*
*===================================================================*
*           |         |                                            
*********************************************************************/
-- OBTENEMOS LA FECHA DE VENCIMIENTO DEL MES ACTUAL
DECLARE v_UltDiaMes DATE;
-- OBTENEMOS EL MES MAXIMO QUE PUEDE HABER MORA: PARA INTERSEGURO MAXIMO MORA 4
DECLARE v_UltMesMora DATE;

SET v_UltDiaMes = DATE_SUB(DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH), INTERVAL 1 DAY);
SET v_UltMesMora = DATE_SUB(CURRENT_DATE(), INTERVAL 5 MONTH);

-- 1 HIJOS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_hijos_temp AS
  WITH HIJOS AS (
    SELECT DISTINCT 
    ID_PADRE, 
    ID_TIPO_DOCUMENTO, 
    UPPER(APELLIDO_PATERNO) APELLIDO_PATERNO, 
    UPPER(APELLIDO_MATERNO) APELLIDO_MATERNO, 
    UPPER(NOMBRE) NOMBRE
    FROM `iter-data-storage-pv-uat.goldenrecord_data.BENEFICIARIO` 
    WHERE PARENTESCO = 'HIJO'
  )
  SELECT ID_PADRE, COUNT(1) NUM_HIJOS
  FROM HIJOS
  GROUP BY ID_PADRE;

-- 2 PRODUCTOS Y POLIZAS ACTIVAS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_resumen_polizas_activas_temp AS
  SELECT ID_PERSONA, 
  COUNT(DISTINCT NOMBRE_PRODUCTO) NUM_PRODUCTOS_ACTIVOS, 
  COUNT(NUMERO_POLIZA) NUM_POLIZAS_ACTIVAS,
  ( CASE 
    WHEN DATE_DIFF(CURRENT_DATE(), MIN(FECHA_EMISION), MONTH) <= 0 THEN 0
    ELSE CEILING(DATE_DIFF(CURRENT_DATE(), MIN(FECHA_EMISION), MONTH)) 
    END) TIEMPO_CLIENTE_MESES
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` 
  WHERE ESTADO = 'VIGENTE' AND FECHA_FIN>=CURRENT_DATE()
  GROUP BY ID_PERSONA;

-- 3 PRODUCTOS Y POLIZAS INACTIVAS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_resumen_polizas_inactivas_temp AS
  SELECT ID_PERSONA, 
  COUNT(DISTINCT NOMBRE_PRODUCTO) NUM_PRODUCTOS_INACTIVOS, 
  COUNT(NUMERO_POLIZA) NUM_POLIZAS_INACTIVAS,
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` 
  WHERE (ESTADO <> 'VIGENTE' OR (ESTADO = 'VIGENTE' AND FECHA_FIN<CURRENT_DATE()))
  GROUP BY ID_PERSONA;

-- 4 POLIZAS ANTIGUEDAD
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_antiguedad_temp AS
  SELECT ID_PERSONA, 
  ( CASE 
    WHEN DATE_DIFF(CURRENT_DATE(), MIN(FECHA_EMISION), MONTH) <= 0 THEN 0
    ELSE CEILING(DATE_DIFF(CURRENT_DATE(), MIN(FECHA_EMISION), MONTH)) 
    END) ANTIGUEDAD_CLIENTE_MESES
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` 
  GROUP BY ID_PERSONA;

-- 5 POLIZAS ACTIVAS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_polizas_activas_temp AS
  WITH POLIZAS_ACTIVAS_POR_PRODUCTO AS(
    SELECT ID_PERSONA, 
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN COUNT(1) ELSE 0 END) BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN COUNT(1) ELSE 0 END) SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN COUNT(1) ELSE 0 END) DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN COUNT(1) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '05' THEN COUNT(1) ELSE 0 END) VEHICULAR,
    (CASE WHEN ID_GRUPO_PRODUCTO = '09' THEN COUNT(1) ELSE 0 END) VIAJE,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN COUNT(1) ELSE 0 END) RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN COUNT(1) ELSE 0 END) RENTA_PRIVADA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '05' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VEHICULAR,
    (CASE WHEN ID_GRUPO_PRODUCTO = '09' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VIAJE,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_RENTA_PRIVADA
    FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` 
    WHERE ESTADO = 'VIGENTE' AND FECHA_FIN>=CURRENT_DATE()
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT ID_PERSONA, 
  SUM(BANCA_SEGURO) TENENCIA_BANCA_SEGURO_ACT,
  SUM(SOAT) TENENCIA_SOAT_ACT,
  SUM(DESGRAVAMEN) TENENCIA_DESGRAVAMEN_ACT,
  SUM(VIDA) TENENCIA_VIDA_ACT,
  SUM(VEHICULAR) TENENCIA_VEHICULAR_ACT,
  SUM(VIAJE) TENENCIA_VIAJE_ACT,
  SUM(RENTA_VITALICIA) TENENCIA_RENTA_VITALICIA_ACT,
  SUM(RENTA_PRIVADA) TENENCIA_RENTA_PRIVADA_ACT,
  SUM(PRIMA_TOTAL_BANCA_SEGURO) PRIMA_TOTAL_BANCA_SEGURO_ACT,
  SUM(PRIMA_TOTAL_SOAT) PRIMA_TOTAL_SOAT_ACT,
  SUM(PRIMA_TOTAL_DESGRAVAMEN) PRIMA_TOTAL_DESGRAVAMEN_ACT,
  SUM(PRIMA_TOTAL_VIDA) PRIMA_TOTAL_VIDA_ACT,
  SUM(PRIMA_TOTAL_VEHICULAR) PRIMA_TOTAL_VEHICULAR_ACT,
  SUM(PRIMA_TOTAL_VIAJE) PRIMA_TOTAL_VIAJE_ACT,
  SUM(PRIMA_TOTAL_RENTA_VITALICIA) PRIMA_TOTAL_RENTA_VITALICIA_ACT,
  SUM(PRIMA_TOTAL_RENTA_PRIVADA) PRIMA_TOTAL_RENTA_PRIVADA_ACT
  FROM POLIZAS_ACTIVAS_POR_PRODUCTO
  GROUP BY ID_PERSONA
  ;

-- 6 POLIZAS INACTIVAS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_polizas_inactivas_temp AS
  WITH POLIZAS_ACTIVAS_POR_PRODUCTO AS(
    SELECT ID_PERSONA, 
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN COUNT(1) ELSE 0 END) BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN COUNT(1) ELSE 0 END) SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN COUNT(1) ELSE 0 END) DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN COUNT(1) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '05' THEN COUNT(1) ELSE 0 END) VEHICULAR,
    (CASE WHEN ID_GRUPO_PRODUCTO = '09' THEN COUNT(1) ELSE 0 END) VIAJE,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN COUNT(1) ELSE 0 END) RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN COUNT(1) ELSE 0 END) RENTA_PRIVADA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '05' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VEHICULAR,
    (CASE WHEN ID_GRUPO_PRODUCTO = '09' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_VIAJE,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN SUM(IFNULL(PRIMA_NETA,0.00)) ELSE 0 END) PRIMA_TOTAL_RENTA_PRIVADA
    FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` 
    WHERE (ESTADO <> 'VIGENTE' OR (ESTADO = 'VIGENTE' AND FECHA_FIN<CURRENT_DATE()))
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT ID_PERSONA, 
  SUM(BANCA_SEGURO) TENENCIA_BANCA_SEGURO_INACT,
  SUM(SOAT) TENENCIA_SOAT_INACT,
  SUM(DESGRAVAMEN) TENENCIA_DESGRAVAMEN_INACT,
  SUM(VIDA) TENENCIA_VIDA_INACT,
  SUM(VEHICULAR) TENENCIA_VEHICULAR_INACT,
  SUM(VIAJE) TENENCIA_VIAJE_INACT,
  SUM(RENTA_VITALICIA) TENENCIA_RENTA_VITALICIA_INACT,
  SUM(RENTA_PRIVADA) TENENCIA_RENTA_PRIVADA_INACT,
  SUM(PRIMA_TOTAL_BANCA_SEGURO) PRIMA_TOTAL_BANCA_SEGURO_INACT,
  SUM(PRIMA_TOTAL_SOAT) PRIMA_TOTAL_SOAT_INACT,
  SUM(PRIMA_TOTAL_DESGRAVAMEN) PRIMA_TOTAL_DESGRAVAMEN_INACT,
  SUM(PRIMA_TOTAL_VIDA) PRIMA_TOTAL_VIDA_INACT,
  SUM(PRIMA_TOTAL_VEHICULAR) PRIMA_TOTAL_VEHICULAR_INACT,
  SUM(PRIMA_TOTAL_VIAJE) PRIMA_TOTAL_VIAJE_INACT,
  SUM(PRIMA_TOTAL_RENTA_VITALICIA) PRIMA_TOTAL_RENTA_VITALICIA_INACT,
  SUM(PRIMA_TOTAL_RENTA_PRIVADA) PRIMA_TOTAL_RENTA_PRIVADA_INACT
  FROM POLIZAS_ACTIVAS_POR_PRODUCTO
  GROUP BY ID_PERSONA
  ;

-- 7 POLIZAS SINIESTROS POR GRUPO DE PRODUCTO
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_polizas_siniestros_temp AS
  WITH POLIZAS_SINIESTROS AS(
    SELECT ID_PERSONA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN COUNT(DISTINCT SI.NUMERO_SINIESTRO) ELSE 0 END) RENTA_PRIVADA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '04' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_SOAT,
    (CASE WHEN ID_GRUPO_PRODUCTO = '01' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '00' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_DESGRAVAMEN,
    (CASE WHEN ID_GRUPO_PRODUCTO = '03' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_BANCA_SEGURO,
    (CASE WHEN ID_GRUPO_PRODUCTO = '06' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_RENTA_VITALICIA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '07' THEN SUM(IFNULL(SI.MONTO_PAGO_MN,0.00)) ELSE 0 END) MONTO_SINIESTRO_RENTA_PRIVADA
     FROM goldenrecord_data.SINIESTRO SIN
    INNER JOIN goldenrecord_data.SINIESTRO_COBERTURA  SI
    ON SIN.NUMERO_SINIESTRO = SI.NUMERO_SINIESTRO 
    INNER JOIN goldenrecord_data.POLIZA POL
    ON POL.NUMERO_POLIZA=SIN.NUMERO_POLIZA
    WHERE /* SI.ESTADO_PAGO = 'PAGADO'*/   ID_GRUPO_PRODUCTO IN ('03','04','01','00','06','07')
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT ID_PERSONA, 
  SUM(SOAT) NUM_SINIESTROS_SOAT,
  SUM(VIDA) NUM_SINIESTROS_VIDA,
  SUM(DESGRAVAMEN) NUM_SINIESTROS_DESGRAVAMEN,
  SUM(BANCA_SEGURO) NUM_SINIESTROS_BANCA_SEGURO,
  SUM(RENTA_VITALICIA) NUM_SINIESTROS_RENTA_VITALICIA,
  SUM(RENTA_PRIVADA) NUM_SINIESTROS_RENTA_PRIVADA,
  SUM(MONTO_SINIESTRO_SOAT) MONTO_SINIESTRO_SOAT,
  SUM(MONTO_SINIESTRO_VIDA) MONTO_SINIESTRO_VIDA,
  SUM(MONTO_SINIESTRO_DESGRAVAMEN) MONTO_SINIESTRO_DESGRAVAMEN,
  SUM(MONTO_SINIESTRO_BANCA_SEGURO) MONTO_SINIESTRO_BANCA_SEGURO,
  SUM(MONTO_SINIESTRO_RENTA_VITALICIA) MONTO_SINIESTRO_RENTA_VITALICIA,
  SUM(MONTO_SINIESTRO_RENTA_PRIVADA) MONTO_SINIESTRO_RENTA_PRIVADA
  FROM POLIZAS_SINIESTROS
  GROUP BY ID_PERSONA
  ;

-- 8 OPORTUNIDADES
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_oportunidades_temp AS
  WITH OPORTUNIDADES AS(
    SELECT ID_PERSONA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '12' THEN COUNT( ID_OPORTUNIDAD ) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '14' THEN COUNT( ID_OPORTUNIDAD ) ELSE 0 END) RENTAS_VITALICIAS
    FROM goldenrecord_data.OPORTUNIDAD
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT 
  ID_PERSONA, 
  SUM(VIDA) NUM_OPORTUNIDADES_VIDA,
  SUM(RENTAS_VITALICIAS) NUM_OPORTUNIDADES_RENTAS_VITALICIAS
  FROM OPORTUNIDADES
  GROUP BY ID_PERSONA;

-- 9 COTIZACIONES
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_cotizaciones_temp AS
  WITH COTIZACIONES AS(
    SELECT ID_PERSONA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '12' THEN COUNT( ID_COTIZACION ) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '14' THEN COUNT( ID_COTIZACION ) ELSE 0 END) RENTAS_VITALICIAS,
    (CASE WHEN ID_GRUPO_PRODUCTO = '10' THEN COUNT( ID_COTIZACION ) ELSE 0 END) VEHICULAR,
    (CASE WHEN ID_GRUPO_PRODUCTO = '08' THEN COUNT( ID_COTIZACION ) ELSE 0 END) WEBSOAT
    FROM goldenrecord_data.ACTIVIDAD_COMERCIAL
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT 
  ID_PERSONA, 
  SUM(VIDA) NUM_COTIZACIONES_VIDA,
  SUM(RENTAS_VITALICIAS) NUM_COTIZACIONES_RENTAS_VITALICIAS,
  SUM(VEHICULAR) NUM_COTIZACIONES_VEHICULAR,
  SUM(WEBSOAT) NUM_COTIZACIONES_WEBSOAT
  FROM COTIZACIONES
  GROUP BY ID_PERSONA;

-- 10 REQUERIMIENTOS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_requerimientos_temp AS
  SELECT 
  ID_PERSONA, 
  COUNT(DISTINCT NUMERO_TICKET) NUM_REQUERIMIENTOS
  FROM goldenrecord_data.RECLAMO R
  WHERE TIPO = 'REQUERIMIENTO'
  GROUP BY ID_PERSONA;

-- 11 RECLAMOS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_reclamos_temp AS
  SELECT 
  ID_PERSONA, 
  COUNT(DISTINCT NUMERO_TICKET) NUM_RECLAMOS
  FROM goldenrecord_data.RECLAMO R
  WHERE TIPO <> 'REQUERIMIENTO'
  GROUP BY ID_PERSONA;

-- 12 SINIESTROS TOTALES
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_siniestros_totales_temp AS
  WITH TOTAL_POLIZAS AS (
    SELECT ID_PERSONA, 
    COUNT(DISTINCT SI.NUMERO_SINIESTRO) TOTAL_SINIESTROS
    FROM goldenrecord_data.POLIZA POL
    INNER JOIN goldenrecord_data.SINIESTRO SI
    ON POL.NUMERO_POLIZA = SI.NUMERO_POLIZA
    WHERE /* SI.ESTADO_PAGO = 'PAGADO' */   ID_GRUPO_PRODUCTO IN ('03','04','01','00','06','07')
    GROUP BY ID_PERSONA
  )
  SELECT 
  TMP.ID_PERSONA,	
  TMP.TOTAL_SINIESTROS,
  ( NUM_SINIESTROS_SOAT + 
    NUM_SINIESTROS_VIDA + 
    NUM_SINIESTROS_DESGRAVAMEN + 
    NUM_SINIESTROS_BANCA_SEGURO + 
    NUM_SINIESTROS_RENTA_VITALICIA + 
    NUM_SINIESTROS_RENTA_PRIVADA) NUM_SINIESTROS_TOTALES_APROBADOS,
  ( MONTO_SINIESTRO_SOAT + 
    MONTO_SINIESTRO_VIDA  + 
    MONTO_SINIESTRO_DESGRAVAMEN + 
    MONTO_SINIESTRO_BANCA_SEGURO + 
    MONTO_SINIESTRO_RENTA_VITALICIA  + 
    MONTO_SINIESTRO_RENTA_PRIVADA) MONTO_TOTAL_SINIESTROS_APROBADOS
  FROM tabla_agregada_polizas_siniestros_temp SI
  INNER JOIN TOTAL_POLIZAS TMP ON SI.ID_PERSONA = TMP.ID_PERSONA;

-- 13 NUMERO DE VEHICULOS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_vehiculos_temp AS
  SELECT
  ID_PERSONA, 
  COUNT(DISTINCT PLACA) NUM_VEHICULOS
  FROM goldenrecord_data.VEHICULO
  GROUP BY ID_PERSONA;

-- 14 NUMERO CONTACTOS VIDA Y RENTAS
  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_contactos_temp AS
  WITH COTIZACIONES AS(
    SELECT ID_PERSONA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '12' THEN COUNT( ID_COTIZACION ) ELSE 0 END) VIDA,
    (CASE WHEN ID_GRUPO_PRODUCTO = '14' THEN COUNT( ID_COTIZACION ) ELSE 0 END) RENTAS_VITALICIAS
    FROM goldenrecord_data.ACTIVIDAD_COMERCIAL
    GROUP BY ID_PERSONA, ID_GRUPO_PRODUCTO
  )
  SELECT 
  ID_PERSONA, 
  SUM(VIDA) NUM_CONTACTOS_VIDA,
  SUM(RENTAS_VITALICIAS) NUM_CONTACTOS_RENTAS_VITALICIAS
  FROM COTIZACIONES
  GROUP BY ID_PERSONA;

 -- CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_mora_temp AS
 -- WITH POLIZAS_PAGADAS AS (
 --   -- OBTENEMOS LAS POLIZAS PENDIENTES DE PAGO
 --   SELECT POL.ID_PERSONA, P.NUMERO_POLIZA, MAX(P.ID_PAGO) ID_PAGO -- OBTENEMOS LAS ULTIMAS POLIZAS PAGADAS
 --   FROM goldenrecord_data.PAGO P
 --   INNER JOIN goldenrecord_data.POLIZA POL ON P.NUMERO_POLIZA = POL.NUMERO_POLIZA
 --   WHERE 
 --   POL.ESTADO = 'VIGENTE' AND POL.FECHA_FIN>=CURRENT_DATE() -- SOLO POLIZAS VIGENTES
 --   AND P.ESTADO = 'applied' AND P.SUB_ESTADO = 'applied' -- INDICADORES DE PAGO REALIZADO
 --   AND P.FECHA_INICIO_VIGENCIA_COBERTURA BETWEEN v_UltMesMora AND v_UltDiaMes -- POLIZAS DE LOS ULTIMOS 4 MESES
 --   AND POL.ID_GRUPO_PRODUCTO = '01' --SOLO PRODUCTOS VIDA
 --   GROUP BY POL.ID_PERSONA, P.NUMERO_POLIZA
 -- ),
 -- CALCULO_MORA AS (
 --  SELECT TEMP.ID_PERSONA, TEMP.NUMERO_POLIZA, FECHA_FIN_VIGENCIA_COBERTURA,FECHA_PAGO,
 -- -- CALCULAMOS LA MORA RESTANDO (FECHA_FIN_VIGENCIA_COBERTURA - FECHA DE EJECUCION DEL PROCEDIMIENTO)
 -- (DATE_DIFF(CURRENT_DATE(), FECHA_FIN_VIGENCIA_COBERTURA, MONTH) +1 ) MORA,
 -- ROW_NUMBER() OVER(PARTITION BY TEMP.ID_PERSONA ORDER BY (DATE_DIFF(v_UltDiaMes, FECHA_VENCIMIENTO, MONTH) +1 ) DESC) AS NUM_FILA
 -- FROM goldenrecord_data.PAGO PAG
 -- INNER JOIN POLIZAS_PAGADAS TEMP ON PAG.NUMERO_POLIZA = TEMP.NUMERO_POLIZA AND PAG.ID_PAGO = TEMP.ID_PAGO
 -- WHERE FECHA_PAGO IS NOT NULL 
 --     AND FECHA_FIN_VIGENCIA_COBERTURA <= CURRENT_DATE()
 -- )
 -- -- SOLO LA MORA MAS ALTA POR PERSONA
 -- SELECT ID_PERSONA,  CONCAT('MORA_', MORA) ESTADO_MORA
 -- FROM CALCULO_MORA WHERE NUM_FILA = 1
 -- ;

-- 16 ULTIMOS DATOS DE PAGOS SOBRE POLIZAS VIGENTES
--  CREATE OR REPLACE TEMPORARY TABLE tabla_agregada_pagos_temp AS
--  SELECT 
--  POL.ID_PERSONA, 
--  COUNT(PAG.ID_PAGO) NUM_PAGOS_REALIZADOS, 
--  MAX(PAG.FECHA_PAGO) ULT_FECHA_PAGO
--  FROM goldenrecord_data.POLIZA POL
--  INNER JOIN goldenrecord_data.PAGO PAG ON POL.NUMERO_POLIZA = PAG.NUMERO_POLIZA
--  WHERE POL.ESTADO = 'VIGENTE' AND POL.FECHA_FIN>=CURRENT_DATE() AND PAG.ESTADO = 'applied' AND PAG.SUB_ESTADO = 'applied'
--  GROUP BY POL.ID_PERSONA;

-- TABLA FINAL SUMARIZADA
  CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.ba_cliente.CLIENTE_360` AS
  SELECT 
  C.HASH_ID,
  IFNULL(TH.NUM_HIJOS, 0) NUM_HIJOS,
  TRPA.NUM_PRODUCTOS_ACTIVOS,
  TRPI.NUM_PRODUCTOS_INACTIVOS,
  TRPA.NUM_POLIZAS_ACTIVAS,
  TRPI.NUM_POLIZAS_INACTIVAS,
  CAST(TRPA.TIEMPO_CLIENTE_MESES AS INT64) AS TIEMPO_CLIENTE_MESES,
  CAST(TA.ANTIGUEDAD_CLIENTE_MESES AS INT64) AS ANTIGUEDAD_CLIENTE_MESES,
  TPA.TENENCIA_BANCA_SEGURO_ACT,
  TPA.TENENCIA_SOAT_ACT,
  TPA.TENENCIA_DESGRAVAMEN_ACT,
  TPA.TENENCIA_VIDA_ACT,
  TPA.TENENCIA_VEHICULAR_ACT,
  TPA.TENENCIA_VIAJE_ACT,
  TPA.TENENCIA_RENTA_VITALICIA_ACT,
  TPA.TENENCIA_RENTA_PRIVADA_ACT,
  TPI.TENENCIA_BANCA_SEGURO_INACT,
  TPI.TENENCIA_SOAT_INACT,
  TPI.TENENCIA_DESGRAVAMEN_INACT,
  TPI.TENENCIA_VIDA_INACT,
  TPI.TENENCIA_VEHICULAR_INACT,
  TPI.TENENCIA_VIAJE_INACT,
  TPI.TENENCIA_RENTA_VITALICIA_INACT,
  TPI.TENENCIA_RENTA_PRIVADA_INACT,
  TPA.PRIMA_TOTAL_BANCA_SEGURO_ACT,
  TPA.PRIMA_TOTAL_SOAT_ACT,
  TPA.PRIMA_TOTAL_DESGRAVAMEN_ACT,
  TPA.PRIMA_TOTAL_VIDA_ACT,
  TPA.PRIMA_TOTAL_VEHICULAR_ACT,
  TPA.PRIMA_TOTAL_VIAJE_ACT,
  TPA.PRIMA_TOTAL_RENTA_VITALICIA_ACT,
  TPA.PRIMA_TOTAL_RENTA_PRIVADA_ACT,
  TPI.PRIMA_TOTAL_BANCA_SEGURO_INACT,
  TPI.PRIMA_TOTAL_SOAT_INACT,
  TPI.PRIMA_TOTAL_DESGRAVAMEN_INACT,
  TPI.PRIMA_TOTAL_VIDA_INACT,
  TPI.PRIMA_TOTAL_VEHICULAR_INACT,
  TPI.PRIMA_TOTAL_VIAJE_INACT,
  TPI.PRIMA_TOTAL_RENTA_VITALICIA_INACT,
  TPI.PRIMA_TOTAL_RENTA_PRIVADA_INACT,
  TPS.NUM_SINIESTROS_SOAT,
  TPS.NUM_SINIESTROS_VIDA,
  TPS.NUM_SINIESTROS_DESGRAVAMEN,
  TPS.NUM_SINIESTROS_BANCA_SEGURO,
  TPS.NUM_SINIESTROS_RENTA_VITALICIA,
  TPS.NUM_SINIESTROS_RENTA_PRIVADA,
  TPS.MONTO_SINIESTRO_SOAT,
  TPS.MONTO_SINIESTRO_VIDA,
  TPS.MONTO_SINIESTRO_DESGRAVAMEN,
  TPS.MONTO_SINIESTRO_BANCA_SEGURO,
  TPS.MONTO_SINIESTRO_RENTA_VITALICIA,
  TPS.MONTO_SINIESTRO_RENTA_PRIVADA,
  TTO.NUM_OPORTUNIDADES_VIDA,
  TTO.NUM_OPORTUNIDADES_RENTAS_VITALICIAS,
  TTC.NUM_COTIZACIONES_VIDA,
  TTC.NUM_COTIZACIONES_RENTAS_VITALICIAS,
  TTC.NUM_COTIZACIONES_VEHICULAR,
  TTC.NUM_COTIZACIONES_WEBSOAT,
  TTR.NUM_REQUERIMIENTOS,
  TTRR.NUM_RECLAMOS,
  TST.TOTAL_SINIESTROS,
  TST.NUM_SINIESTROS_TOTALES_APROBADOS,
  TST.MONTO_TOTAL_SINIESTROS_APROBADOS,
  TTAC.NUM_CONTACTOS_VIDA,
  TTAC.NUM_CONTACTOS_RENTAS_VITALICIAS,
  TTV.NUM_VEHICULOS,
  '' AS ESTADO_MORA,
  cast(null as date) AS ULT_FECHA_PAGO,
  cast(null as INT64) AS NUM_PAGOS_REALIZADOS,
  CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO,
  SESSION_USER() AS USUARIO_CREACION
  FROM goldenrecord_data.CONTRATANTE C
  LEFT JOIN tabla_agregada_hijos_temp TH ON TH.ID_PADRE = C.ID_PERSONA
  LEFT JOIN tabla_agregada_resumen_polizas_activas_temp TRPA ON TRPA.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_resumen_polizas_inactivas_temp TRPI ON TRPI.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_antiguedad_temp TA ON TA.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_polizas_activas_temp TPA ON TPA.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_polizas_inactivas_temp TPI ON TPI.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_polizas_siniestros_temp TPS ON TPS.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_oportunidades_temp TTO ON TTO.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_cotizaciones_temp TTC ON TTC.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_requerimientos_temp TTR ON TTR.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_reclamos_temp TTRR ON TTRR.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_siniestros_totales_temp TST ON TST.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_contactos_temp TTAC ON TTAC.ID_PERSONA = C.ID_PERSONA
  LEFT JOIN tabla_agregada_vehiculos_temp TTV ON TTV.ID_PERSONA = C.ID_PERSONA
  --LEFT JOIN tabla_agregada_mora_temp TTM ON TTM.ID_PERSONA = C.ID_PERSONA
  -- LEFT JOIN tabla_agregada_pagos_temp TTP ON TTP.ID_PERSONA = C.ID_PERSONA;
  ;

  SELECT 'OK' AS ESTADO_EJEUCION;
END;