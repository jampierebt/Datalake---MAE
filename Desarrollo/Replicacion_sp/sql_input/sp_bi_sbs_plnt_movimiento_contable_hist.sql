CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_bi_sbs_plnt_movimiento_contable_hist(par_periodo INT64)
OPTIONS(
  strict_mode=true)
BEGIN

 /********************************************************************
* Proyecto      : IFRS17
* Fecha         : 15 / 11 / 2023
* Autor         : Jampiere Berrio         
* Descripción   : 
* Ejecuciòn     : Mensual - 7 de cada mes
*********************************************************************
*                       MODIFICACIONES POSTERIORES                  *
*===================================================================*
*=  Fecha   | Persona |           Modificación Realizada           =*
*===================================================================*/
 
-- ------------------------------------------------------------------------------------
-- VARIABLES UTILIZADAS EN EL PROCESO
-- ------------------------------------------------------------------------------------

DECLARE var_periodo_calendario INT64;

IF par_periodo IS NULL THEN
 
SET var_periodo_calendario = ( SELECT   MAX(CAST(PERIODO AS INT64))  FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_PERIODO_CALENDARIO`
WHERE DATE_SUB(CURRENT_DATE,INTERVAL 8 DAY) BETWEEN PERIODO_DIA_INICIO  AND PERIODO_DIA_FIN ) ;
                        
ELSE 
 
SET var_periodo_calendario = par_periodo ;

END IF;

-- ----------------------------------------------------------------------
-- Paso 1: Tomamos la informacion del planeta de movimientos contables 
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_PRIMAS`  
AS
SELECT 
SUBSTRING(CUENTA_CONTABLE,8,2) AS RAMO
,CUENTA_CONTABLE 
,DESCRIPCION_CUENTA_CONTABLE AS DESCRIPCION-- ?? DESGRAVAMEN HIPOTECARIO ?? -- DESC_CUENTA
,ASIENTO
,CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC','B/V','N/C') THEN SUBSTRING(FUENTE,1,3)  
      END AS TIPO_DOCUMENTO
,CASE WHEN (CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC','B/V','N/C') THEN TRUE ELSE FALSE END) = TRUE 
      THEN REPLACE(REPLACE(REPLACE(FUENTE,'FAC',''),'B/V',''),'N/C','') 
      ELSE NULL END AS DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,REAL AS SALDO
,PRODUCTO_AREA AS PRODUCTO --> ??
,CENTRO_COSTO 
,CENTRO_COSTO_DESCRIPCION AS DESCRIPCION_CENTRO_COSTO
--,'' AS TIPO_ASIENTO -- Extorno Prov Prima -- TIPO_ASIENTO -> FALTA - 100% NULL
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,'' AS NOTAS -- FALTA 
,ULTIMUS_FLUJO_EFECTIVO  AS FLUJO_EFECTIVO --> 100% NULL
,ULTIMUS_PATRIMONIO_NETO AS PATRIMONIO_NETO --> 100% NULL
,ULTIMUS_PROY_ULTIMUS    AS PROYECTO_ULTIMUS --> 100% NULL
,ULTIMUS_APROB_ULTIMUS   AS APROBADOR_ULTIMUS --> 100% NULL
,CAST(NULL AS STRING) AS GASTO_ATRIBUIBLE --> FALTA - 100% NULL
,CAST(NULL AS STRING) AS TIPO_COSTO       --> FALTA - 100% NULL
,CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC') THEN 'FACTURA'
      WHEN SUBSTRING(FUENTE,1,3) IN ('B/V') THEN 'BOLETA VENTA'
      ELSE UPPER(FUENTE) END CATEGORIA_FUENTE
,SUBSTRING(ASIENTO,1,2) AS PAQUETE_ASIENTO
FROM `iter-data-storage-pv-uat.bi_finanzas.PLNT_MOVIMIENTOS_CONTABLES`
WHERE CAST(FORMAT_DATE("%Y%m",FECHA) AS INT64)= var_periodo_calendario
AND TIPO_BAL='BALACU'
AND SUBSTRING(CUENTA_CONTABLE,1,2) IN ('50')
--AND SUBSTRING(FUENTE,1,3) IN ('FAC','B/V')
--AND FUENTE IN ('Samp Soles','Samp Dolares')
--AND CENTRO_COSTO_DESCRIPCION <>'No definido'
--AND SUBSTRING(CENTRO_COSTO,1,2)NOT IN ('79','75','76','66','91','64')
;
-- ----------------------------------------------------------------------
-- Paso 2: Movimientos contables
-- Contiene la Informacion de movimientos contables a un corte especifico
-- Con la informacion de ingreso de primas en la cuenta contable 50.{}..
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_MOVIMIENTO_CONTABLE_PRIMAS`  
AS
WITH TMP_LANDING AS (
SELECT 
RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,CASE WHEN RAMO IN ('64','61','41','57') THEN 'OPTATIVOS'
      WHEN RAMO ='66' THEN 'SOAT'
      WHEN RAMO ='71' THEN 'VIDA INDIVIDUAL'
      WHEN RAMO ='21' THEN 'VEHICULAR'
      WHEN RAMO ='72' THEN 'VIDA GRUPO'
      WHEN RAMO ='74' THEN 'DESGRAVAMEN'
      WHEN RAMO IN ('82','73') THEN 'VIDA LEY'
      WHEN RAMO ='79' THEN 'VIDA GRUPO'
      WHEN RAMO ='80' THEN 'VIDA INDIVIDUAL'
      WHEN RAMO ='59' THEN 'GEX'
      END AS PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,CASE WHEN UPPER(FUENTE)='RECLA PLANNING' THEN 'ASIENTO MANUAL'
      WHEN REFERENCIA='IOP DEVOLU' OR REFERENCIA = 'Recla Intereses' and saldo <0 THEN 'DEVOLUCION PRIMA'
      WHEN REFERENCIA='IOP' OR REFERENCIA='IOP ANULA' THEN 'PRIMA RECAUDADA'
      WHEN TIPO_DOCUMENTO IS NOT NULL THEN 'FACTURACION MANUAL'
      WHEN REFERENCIA LIKE '%NLC%' THEN 'NLC'
      WHEN REGEXP_CONTAINS(DESCRIPCION,'COASEG') THEN 'PRIMA COASEGURO'
      WHEN SUBSTRING(ASIENTO,1,2)='41' AND FUENTE IN ('Extorno Primas','Prov Primas','Extorno Prima','Prov. Primas','DevoluciÃ³n de primas ')
      THEN 'PROVICION PRIMA'
      WHEN REFERENCIA LIKE 'ProvisiÃ³n Prima%' OR REFERENCIA LIKE 'Provision Prima%' OR REFERENCIA LIKE'%ProvisiÃ³n Prima%'  THEN 'PROVICION PRIMA'
			WHEN REFERENCIA LIKE 'ProvisiÃƒÂ³n Prima%'THEN 'PROVICION PRIMA'
      WHEN REFERENCIA LIKE '%Prov.%' OR REFERENCIA LIKE 'Provision Prima%' THEN 'PROVICION PRIMA'
      WHEN REFERENCIA LIKE '%PROV.PRIMA%' THEN 'PROVICION PRIMA' 
      WHEN REFERENCIA LIKE '%Ext. PROV%' THEN 'PROVICION PRIMA' 
      WHEN REFERENCIA LIKE '%Provision Prima%' OR  REFERENCIA LIKE '%ProvisiÃƒÂ³n Prima%' THEN 'PROVICION PRIMA' 
      WHEN REGEXP_CONTAINS(REFERENCIA,'Extorno ProvisiÃ³n') OR REGEXP_CONTAINS(REFERENCIA,'Extorno Provision')  THEN 'EXTORNO PRIMA'
      WHEN REGEXP_CONTAINS(REFERENCIA,'ProvisiÃ³n') 
           AND DEBITO_LOCAL IS NOT NULL
           AND DEBITO_DOLAR IS NOT NULL THEN 'EXTORNO PRIMA'
      WHEN REFERENCIA='IOP APLICA' THEN 'RECAUDACION'
      WHEN PAQUETE_ASIENTO IN ('02','20') THEN 'AJUSTE MANUAL'
      --ELSE 'NLC'
      END TIPO_ASIENTO
/*
,CASE WHEN UPPER(FUENTE)='RECLA PLANNING' THEN 'ASIENTO MANUAL'
      WHEN REFERENCIA='IOP DEVOLU' THEN 'DEVOLUCION PRIMA'
      WHEN REFERENCIA='IOP' THEN 'PRIMA RECAUDADA'
      WHEN TIPO_DOCUMENTO IS NOT NULL THEN 'FACTURACION MANUAL'
     
      WHEN REFERENCIA LIKE 'ProvisiÃ³n Prima%' OR REFERENCIA LIKE 'Provision Prima%' THEN 'PROVICION PRIMA'
      WHEN REGEXP_CONTAINS(REFERENCIA,'Extorno ProvisiÃ³n') OR REGEXP_CONTAINS(REFERENCIA,'Extorno Provision')  THEN 'EXTORNO PRIMA'
      WHEN REGEXP_CONTAINS(REFERENCIA,'ProvisiÃ³n') 
           AND DEBITO_LOCAL IS NOT NULL
           AND DEBITO_DOLAR IS NOT NULL THEN 'EXTORNO PRIMA'
      WHEN REGEXP_CONTAINS(DESCRIPCION,'COASEG') THEN 'PRIMA COASEGURO'
      WHEN REFERENCIA='IOP APLICA' THEN 'RECAUDACION'
      WHEN PAQUETE_ASIENTO IN ('02','20') THEN 'AJUSTE MANUAL'
      END TIPO_ASIENTO
*/
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO 
--,CATEGORIA_FUENTE
FROM `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_PRIMAS`  
)
SELECT 
	RAMO
	,CUENTA_CONTABLE
	,DESCRIPCION
	,ASIENTO
	,TIPO_DOCUMENTO
	,DOCUMENTO
	,REFERENCIA
	,DEBITO_LOCAL
	,DEBITO_DOLAR
	,CREDITO_LOCAL
	,CREDITO_DOLAR
	,SALDO
	,PRODUCTO
	,CENTRO_COSTO
	,DESCRIPCION_CENTRO_COSTO
	,TIPO_ASIENTO
	,FECHA
	,NIT
	,RAZON_SOCIAL
	,FUENTE
	,NOTAS
	,FLUJO_EFECTIVO
	,PATRIMONIO_NETO
	,PROYECTO_ULTIMUS
	,APROBADOR_ULTIMUS
	,GASTO_ATRIBUIBLE
	,TIPO_COSTO
FROM TMP_LANDING
WHERE PRODUCTO IS NOT NULL
;
-- ----------------------------------------------------------------------
-- Delete
-- ----------------------------------------------------------------------

DELETE FROM `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST`
WHERE PERIODO= var_periodo_calendario
AND FUENTE_ORIGEN='PRIMAS';

-- ----------------------------------------------------------------------
-- Paso 4: insert a la tabla historica mensual
-- ----------------------------------------------------------------------

INSERT INTO `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST` 
(
FUENTE_ORIGEN
,PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,FECHA_PROCESO
)
SELECT 
'PRIMAS' AS FUENTE_ORIGEN
,var_periodo_calendario AS PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO
FROM `iter-data-storage-pv-uat.temp.TMP_MOVIMIENTO_CONTABLE_PRIMAS` 
;

-- ----------------------------------------------------------------------
-- Movimientos contables de la cuenta 44.{}.1.71
-- ----------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_RESCATES_SOBREVIVENCIA`  
AS
SELECT 
SUBSTRING(CUENTA_CONTABLE,8,2) AS RAMO
,CUENTA_CONTABLE 
,DESCRIPCION_CUENTA_CONTABLE AS DESCRIPCION
,ASIENTO
,CASE WHEN SUBSTRING(FUENTE,1,3) IN('FAC','B/V','N/C','T/D','O/C')THEN SUBSTRING(FUENTE,1,3)  
      END AS TIPO_DOCUMENTO
,CASE WHEN (CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC','B/V','N/C','T/D','O/C') THEN TRUE ELSE FALSE END) = TRUE 
      THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(FUENTE,'FAC',''),'B/V',''),'N/C',''),'T/D',''),'O/C','') 
      ELSE NULL END AS DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,REAL AS SALDO
,PRODUCTO_AREA AS PRODUCTO --> ??
,CENTRO_COSTO 
,CENTRO_COSTO_DESCRIPCION AS DESCRIPCION_CENTRO_COSTO
,'' AS TIPO_ASIENTO -- Extorno Prov Prima -- TIPO_ASIENTO -> FALTA - 100% NULL
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,'' AS NOTAS -- FALTA 
,ULTIMUS_FLUJO_EFECTIVO  AS FLUJO_EFECTIVO --> 100% NULL
,ULTIMUS_PATRIMONIO_NETO AS PATRIMONIO_NETO --> 100% NULL
,ULTIMUS_PROY_ULTIMUS    AS PROYECTO_ULTIMUS --> 100% NULL
,ULTIMUS_APROB_ULTIMUS   AS APROBADOR_ULTIMUS --> 100% NULL
,CAST(NULL AS STRING) AS GASTO_ATRIBUIBLE --> FALTA - 100% NULL
,CAST(NULL AS STRING) AS TIPO_COSTO       --> FALTA - 100% NULL
,CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC') THEN 'FACTURA'
      WHEN SUBSTRING(FUENTE,1,3) IN ('B/V') THEN 'BOLETA VENTA'
      ELSE UPPER(FUENTE) END CATEGORIA_FUENTE
,SUBSTRING(ASIENTO,1,2) AS PAQUETE_ASIENTO
FROM `iter-data-storage-pv-uat.bi_finanzas.PLNT_MOVIMIENTOS_CONTABLES`
WHERE CAST(FORMAT_DATE("%Y%m",FECHA) AS INT64)= var_periodo_calendario
AND TIPO_BAL='BALACU'
AND SUBSTRING(CUENTA_CONTABLE,1,2) IN ('44')
AND SUBSTRING(CUENTA_CONTABLE,6,1) IN ('1')
AND SUBSTRING(CUENTA_CONTABLE,8,2) IN ('71')
;

-- ----------------------------------------------------------------------
-- Delete
-- ----------------------------------------------------------------------

DELETE FROM `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST`
WHERE PERIODO= var_periodo_calendario
AND FUENTE_ORIGEN='RESCATES Y SOBREVIVENCIA';

-- ----------------------------------------------------------------------
-- Paso 4: insert a la tabla historica mensual
-- ----------------------------------------------------------------------

INSERT INTO `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST` 
(
FUENTE_ORIGEN
,PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,FECHA_PROCESO
)
SELECT 
'RESCATES Y SOBREVIVENCIA' AS FUENTE_ORIGEN
,var_periodo_calendario    AS PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO
FROM `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_RESCATES_SOBREVIVENCIA`  
;

-- ----------------------------------------------------------------------
-- Movimientos contables de siniestros vehicular y coaseguros
-- Reserva Siniestros
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_SINIESTROS`  
AS
SELECT 
'SINIESTROS VEHICULAR' AS FUENTE_ORIGEN
,SUBSTRING(CUENTA_CONTABLE,8,2) AS RAMO
,CUENTA_CONTABLE 
,DESCRIPCION_CUENTA_CONTABLE AS DESCRIPCION
,ASIENTO
,CASE WHEN SUBSTRING(FUENTE,1,3) IN('FAC','B/V','N/C','T/D','O/C')THEN SUBSTRING(FUENTE,1,3)  
      END AS TIPO_DOCUMENTO
,CASE WHEN (CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC','B/V','N/C','T/D','O/C') THEN TRUE ELSE FALSE END) = TRUE 
      THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(FUENTE,'FAC',''),'B/V',''),'N/C',''),'T/D',''),'O/C','') 
      ELSE NULL END AS DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,REAL AS SALDO
,PRODUCTO_AREA AS PRODUCTO --> ??
,CENTRO_COSTO 
,CENTRO_COSTO_DESCRIPCION AS DESCRIPCION_CENTRO_COSTO
,'' AS TIPO_ASIENTO -- Extorno Prov Prima -- TIPO_ASIENTO -> FALTA - 100% NULL
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,'' AS NOTAS -- FALTA 
,ULTIMUS_FLUJO_EFECTIVO  AS FLUJO_EFECTIVO --> 100% NULL
,ULTIMUS_PATRIMONIO_NETO AS PATRIMONIO_NETO --> 100% NULL
,ULTIMUS_PROY_ULTIMUS    AS PROYECTO_ULTIMUS --> 100% NULL
,ULTIMUS_APROB_ULTIMUS   AS APROBADOR_ULTIMUS --> 100% NULL
,CAST(NULL AS STRING) AS GASTO_ATRIBUIBLE --> FALTA - 100% NULL
,CAST(NULL AS STRING) AS TIPO_COSTO       --> FALTA - 100% NULL
,CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC') THEN 'FACTURA'
      WHEN SUBSTRING(FUENTE,1,3) IN ('B/V') THEN 'BOLETA VENTA'
      ELSE UPPER(FUENTE) END CATEGORIA_FUENTE
,SUBSTRING(ASIENTO,1,2) AS PAQUETE_ASIENTO
FROM `iter-data-storage-pv-uat.bi_finanzas.PLNT_MOVIMIENTOS_CONTABLES`
WHERE CAST(FORMAT_DATE("%Y%m",FECHA) AS INT64)= var_periodo_calendario
AND TIPO_BAL='BALACU'
AND SUBSTRING(CUENTA_CONTABLE,1,2) IN ('42')
AND SUBSTRING(CUENTA_CONTABLE,6,1) IN ('1')
AND SUBSTRING(CUENTA_CONTABLE,8,2) IN ('21' )--> VEHICULAR
AND (CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC') THEN 'FACTURA'
      WHEN SUBSTRING(FUENTE,1,3) IN ('B/V') THEN 'BOLETA VENTA'
      ELSE UPPER(FUENTE) END) NOT LIKE '%RESERVA%'
UNION ALL
SELECT 
'SINIESTROS COASEGUROS' AS FUENTE_ORIGEN
,SUBSTRING(CUENTA_CONTABLE,8,2) AS RAMO
,CUENTA_CONTABLE 
,DESCRIPCION_CUENTA_CONTABLE AS DESCRIPCION
,ASIENTO
,CASE WHEN SUBSTRING(FUENTE,1,3) IN('FAC','B/V','N/C','T/D','O/C')THEN SUBSTRING(FUENTE,1,3)  
      END AS TIPO_DOCUMENTO
,CASE WHEN (CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC','B/V','N/C','T/D','O/C') THEN TRUE ELSE FALSE END) = TRUE 
      THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(FUENTE,'FAC',''),'B/V',''),'N/C',''),'T/D',''),'O/C','') 
      ELSE NULL END AS DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,REAL AS SALDO
,PRODUCTO_AREA AS PRODUCTO --> ??
,CENTRO_COSTO 
,CENTRO_COSTO_DESCRIPCION AS DESCRIPCION_CENTRO_COSTO
,'' AS TIPO_ASIENTO 
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,'' AS NOTAS -- FALTA 
,ULTIMUS_FLUJO_EFECTIVO  AS FLUJO_EFECTIVO --> 100% NULL
,ULTIMUS_PATRIMONIO_NETO AS PATRIMONIO_NETO --> 100% NULL
,ULTIMUS_PROY_ULTIMUS    AS PROYECTO_ULTIMUS --> 100% NULL
,ULTIMUS_APROB_ULTIMUS   AS APROBADOR_ULTIMUS --> 100% NULL
,CAST(NULL AS STRING) AS GASTO_ATRIBUIBLE --> FALTA - 100% NULL
,CAST(NULL AS STRING) AS TIPO_COSTO       --> FALTA - 100% NULL
,CASE WHEN SUBSTRING(FUENTE,1,3) IN ('FAC') THEN 'FACTURA'
      WHEN SUBSTRING(FUENTE,1,3) IN ('B/V') THEN 'BOLETA VENTA'
      ELSE UPPER(FUENTE) END CATEGORIA_FUENTE
,SUBSTRING(ASIENTO,1,2) AS PAQUETE_ASIENTO
FROM `iter-data-storage-pv-uat.bi_finanzas.PLNT_MOVIMIENTOS_CONTABLES`
WHERE CAST(FORMAT_DATE("%Y%m",FECHA) AS INT64)= var_periodo_calendario
AND TIPO_BAL='BALACU'
AND SUBSTRING(CUENTA_CONTABLE,1,2) IN ('42')
AND SUBSTRING(CUENTA_CONTABLE,6,1) IN ('7')
;
-- ----------------------------------------------------------------------
-- Delete
-- ----------------------------------------------------------------------

DELETE FROM `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST`
WHERE PERIODO= var_periodo_calendario
AND FUENTE_ORIGEN IN ('SINIESTROS VEHICULAR','SINIESTROS COASEGUROS');

-- ----------------------------------------------------------------------
-- Insert
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.bi_sbs.PLNT_MOVIMIENTO_CONTABLE_HIST` 
(
FUENTE_ORIGEN
,PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,FECHA_PROCESO
)
SELECT 
FUENTE_ORIGEN
,var_periodo_calendario AS PERIODO
,RAMO
,CUENTA_CONTABLE
,DESCRIPCION
,ASIENTO
,TIPO_DOCUMENTO
,DOCUMENTO
,REFERENCIA
,DEBITO_LOCAL
,DEBITO_DOLAR
,CREDITO_LOCAL
,CREDITO_DOLAR
,SALDO
,PRODUCTO
,CENTRO_COSTO
,DESCRIPCION_CENTRO_COSTO
,TIPO_ASIENTO
,FECHA
,NIT
,RAZON_SOCIAL
,FUENTE
,NOTAS
,FLUJO_EFECTIVO
,PATRIMONIO_NETO
,PROYECTO_ULTIMUS
,APROBADOR_ULTIMUS
,GASTO_ATRIBUIBLE
,TIPO_COSTO
,CURRENT_DATETIME('America/Lima') AS FECHA_PROCESO
FROM `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_SINIESTROS`  
;
-- ----------------------------------------------------------------------
-- Drop
-- ----------------------------------------------------------------------

DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_RESCATES_SOBREVIVENCIA`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_MOVIMIENTO_CONTABLE_PRIMAS`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PLNT_MOVIMIENTOS_CONTABLES_PRIMAS`;


END;