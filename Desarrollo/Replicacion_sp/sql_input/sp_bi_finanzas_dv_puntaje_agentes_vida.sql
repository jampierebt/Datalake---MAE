CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_bi_finanzas_dv_puntaje_agentes_vida(par_periodo INT64)
BEGIN
-- *********************************************************************
-- * Proyecto       : GOLDEN RECORD
-- * Fecha          : 19/08/2021
-- * Autor          : Ramirez Hurtado, Tito Jaime
-- * Tabla Destinos : - 
-- *                : - 
-- * Tablas Fuentes : - 
-- * Descripción    :  
-- *********************************************************************
-- *                       MODIFICACIONES POSTERIORES                  *
-- *===================================================================*
-- *===================================================================*
-- *   Fecha   | Persona |           Modificación Realizada            *
-- *           |         |                                            
-- *********************************************************************
-- ----------------------------------------------------------------------
-- Paso A10: VARIABLES GLOBALES
-- ----------------------------------------------------------------------
DECLARE variable_periodo_ejecucion INT64 DEFAULT CAST(FORMAT_DATE("%Y%m",CURRENT_DATE) AS INT64);

IF par_periodo IS NOT NULL 
THEN
  SET  variable_periodo_ejecucion = par_periodo;
END IF; 

IF variable_periodo_ejecucion >= 202111  THEN
-- ============================================================================================================
-- =                                        EJECUCION DIARIA                                                  =
-- ============================================================================================================
-- ------------------------------------------------------------------------------------------------------------
-- |||||                                            ICV                                                   |||||
-- ------------------------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------
-- Paso A11: Campo de PRIMA_FRECUENCIA_PAGO para dos coberturas
-- ----------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_POLIZA_COBERTURA_PRIMA_FRECUENCIA_PAGO`
AS
SELECT 
B.NUMERO_POLIZA
,MAX(IF(B.NOMBRE_COBERTURA='FALLECIMIENTO',ROUND(PRIMA_FRECUENCIA_PAGO,2),0)) AS PRIMA_FRECUENCIA_PAGO_FA
,MAX(IF(B.NOMBRE_COBERTURA='FALLECIMIENTO ACCIDENTAL',ROUND(PRIMA_FRECUENCIA_PAGO,2),0)) AS PRIMA_FRECUENCIA_PAGO_FC
 FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_COBERTURA` B 
 GROUP BY NUMERO_POLIZA;

-- ----------------------------------------------------------------------
-- Paso A11: Cálculo del ICV al día de hoy a nivel de Periodo-Agente
-- ----------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_ICV` AS 
(
 SELECT
         0 AS COBRADO_VI_ICV
        ,0 AS POR_COBRAR_VI_ICV
        ,0 AS RATIO_VI_ICV
        ,0 AS COBRADO_ACCIDENTAL_ICV
        ,0 AS POR_COBRAR_ACCIDENTAL_ICV
        ,0 AS RATIO_ACCIDENTAL_ICV
        ,SUM(RECAUDO_USD)        AS COBRADO_VIDA_ICV
        ,SUM(POR_COBRAR_USD)     AS POR_COBRAR_VIDA_ICV
        ,ROUND((SUM(RECAUDO_USD) /NULLIF(SUM(POR_COBRAR_USD),0)) ,2) AS RATIO_VIDA_ICV
        ,CODIGO_AGENTE_INICIAL   AS CODIGO_AGENTE
        ,PERIODO                 AS PERIODO
     FROM `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_ICV` A
    WHERE CODIGO_AGENTE_INICIAL=CODIGO_AGENTE_FINAL
      AND PERIODO = variable_periodo_ejecucion
 GROUP BY CODIGO_AGENTE_INICIAL,PERIODO
); 

-- ------------------------------------------------------------------------------------------------------------
-- |||||                              RECAUDACION - POR COBRAR,COBRADO -DIARIO                            |||||
-- ------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_COBRANZA`
AS
SELECT
   SUM(MONTO_POR_COBRAR_PEN) AS POR_COBRAR_PEN
  ,SUM(MONTO_POR_COBRAR_USD) AS POR_COBRAR_USD
  ,COD_AGENTE_FINAL          AS CODIGO_AGENTE
  ,PERIODO                   AS PERIODO 
  ,SUM(MONTO_CANTIDAD_ABONO_PEN)    AS COBRADO_PEN
  ,SUM(MONTO_CANTIDAD_ABONO_USD)    AS COBRADO_USD
FROM `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_VIDA`
WHERE PERIODO = variable_periodo_ejecucion
  AND NOMBRE_PRODUCTO NOT IN ('VIDACASH','VIDASTOCK','VIDAINVERSION','PROTECCIONFAMILIAR')
GROUP BY COD_AGENTE_FINAL,PERIODO
;


-- ----------------------------------------------------------------------
-- Paso A1:Universo de Agentes 
-- ----------------------------------------------------------------------
CREATE OR REPLACE TEMPORARY TABLE TMP_UNI_AGENTE_PUNTAJE
AS
(
SELECT EST.* EXCEPT(FLAG_AGENTE_INDICADOR_VIGENCIA)
      ,(CASE WHEN CODIGO_AGENTE = 16710 AND CODMES = 202206 
                  THEN 'S'
             WHEN CAST(FORMAT_DATE("%Y%m",FECHA_CESE) AS INT64)  = CODMES 
                  THEN 'S'
             WHEN CAST(FORMAT_DATE("%Y%m",FECHA_INICIO_VIGENCIA) AS INT64) = CODMES
                  THEN 'S'
             WHEN CODMES >= CAST(CAST(IFNULL(FECHA_CESE,FECHA_FIN_VIGENCIA) AS STRING FORMAT 'YYYYMM') AS INT64) 
                  THEN 'N'
             WHEN CODMES >= CAST(FORMAT_DATE("%Y%m",FECHA_FIN_VIGENCIA) AS INT64) 
                  THEN 'N'
             ELSE 'S'
         END) AS FLAG_AGENTE_INDICADOR_VIGENCIA
         ,(CASE WHEN EST.CODIGO_JEFE != '13958'
                 AND EST.CORREO_AGENTE IS NOT NULL
                 AND EST.TIPO_DOCUMENTO_AGENTE != 'J'
                 AND TRIM(EST.CODIGO_CONTRATO) IN('AGEVENT', 'AGEVENT ','SUPERVIS','CONAGE1')
                 AND EST.CODIGO_AGENTE != 15417
                 AND TRIM(UPPER(EST.NOMBRE_AGENTE)) NOT LIKE '%INTERSEGURO%'
                 AND COALESCE(EST.CODIGO_AGENCIA,'') NOT IN ('1088','1085')
                     THEN 'S'
                 ELSE 'N'
          END) AS FLAG_FILTRO
		  ,EST.EMAIL_LIDER  AS CORREO_GERENTE
		  ,EST.NOMBRE_LIDER AS NOMBRE_GERENTE
  FROM `iter-data-storage-pv-uat.goldenrecord_data.MM_ESTRUCTURA_COMERCIAL`  EST
  WHERE CODMES = variable_periodo_ejecucion
)
;

-- ------------------------------------------------------------------------------------------------------------
-- |||||                                    EMISIONES DE POLIZAS                                         |||||
-- ------------------------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------
-- Paso A14: Obtener el monto de la prima anual y cuota en la fecha que se emitió la Poliza.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERIODO_POLIZA_EMISION`
AS
WITH TMP_POLIZA
AS (
SELECT * EXCEPT(CORRELATIVO)
FROM 
(
SELECT
 NUMERO_POLIZA
,FRECUENCIA_POLIZA
,CASE 
WHEN FRECUENCIA_POLIZA ='MENSUAL'         THEN 12
WHEN FRECUENCIA_POLIZA ='ANUAL'           THEN 1
WHEN FRECUENCIA_POLIZA ='SEMESTRAL'       THEN 2
WHEN FRECUENCIA_POLIZA ='TRIMESTRAL'      THEN 4
WHEN FRECUENCIA_POLIZA ='PRIMAPAGO_UNICO' THEN 1
WHEN FRECUENCIA_POLIZA ='PAGOUNICO'       THEN 1
END AS FRECUENCIA_POLIZA_NUMERO
,PRIMA_NETA
,PRIMA_TOTAL
,PRIMA_TOTAL_ANUAL
,PRIMA_BRUTA_ANUAL
,IGV_ANUAL
,FECHA_EMISION
,NUMERO_PROPUESTA
,ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY FECHA_OPERACION_REG_SISTEMA ASC ) AS CORRELATIVO
FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_OPERACION` 
WHERE FECHA_EMISION = FECHA_OPERACION
  AND ESTADO_OPERACION='Applied operation'
  AND CAST(FORMAT_DATE("%Y%m",COALESCE(FECHA_EMISION,CURRENT_DATE)) AS INT64) = variable_periodo_ejecucion 
  AND NUMERO_POLIZA IN (SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` WHERE NOMBRE_GRUPO_PRODUCTO='VIDA' ) --> REDUCIR EL CONSUMO DE BYTES
)
WHERE CORRELATIVO=1
)
SELECT POL.NUMERO_POLIZA
      ,POL.NOMBRE_PRODUCTO
      ,POL.FECHA_EMISION
      ,POL.ESTADO
      ,POL.MONEDA
      ,POL.ID_MONEDA
      ,TMP.IGV_ANUAL
      ,TMP.PRIMA_BRUTA_ANUAL
      ,TMP.PRIMA_TOTAL_ANUAL
      ,TMP.PRIMA_NETA*FRECUENCIA_POLIZA_NUMERO  AS PRIMA_NETA_FRECUENCIA
      ,TMP.PRIMA_TOTAL*FRECUENCIA_POLIZA_NUMERO AS PRIMA_TOTAL_FRECUENCIA
      ,FRECUENCIA_POLIZA_NUMERO
      ,POL.PLAN 
      ,POL.OPCION_VIDA
      ,POL.FRECUENCIA_PAGO
      ,POL.PRIMA_NETA_ANUAL_PEN AS PRIMA_NETA_VIDA_ANUAL_PEN
      ,POL.PRIMA_NETA AS CUOTA
      ,POL.PRIMA_ACCIDENTAL_PEN
      ,POL.PRIMA_TOTAL_PEN AS PRIMA_TOTAL_COBERTURA_PEN
      ,POL.TIPO_CAMBIO_HM AS TIPO_CAMBIO_EMISION
      ,POL.PRIMA_NETA_ANUAL_PEN
      ,TMP.NUMERO_PROPUESTA
     FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL
LEFT JOIN TMP_POLIZA TMP
       ON POL.NUMERO_POLIZA = TMP.NUMERO_POLIZA
    WHERE NOMBRE_GRUPO_PRODUCTO ='VIDA'
      AND NOMBRE_PRODUCTO NOT IN ('VIDACASH','VIDASTOCK','VIDAINVERSION','PROTECCIONFAMILIAR')
      AND POL.FECHA_EMISION = TMP.FECHA_EMISION
;

-- ----------------------------------------------------------------------
-- Paso A15: Eliminar los datos del Periodo a Reprocesar
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_VIDA_POLIZA`
      WHERE PERIODO = variable_periodo_ejecucion ;

-- ----------------------------------------------------------------------
-- Paso A16: Insertar el Periodo que se esta reprocesando
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_VIDA_POLIZA`
(
       PERIODO
      ,CODIGO_AGENTE
      ,CODIGO_GDH
      ,NOMBRE_AGENTE
      ,CODIGO_AGENCIA_AGENTE
      ,NUMERO_DOCUMENTO_AGENTE
      ,TIPO_DOCUMENTO_AGENTE
      ,FECHA_AGENTE_CESE
      ,FECHA_AGENTE_INGRESO
--      ,FLAG_AGENTE_INDICADOR_VIGENCIA
      ,CODIGO_CONTRATO
      ,CATEGORIA_AGENTE
      ,CORREO_AGENTE
      ,DOCUMENTO_SUPERVISOR
      ,NOMBRE_SUPERVISOR
      ,CORREO_SUPERVISOR
      ,NUMERO_DOCUMENTO_JEFE
      ,NOMBRE_JEFE
      ,CODIGO_JEFE
      ,CORREO_JEFE
      ,CODIGO_UBIGEO_AGENCIA
      ,DISTRITO_AGENCIA
      ,PROVINCIA_AGENCIA
      ,DEPARTAMENTO_AGENCIA
      ,NUMERO_POLIZA
      ,NOMBRE_PRODUCTO
      ,FECHA_EMISION
      ,ESTADO_POLIZA
      ,MONEDA
      ,PRIMA_TOTAL_ANUAL
      ,PRIMA_BRUTA_ANUAL
      ,IGV_ANUAL
      ,FECHA_PROCESO
      ,MONTO_TIPO_CAMBIO_A_DOLARES
      ,PRIMA_TOTAL_ANUAL_SOLES
      ,PRIMA_TOTAL_ANUAL_DOLARES
      ,PRIMA_BRUTA_ANUAL_SOLES
      ,PRIMA_BRUTA_ANUAL_DOLARES
      ,FECHA_FIN_VIGENCIA_SUPERVISOR
      ,FECHA_INICIO_VIGENCIA_SUPERVISOR
      ,PRIMA_NETA_FRECUENCIA_SOLES
      ,PRIMA_NETA_FRECUENCIA_DOLARES
      ,PRIMA_TOTAL_FRECUENCIA_SOLES
      ,PRIMA_TOTAL_FRECUENCIA_DOLARES
      ,FRECUENCIA_POLIZA_NUMERO
      --,META_EMISION
      --,META_COBRANZA
      --,META_ICV
      ,COBRADO_PEN
      ,COBRADO_USD
      ,POR_COBRAR_PEN
      ,POR_COBRAR_USD
      --,FECHA_INGRESO_DE
      --,FECHA_CESE_DE
      ,CODIGO_SUPERVISOR
      ,FUENTE_ORIGEN_AGENTE
      ,FECHA_AGENTE_FIN_VIGENCIA
      --,Meta_Supervisor
      --,Meta_Jefe
      ,PLAN 
      ,OPCION_VIDA
      ,FRECUENCIA_PAGO
      ,PRIMA_NETA_VIDA_ANUAL_PEN
      ,CUOTA
      ,PRIMA_ACCIDENTAL_PEN
      ,PRIMA_TOTAL_COBERTURA_PEN
      ,TIPO_CAMBIO_EMISION    
      ,COD_AGENCIA_INICIAL	  
	 ,COD_AGENTE_INICIAL
      ,NOMBRE_AGENTE_INICIAL
      ,NUMERO_DOCUMENTO_CONTRATANTE 
      ,NUMERO_PROPUESTA
      ,PORCENTAJE_DEVOLUCION
      ,MONTO_COBERTURA_PRINCIPAL
      ,CONTRATANTE 		  
      ,PRIMA_FRECUENCIA_PAGO_FA
      ,PRIMA_FRECUENCIA_PAGO_FC
      ,ZONA_JEFE
      ,CODIGO_ORIGEN_ZONA
      ,FLAG_AGENTE_INDICADOR_VIGENCIA
      ,UBIGEO_AGENTE
      ,DEPARTAMENTO_AGENTE
	  ,CORREO_GERENTE
	  ,NOMBRE_GERENTE
)
SELECT 
       EST.CODMES                  AS PERIODO
      ,CAST(EST.CODIGO_AGENTE AS STRING) AS CODIGO_AGENTE
      ,EST.CODIGO_GDH
      ,EST.NOMBRE_AGENTE
      ,EST.CODIGO_AGENCIA          AS CODIGO_AGENCIA_AGENTE
      ,EST.NUMERO_DOCUMENTO_AGENTE
      ,EST.TIPO_DOCUMENTO_AGENTE
      ,EST.FECHA_CESE              AS FECHA_AGENTE_CESE
      ,EST.FECHA_INICIO_VIGENCIA   AS FECHA_AGENTE_INGRESO
      ,EST.CODIGO_CONTRATO
      ,EST.CATEGORIA               AS CATEGORIA_AGENTE
      ,EST.CORREO_AGENTE
      ,EST.NUMERO_DOCUMENTO_SUPERVISOR
      ,EST.NOMBRE_SUPERVISOR
      ,EST.CORREO_SUPERVISOR
      ,EST.NUMERO_DOCUMENTO_JEFE
      ,EST.NOMBRE_JEFE
      ,EST.CODIGO_JEFE
      ,EST.CORREO_JEFE
      ,EST.CODIGO_UBIGEO_AGENCIA
      ,UBI.DISTRITO              AS DISTRITO_AGENCIA
      ,UBI.PROVINCIA             AS PROVINCIA_AGENCIA
      ,UBI.DEPARTAMENTO          AS DEPARTAMENTO_AGENCIA
      ,POL.NUMERO_POLIZA
      ,POL.NOMBRE_PRODUCTO
      ,POL.FECHA_EMISION
      ,POL.ESTADO                AS ESTADO_POLIZA
      ,POL.MONEDA
      ,COALESCE(POL.PRIMA_TOTAL_ANUAL,0) AS PRIMA_TOTAL_ANUAL
      ,COALESCE(POL.PRIMA_BRUTA_ANUAL,0) AS PRIMA_BRUTA_ANUAL
      ,COALESCE(POL.IGV_ANUAL,0) AS IGV_ANUAL
      ,CURRENT_DATE              AS FECHA_PROCESO
      ,MONTO_TIPO_CAMBIO         AS MONTO_TIPO_CAMBIO_A_DOLARES
      ,CASE WHEN POL.ID_MONEDA = '02' /*DOLARES*/ THEN MONTO_TIPO_CAMBIO*COALESCE(POL.PRIMA_TOTAL_ANUAL,0) ELSE COALESCE(POL.PRIMA_TOTAL_ANUAL,0) END PRIMA_TOTAL_ANUAL_SOLES
      /*En caso el tipo de cambio es 0, considera nulo para no tener problema en tiempo de ejecucion*/
      ,CASE WHEN POL.ID_MONEDA = '01' /*SOLES*/ THEN COALESCE(POL.PRIMA_TOTAL_ANUAL,0)/NULLIF(MONTO_TIPO_CAMBIO,0) ELSE COALESCE(POL.PRIMA_TOTAL_ANUAL,0) END PRIMA_TOTAL_ANUAL_DOLARES
      ,CASE WHEN POL.ID_MONEDA = '02' /*DOLARES*/ THEN MONTO_TIPO_CAMBIO*COALESCE(POL.PRIMA_BRUTA_ANUAL,0) ELSE COALESCE(POL.PRIMA_BRUTA_ANUAL,0) END PRIMA_BRUTA_ANUAL_SOLES
      /*En caso el tipo de cambio es 0, considera nulo para no tener problema en tiempo de ejecucion*/
      ,CASE WHEN POL.ID_MONEDA = '01' /*SOLES*/ THEN COALESCE(POL.PRIMA_BRUTA_ANUAL,0)/NULLIF(MONTO_TIPO_CAMBIO,0) ELSE COALESCE(POL.PRIMA_BRUTA_ANUAL,0) END PRIMA_BRUTA_ANUAL_DOLARES
      ,EST.FIN_VIGENCIA_SUPERVISOR AS FECHA_FIN_VIGENCIA_SUPERVISOR
      ,EST.INICIO_VIGENCIA_SUPERVISOR AS FECHA_INICIO_VIGENCIA_SUPERVISOR
      ----- CAMPOS ADICIONALES
      ,CASE WHEN POL.ID_MONEDA = '02' /*DOLARES*/ THEN MONTO_TIPO_CAMBIO*COALESCE(POL.PRIMA_NETA_FRECUENCIA,0) ELSE COALESCE(POL.PRIMA_NETA_FRECUENCIA,0) END PRIMA_NETA_FRECUENCIA_SOLES
      ,CASE WHEN POL.ID_MONEDA = '01' /*SOLES*/ THEN COALESCE(POL.PRIMA_NETA_FRECUENCIA,0)/NULLIF(MONTO_TIPO_CAMBIO,0) ELSE COALESCE(POL.PRIMA_NETA_FRECUENCIA,0) END PRIMA_NETA_FRECUENCIA_DOLARES
      
      ,CASE WHEN POL.ID_MONEDA = '02' /*DOLARES*/ THEN MONTO_TIPO_CAMBIO*COALESCE(POL.PRIMA_TOTAL_FRECUENCIA,0) ELSE COALESCE(POL.PRIMA_TOTAL_FRECUENCIA,0) END PRIMA_TOTAL_FRECUENCIA_SOLES
      ,CASE WHEN POL.ID_MONEDA = '01' /*SOLES*/ THEN COALESCE(POL.PRIMA_TOTAL_FRECUENCIA,0)/NULLIF(MONTO_TIPO_CAMBIO,0) ELSE COALESCE(POL.PRIMA_TOTAL_FRECUENCIA,0) END PRIMA_TOTAL_FRECUENCIA_DOLARES
      ,FRECUENCIA_POLIZA_NUMERO
      --,COALESCE(HH.META_EMISION,0)  AS META_EMISION
      --,COALESCE(JJ.META_COBRANZA,0)  AS META_COBRANZA
      --,COALESCE(MIM.META_ICV,0)  AS META_ICV
      ,COALESCE(REA.COBRADO_PEN,0) AS COBRADO_PEN
      ,COALESCE(REA.COBRADO_USD,0) AS COBRADO_USD
      ,COALESCE(REA.POR_COBRAR_PEN,0) AS POR_COBRAR_PEN
      ,COALESCE(REA.POR_COBRAR_USD,0) AS POR_COBRAR_USD
      --,COALESCE(EST.FECHA_INICIO_VIGENCIA,ABB.FECHA_INGRESO_DE) AS FECHA_INGRESO_DE
      --,ABB.FECHA_CESE_DE
      ,EST.CODIGO_SUPERVISOR
      ,EST.FUENTE
      ,EST.FECHA_FIN_VIGENCIA AS FECHA_AGENTE_FIN_VIGENCIA
      --,META_SUPERVISOR
      --,META_JEFE  
      ,POL.PLAN 
      ,POL.OPCION_VIDA
      ,POL.FRECUENCIA_PAGO
      ---,POL.PRIMA_NETA_VIDA_ANUAL_PEN
      ,POL.PRIMA_NETA_ANUAL_PEN
      ,POL.CUOTA
      ,POL.PRIMA_ACCIDENTAL_PEN
      ,POL.PRIMA_TOTAL_COBERTURA_PEN
      ,POL.TIPO_CAMBIO_EMISION   
      ,POL.COD_AGENCIA_INICIAL	  
	    ,POL.COD_AGENTE_INICIAL
      ,POL.NOMBRE_AGENTE_INICIAL
      ,POL.NUMERO_DOCUMENTO_CONTRATANTE 
      ,POL.NUMERO_PROPUESTA_VID AS NUMERO_PROPUESTA 
      ,POL.PORCENTAJE_DEVOLUCION 
      ,POL.MONTO_COBERTURA_PRINCIPAL
      ,POL.CONTRATANTE_VIDA 	 AS CONTRATANTE 		 
      ,PCF.PRIMA_FRECUENCIA_PAGO_FA
      ,PCF.PRIMA_FRECUENCIA_PAGO_FC
      ,EST.ZONA_JEFE
      ,EST.CODIGO_ORIGEN_ZONA
-- VIGENCIA DEL AGENTE
      ,FLAG_AGENTE_INDICADOR_VIGENCIA
       ,EST.UBIGEO_AGENTE
       ,EST.DEPARTAMENTO_AGENTE
	   ,EST.CORREO_GERENTE
	   ,EST.NOMBRE_GERENTE
  FROM  TMP_UNI_AGENTE_PUNTAJE EST
 LEFT JOIN ( SELECT 
              KS.* 
             ,KL.COD_AGENTE_INICIAL 
             ,KL.COD_AGENCIA_INICIAL
             ,KL.NOMBRE_AGENTE_INICIAL
             ,GH.NUMERO_DOCUMENTO_CONTRATANTE 
             ,KS.NUMERO_PROPUESTA AS NUMERO_PROPUESTA_VID
             ,GH.PORCENTAJE_DEVOLUCION
             ,PJ.MONTO_COBERTURA_PRINCIPAL
             ,CONCAT(GH.NOMBRE_CONTRATANTE,'',GH.APELLIDO_PATERNO_CONTRATANTE,'',GH.APELLIDO_MATERNO_CONTRATANTE) AS CONTRATANTE_VIDA 
               FROM `iter-data-storage-pv-uat.temp.TMP_PERIODO_POLIZA_EMISION` KS 
         INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_AGENTE` KL 
                 ON KS.NUMERO_POLIZA = KL.NUMERO_POLIZA    
         INNER JOIN `iter-data-storage-pv-uat.dm_analysis.V_MD_POLIZA` GH
                 ON GH.NUMERO_POLIZA=KL.NUMERO_POLIZA 
	       INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` PJ 
		             ON PJ.NUMERO_POLIZA=GH.NUMERO_POLIZA
           ) POL  
         ON CAST(EST.CODIGO_AGENTE AS STRING) = POL.COD_AGENTE_INICIAL
 LEFT JOIN `iter-data-storage-pv-uat.external_data.UBIGEO` UBI
        ON UBI.COD_UBIGEO = EST.CODIGO_UBIGEO_AGENCIA 
 LEFT JOIN (SELECT COD_CODIGO
                ,CAST(FORMAT_DATE("%Y%m",DATE(DATETIME(fec_inicial_rango,'America/Lima'))) AS INT64) AS PERIODO
                ,val_dato AS MONTO_TIPO_CAMBIO
            FROM `iter-data-storage-pv-uat.raw_vesta_exp_serv.VAL_RANFEC_raw`
           WHERE nom_tabla  = 'MONEDA'
             AND cod_codigo = '010'
        ) TIP
   ON TIP.PERIODO = EST.CODMES
-- METAS EMISION POR AGENCIA Y PERIODO
--LEFT JOIN ( 
--          SELECT AGENCIA AS COD_AGENCIA
--                ,CAST(FORMAT_DATE("%Y%m",PERIODO) AS INT64) AS PERIODO
--                ,ZONA
--                ,IFNULL(META,0) AS META_EMISION
--                ,Meta_Supervisor 
--                ,Meta_Jefe       
--           FROM `iter-data-storage-pv-uat.inputfiles.METAEMISION`
--          ) HH
--       ON HH.COD_AGENCIA = EST.CODIGO_AGENCIA --AGE.COD_AGENCIA_INICIAL
--      AND HH.PERIODO     = EST.CODMES
---- METAS COBRANZA POR ZONA Y PERIODO
--LEFT JOIN (
--            SELECT
--                  REPLACE(UPPER(ZONA),' ','_') AS ZONA
--                ,CAST(FORMAT_DATE("%Y%m",PERIODO) AS INT64) AS PERIODO
--                ,META AS META_COBRANZA
--              FROM `iter-data-storage-pv-uat.inputfiles.METACOBRANZA` 
--          ) JJ
--       ON JJ.ZONA    = EST.ZONA_JEFE
--      AND JJ.PERIODO = EST.CODMES
---- METAS COBRANZA POR ZONA Y PERIODO
--LEFT JOIN (
--            SELECT
--                  REPLACE(UPPER(ZONA),' ','_') AS ZONA
--                ,CAST(FORMAT_DATE("%Y%m",PERIODO) AS INT64) AS PERIODO
--                ,META AS META_ICV
--              FROM `iter-data-storage-pv-uat.inputfiles.METAICV`
--          ) MIM
--       ON MIM.ZONA    = EST.ZONA_JEFE
--      AND MIM.PERIODO = EST.CODMES
-- MONTO RECAUDADO Y POR RECAUDAR
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_COBRANZA` REA
        ON REA.CODIGO_AGENTE = CAST(EST.CODIGO_AGENTE AS STRING)
       AND REA.PERIODO       = EST.CODMES
--LEFT JOIN `iter-data-storage-pv-uat.inputfiles.DE_AGENTES_BI` ABB
--        ON ABB.CODIGO_AGENTE = CAST(EST.CODIGO_AGENTE AS STRING)
LEFT JOIN  `iter-data-storage-pv-uat.temp.TMP_POLIZA_COBERTURA_PRIMA_FRECUENCIA_PAGO` PCF
        ON PCF.NUMERO_POLIZA     = POL.NUMERO_POLIZA
     WHERE EST.CODMES            = variable_periodo_ejecucion  
       AND EST.FLAG_FILTRO           ='S'
   --    AND IFNULL(EST.FLAG_AGENTE_INDICADOR_VIGENCIA,'A') = (CASE WHEN par_periodo IS NULL THEN 'S' ELSE IFNULL(EST.FLAG_AGENTE_INDICADOR_VIGENCIA ,'A')  END)
;

-- ===========================================================================
--             NIVEL AGRP : Agente-Periodo 
-- ===========================================================================
-- ----------------------------------------------------------------------
-- Paso A17: Eliminar el Periodo a reprocesar de la tabla AGREGADA a nivel de Agente
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_VIDA`
       WHERE PERIODO = variable_periodo_ejecucion;

-- ----------------------------------------------------------------------
-- Paso A18: Insertar datos agregados a nivel de Agente
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_VIDA`
(
 PERIODO
,CODIGO_AGENTE
,CODIGO_GDH
,NOMBRE_AGENTE
,CODIGO_AGENCIA_AGENTE
,NUMERO_DOCUMENTO_AGENTE
,TIPO_DOCUMENTO_AGENTE
,FECHA_AGENTE_CESE
,FECHA_AGENTE_INGRESO
,FLAG_AGENTE_INDICADOR_VIGENCIA
,CODIGO_CONTRATO
,CATEGORIA_AGENTE
,CORREO_AGENTE
,DOCUMENTO_SUPERVISOR
,NOMBRE_SUPERVISOR
,CORREO_SUPERVISOR
,NUMERO_DOCUMENTO_JEFE
,NOMBRE_JEFE
,CODIGO_JEFE
,CORREO_JEFE
,CODIGO_UBIGEO_AGENCIA
,DISTRITO_AGENCIA
,PROVINCIA_AGENCIA
,DEPARTAMENTO_AGENCIA
,PRIMA_TOTAL_ANUAL_SOLES
,PRIMA_TOTAL_ANUAL_DOLARES
,PRIMA_BRUTA_ANUAL_SOLES
,PRIMA_BRUTA_ANUAL_DOLARES
,PRIMA_NETA_FRECUENCIA_SOLES
,PRIMA_NETA_FRECUENCIA_DOLARES
,PRIMA_TOTAL_FRECUENCIA_SOLES
,PRIMA_TOTAL_FRECUENCIA_DOLARES
,MONTO_TIPO_CAMBIO_A_DOLARES
,FECHA_INICIO_VIGENCIA_SUPERVISOR
,FECHA_FIN_VIGENCIA_SUPERVISOR
,META_EMISION
,META_COBRANZA
,META_ICV
,COBRADO_PEN
,COBRADO_USD
,POR_COBRAR_PEN
,POR_COBRAR_USD
,FECHA_INGRESO_DE
,FECHA_CESE_DE
,CODIGO_SUPERVISOR
,COBRADO_VI_ICV
,POR_COBRAR_VI_ICV
,RATIO_VI_ICV
,COBRADO_ACCIDENTAL_ICV
,POR_COBRAR_ACCIDENTAL_ICV
,RATIO_ACCIDENTAL_ICV
,COBRADO_VIDA_ICV
,POR_COBRAR_VIDA_ICV
,RATIO_VIDA_ICV
,FUENTE_ORIGEN_AGENTE
,FECHA_AGENTE_FIN_VIGENCIA
,META_SUPERVISOR
,META_JEFE  
,EMISION_VIDA_NETA
,ZONA_JEFE
,CODIGO_ORIGEN_ZONA
)
SELECT
 AGE.PERIODO
,AGE.CODIGO_AGENTE
,AGE.CODIGO_GDH
,AGE.NOMBRE_AGENTE
,AGE.CODIGO_AGENCIA_AGENTE
,AGE.NUMERO_DOCUMENTO_AGENTE
,AGE.TIPO_DOCUMENTO_AGENTE
,AGE.FECHA_AGENTE_CESE
,AGE.FECHA_AGENTE_INGRESO
,AGE.FLAG_AGENTE_INDICADOR_VIGENCIA
,AGE.CODIGO_CONTRATO
,AGE.CATEGORIA_AGENTE
,AGE.CORREO_AGENTE
,AGE.DOCUMENTO_SUPERVISOR
,AGE.NOMBRE_SUPERVISOR
,AGE.CORREO_SUPERVISOR
,AGE.NUMERO_DOCUMENTO_JEFE
,AGE.NOMBRE_JEFE
,AGE.CODIGO_JEFE
,AGE.CORREO_JEFE
,AGE.CODIGO_UBIGEO_AGENCIA
,AGE.DISTRITO_AGENCIA
,AGE.PROVINCIA_AGENCIA
,AGE.DEPARTAMENTO_AGENCIA
,SUM(AGE.PRIMA_TOTAL_ANUAL_SOLES) AS PRIMA_TOTAL_ANUAL_SOLES
,SUM(AGE.PRIMA_TOTAL_ANUAL_DOLARES) AS PRIMA_TOTAL_ANUAL_DOLARES
,SUM(AGE.PRIMA_BRUTA_ANUAL_SOLES) AS PRIMA_BRUTA_ANUAL_SOLES
,SUM(AGE.PRIMA_BRUTA_ANUAL_DOLARES) AS PRIMA_BRUTA_ANUAL_DOLARES
--
,SUM(AGE.PRIMA_NETA_FRECUENCIA_SOLES) AS PRIMA_NETA_FRECUENCIA_SOLES
,SUM(AGE.PRIMA_NETA_FRECUENCIA_DOLARES) AS PRIMA_NETA_FRECUENCIA_DOLARES
,SUM(AGE.PRIMA_TOTAL_FRECUENCIA_SOLES) AS PRIMA_TOTAL_FRECUENCIA_SOLES
,SUM(AGE.PRIMA_TOTAL_FRECUENCIA_DOLARES) AS PRIMA_TOTAL_FRECUENCIA_DOLARES
--
,MAX(AGE.MONTO_TIPO_CAMBIO_A_DOLARES) AS MONTO_TIPO_CAMBIO_A_DOLARES
,AGE.FECHA_INICIO_VIGENCIA_SUPERVISOR
,AGE.FECHA_FIN_VIGENCIA_SUPERVISOR
,AGE.META_EMISION
,AGE.META_COBRANZA
,AGE.META_ICV
,MAX(AGE.COBRADO_PEN ) AS COBRADO_PEN
,MAX(AGE.COBRADO_USD ) AS COBRADO_USD
,MAX(AGE.POR_COBRAR_PEN  ) AS POR_COBRAR_PEN
,MAX(AGE.POR_COBRAR_USD ) AS POR_COBRAR_USD
,AGE.FECHA_INGRESO_DE
,AGE.FECHA_CESE_DE
,AGE.CODIGO_SUPERVISOR
,MAX(AIV.COBRADO_VI_ICV) AS  COBRADO_VI_ICV
,MAX(AIV.POR_COBRAR_VI_ICV) AS POR_COBRAR_VI_ICV
,MAX(AIV.RATIO_VI_ICV) AS RATIO_VI_ICV
,MAX(AIV.COBRADO_ACCIDENTAL_ICV) AS COBRADO_ACCIDENTAL_ICV
,MAX(AIV.POR_COBRAR_ACCIDENTAL_ICV) AS POR_COBRAR_ACCIDENTAL_ICV
,MAX(AIV.RATIO_ACCIDENTAL_ICV) AS RATIO_ACCIDENTAL_ICV
,MAX(AIV.COBRADO_VIDA_ICV) AS COBRADO_VIDA_ICV
,MAX(AIV.POR_COBRAR_VIDA_ICV) AS POR_COBRAR_VIDA_ICV
,MAX(AIV.RATIO_VIDA_ICV) AS RATIO_VIDA_ICV
,FUENTE_ORIGEN_AGENTE 
,AGE.FECHA_AGENTE_FIN_VIGENCIA
,AGE.META_SUPERVISOR
,AGE.META_JEFE 
,SUM(AGE.PRIMA_NETA_VIDA_ANUAL_PEN) AS EMISION_VIDA_NETA
,AGE.ZONA_JEFE
,AGE.CODIGO_ORIGEN_ZONA
     FROM `iter-data-storage-pv-uat.bi_finanzas.DV_PUNTAJE_AGENTES_VIDA_POLIZA` AGE
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_ICV` AIV
       ON AIV.PERIODO       = AGE.PERIODO
      AND AIV.CODIGO_AGENTE = AGE.CODIGO_AGENTE
WHERE AGE.PERIODO = variable_periodo_ejecucion
GROUP BY
 AGE.PERIODO
,AGE.CODIGO_AGENTE
,AGE.CODIGO_GDH
,AGE.NOMBRE_AGENTE
,AGE.CODIGO_AGENCIA_AGENTE
,AGE.NUMERO_DOCUMENTO_AGENTE
,AGE.TIPO_DOCUMENTO_AGENTE
,AGE.FECHA_AGENTE_CESE
,AGE.FECHA_AGENTE_INGRESO
,AGE.FLAG_AGENTE_INDICADOR_VIGENCIA
,AGE.CODIGO_CONTRATO
,AGE.CATEGORIA_AGENTE
,AGE.CORREO_AGENTE
,AGE.DOCUMENTO_SUPERVISOR
,AGE.NOMBRE_SUPERVISOR
,AGE.CORREO_SUPERVISOR
,AGE.NUMERO_DOCUMENTO_JEFE
,AGE.NOMBRE_JEFE
,AGE.CODIGO_JEFE
,AGE.CORREO_JEFE
,AGE.CODIGO_UBIGEO_AGENCIA
,AGE.DISTRITO_AGENCIA
,AGE.PROVINCIA_AGENCIA
,AGE.DEPARTAMENTO_AGENCIA
,AGE.FECHA_INICIO_VIGENCIA_SUPERVISOR
,AGE.FECHA_FIN_VIGENCIA_SUPERVISOR
,AGE.FECHA_INGRESO_DE
,AGE.FECHA_CESE_DE
,AGE.CODIGO_SUPERVISOR
,AGE.META_EMISION
,AGE.META_COBRANZA
,AGE.META_ICV
,AGE.FUENTE_ORIGEN_AGENTE
,AGE.FECHA_AGENTE_FIN_VIGENCIA
,AGE.META_SUPERVISOR
,AGE.META_JEFE 
,AGE.ZONA_JEFE
,AGE.CODIGO_ORIGEN_ZONA
;

-- ----------------------------------------------------------------------
-- Paso A19: Eliminar tablas Temporales
-- ----------------------------------------------------------------------
--DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERIODO_POLIZA_EMISION`;
--DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_ICV`;
--DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERIODO_AGENTE_COBRANZA`;

END IF;

END;