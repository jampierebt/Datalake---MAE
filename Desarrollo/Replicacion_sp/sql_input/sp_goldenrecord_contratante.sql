CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_goldenrecord_contratante()
OPTIONS(
  strict_mode=true)
BEGIN 
-- *********************************************************************
-- * Fecha          : 08/03/2022
-- * Autor          : Ramirez Hurtado, Tito J.
--                  : Jayo Escalante, Geraldine Indira
-- * Tabla Destinos : - 
-- *                : - 
-- * Tablas Fuentes : - 
-- * Descripción    : 
-- *********************************************************************
-- *                       MODIFICACIONES POSTERIORES                  *
-- *===================================================================*
-- *===================================================================*
-- *   Fecha   | Persona |           Modificación Realizada            *
-- *           |         |                                            
-- *********************************************************************


-- ------------------------------------------------------------------------------------------------
-- Paso 0: Universo de Contratantes que si tienen una cuenta en la ZONA SEGURA
-- ------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_CON_USUARIO_ZONA_PRIVADA`
AS
(
SELECT
  UPPER(TO_HEX(SHA256(CONCAT(
    CASE WHEN TIPO_DOCUMENTO = "1" THEN '01'
         WHEN TIPO_DOCUMENTO = "2" THEN '02'
         WHEN TIPO_DOCUMENTO = "3" THEN '03'
    END
    ,LPAD(TRIM(NUMERO_DOCUMENTO),15,'0'))))) AS HASH_ID,
  --NUMERO_DOCUMENTO,
  (CASE
       WHEN estado='0' then 'INICIADO'
       WHEN estado='1' then 'CREADO'
       WHEN estado='2' then 'BLOQUEADO'
       ELSE estado
  END) AS ESTADO_USUARIO_ZONAPRIVADA
  ,TRUE AS FLAG_USUARIO_ZONAPRIVADA
 FROM `iter-data-storage-pv-uat.portaldb_data.USUARIO_raw`
 WHERE NUMERO_DOCUMENTO IS NOT NULL
QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_DOCUMENTO,TIPO_DOCUMENTO ORDER BY auditoria_fecha_crea DESC ))=1
)
;
-- ------------------------------------------------------------------------------------------------
-- Paso 0: CUSPP de las fuentes de VTIGER para poblar a los contratantes de rentas
-- ------------------------------------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_RENTA_CONTRANTE_CUSPP`
AS
WITH TMP_VTIGER_CUSPP AS 
(
SELECT DISTINCT CUSPP,NUMERO_DOCUMENTO,FUENTE
FROM (
 SELECT DISTINCT 
CONTCF.CF_1036 AS CUSPP
,CASE WHEN CONTCF.CF_854 LIKE '%?%' THEN NULL
      WHEN CONTCF.CF_854='' THEN NULL
      ELSE CONTCF.CF_854 END AS NUMERO_DOCUMENTO
,'VTIGER-RENTA-vtigercrm_rentas_is' AS FUENTE
FROM `iter-data-storage-pv-uat.vtiger_data.VTIGER_CONTACTSCF_IS` contcf
UNION ALL
SELECT DISTINCT
POTCF.cf_948 AS CUSPP
,CASE WHEN CONTCF.CF_874='????' THEN NULL
      WHEN CONTCF.CF_874=''     THEN NULL 
      ELSE CONTCF.CF_874 END AS NUMERO_DOCUMENTO -- VALIDAR ESTO TRAE "??"
,'VTIGER-RENTA-vtigercrm_730rentas' AS FUENTE
FROM  `iter-data-storage-pv-uat.vtiger_data.VTIGER_POTENTIAL_RJ` POT 
LEFT JOIN  `iter-data-storage-pv-uat.vtiger_data.VTIGER_POTENTIALSCF_RJ`   POTCF ON POT.POTENTIALID = POTCF.POTENTIALID
LEFT JOIN `iter-data-storage-pv-uat.vtiger_data.VTIGER_CONTACTSCF_RJ` CONTCF ON POT.CONTACT_ID = CONTCF.CONTACTID
)  
WHERE CUSPP IS NOT NULL AND NUMERO_DOCUMENTO IS NOT NULL    
)
SELECT 
CUSPP,NUMERO_DOCUMENTO
FROM TMP_VTIGER_CUSPP
QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_DOCUMENTO))=1;

-- ------------------------------------------------------------------------------------------------
-- Paso 1: Consolidado de universo de Contratantes de las fuentes de Renta Particular, Viajes, Acsele
-- ------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_RENTAS_VC_VIAJES`
AS
-- ================================================================================================ 
-- ***                                   RENTA PARTICULAR                                       *** 
-- ================================================================================================ 
SELECT 
TAB.*
,ZOP.ESTADO_USUARIO_ZONAPRIVADA
,COALESCE(ZOP.FLAG_USUARIO_ZONAPRIVADA,FALSE) AS FLAG_USUARIO_ZONAPRIVADA
  FROM 
(
SELECT DISTINCT
 -- TEMP.ID_FUENTE,
  '01' ID_ROL
 ,CONCAT('01', '-', EG2.CODIGO_GLOBAL, '-', PER.gls_nro_identificacion) ID_PERSONA
 ,upper(to_hex(sha256(CONCAT(EG2.CODIGO_CORPORATIVO,LPAD(PER.gls_nro_identificacion,15,'0'))))) HASH_ID
 ,EG2.CODIGO_GLOBAL AS ID_TIPO_DOCUMENTO
 ,EG2.NOMBRE_GLOBAL AS TIPO_DOCUMENTO
 ,PER.gls_nro_identificacion AS NUMERO_DOCUMENTO
 ,PER.gls_ape_paterno AS APELLIDO_PATERNO
 ,PER.gls_ape_materno AS APELLIDO_MATERNO
 ,PER.gls_nom_persona AS NOMBRE
 ,CAST(NULL AS STRING) AS RAZON_SOCIAL
 ,CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_nacimiento AS DATE)) <= 1900 OR PER.fec_nacimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE DATE(PER.fec_nacimiento , 'America/Lima')
  END AS FECHA_NACIMIENTO
 ,CASE
  WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_fallecimiento AS DATE)) <= 1900 OR PER.fec_fallecimiento IS NULL THEN CAST(NULL AS DATE)
  ELSE DATE(PER.fec_fallecimiento , 'America/Lima')
  END AS FECHA_FALLECIMIENTO
 ,IFNULL(EG3.CODIGO_GLOBAL, '') ID_GENERO
 ,IFNULL(EG3.NOMBRE_GLOBAL, '') GENERO
 ,CASE WHEN IFNULL(PER.cod_estado_civil, '-') = '-' OR PER.cod_estado_civil = '' THEN '00'
  ELSE PER.cod_estado_civil END ID_ESTADO_CIVIL
  --IFNULL(EG1.CODIGO_GLOBAL, '00')  ID_ESTADO_CIVIL,
 ,IFNULL(EG1.NOMBRE_GLOBAL, 'SIN ESPECIFICAR') ESTADO_CIVIL
 ,CASE WHEN IFNULL(CAST(OC.AttributeValue AS STRING), '') = '' THEN 'SIN ESPECIFICAR' 
      WHEN PER.cod_profesion = '538560013' THEN 'SIN ESPECIFICAR' ELSE UPPER(OC.Value) END
      PROFESION
 ,CASE WHEN IFNULL(CAST(NC.AttributeValue AS STRING), '') = '' THEN 'SIN ESPECIFICAR' 
    WHEN PER.cod_nacionalidad = '538560017' THEN 'SIN ESPECIFICAR' ELSE UPPER(NC.Value) END AS NACIONALIDAD
 ,CO.inter_centrolaboral    AS CENTRO_TRABAJO
 ,'00'                      AS ID_CONDICION_FUMADOR
 ,'SIN ESPECIFICAR'         AS CONDICION_FUMADOR
 --,CAST(NULL AS STRING)      AS CUSPP
  ,CUS.CUSPP      AS CUSPP
 ,CAST(NULL AS STRING) AFP
 ,'TITULAR' AS PARENTESCO
 ,'' AS ID_PADRE
       FROM `iter-data-storage-pv-uat.admwr_data.persona_raw`  PER
  INNER JOIN `iter-data-storage-pv-uat.admwr_data.poliza_raw`  POL 
         ON POL.cod_persona = PER.cod_persona
  INNER JOIN `iter-data-storage-pv-uat.admwr_data.beneficiario_raw` BEN 
         ON BEN.cod_persona = PER.cod_persona AND BEN.cod_poliza = POL.cod_poliza
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG1 
         ON PER.cod_estado_civil= EG1.VALOR_ORIGEN     
        AND EG1.ID_FUENTE   = '03'
        AND EG1.CODIGO_TIPO = 'ESTADOCIVIL'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG2
         ON PER.cod_tipo_identificacion = EG2.VALOR_ORIGEN
        AND EG2.ID_FUENTE   = '03'
        AND EG2.CODIGO_TIPO = 'TIPODOC'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG3 
         ON PER.cod_sexo = EG3.VALOR_ORIGEN 
        AND EG3.ID_FUENTE = '03' 
        AND EG3.CODIGO_TIPO = 'GENERO'
  LEFT JOIN `iter-data-storage-pv-uat.crm_data.stringmap_raw` OC 
         ON CAST(OC.AttributeValue AS STRING) = PER.cod_profesion 
         AND OC.AttributeName = 'inter_profesion' 
         AND OC.ObjectTypeCode = 10004
  LEFT JOIN `iter-data-storage-pv-uat.crm_data.stringmap_raw`  NC 
         ON CAST(NC.AttributeValue AS STRING) = PER.cod_nacionalidad 
         AND NC.AttributeName = 'inter_nacionalidad' 
         AND NC.ObjectTypeCode = 10004
  LEFT JOIN `iter-data-storage-pv-uat.crm_data.contact_raw` CO
         ON  CO.inter_numerodedocumento = PER.gls_nro_identificacion
  LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_RENTA_CONTRANTE_CUSPP` CUS
         ON PER.gls_nro_identificacion=CUS.NUMERO_DOCUMENTO         
      WHERE POL.cod_tipo_producto IN ('RPP','IFP') 
        AND BEN.cod_parentesco = '80' 
UNION ALL 
-- ================================================================================================ 
-- ***                                   VIDACASH                                              *** 
-- ================================================================================================ 
SELECT DISTINCT
  --CNF.ID_FUENTE,
  '01' AS ID_ROL,
  CONCAT('01', '-', GL3.CODIGO_GLOBAL, '-', A.NUMERO_DOCUMENTO) AS ID_PERSONA,
  upper(to_hex(sha256(CONCAT(GL3.CODIGO_CORPORATIVO,LPAD(A.NUMERO_DOCUMENTO,15,'0'))))) HASH_ID,
  GL3.CODIGO_GLOBAL         AS ID_TIPO_DOCUMENTO,
  GL3.NOMBRE_GLOBAL         AS TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO,
  UPPER(A.APELLIDO_PATERNO) AS APELLIDO_PATERNO,
  UPPER(A.APELLIDO_MATERNO) AS APELLIDO_MATERNO,
  UPPER(A.NOMBRE)           AS NOMBRE,
  (CASE WHEN A.ID_TIPO_DOCUMENTO=3 
        THEN UPPER(A.NOMBRE) 
	    ELSE CAST(NULL AS STRING) 
  END)                   AS RAZON_SOCIAL,
  SAFE_CAST(A.FECHA_NACIMIENTO AS DATE) AS FECHA_NACIMIENTO,
  CAST(NULL AS DATE)     AS FECHA_FALLECIMIENTO,
  GL1.CODIGO_GLOBAL      AS ID_GENERO,
  GL1.NOMBRE_GLOBAL      AS GENERO,
  CAST(NULL AS STRING)   AS ID_ESTADO_CIVIL,
  CAST(NULL AS STRING)   AS ESTADO_CIVIL,
  CAST(NULL AS STRING)   AS PROFESION,
  CAST(NULL AS STRING)   AS NACIONALIDAD,
  CAST(NULL AS STRING)   AS CENTRO_TRABAJO,
  GL4.CODIGO_GLOBAL      AS ID_CONDICION_FUMADOR,
  GL4.NOMBRE_GLOBAL      AS CONDICION_FUMADOR,
  CAST(NULL AS STRING)   AS CUSPP,
  CAST(NULL AS STRING)   AS AFP,
  'TITULAR' AS PARENTESCO,
  '' AS ID_PADRE, 
        FROM `iter-data-storage-pv-uat.vidacash_data.CLIENTE_raw` A
  INNER JOIN `iter-data-storage-pv-uat.vidacash_data.POLIZA_raw` B
          ON A.ID_CLIENTE      =B.ID_CLIENTE
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL1 
        ON GL1.VALOR_ORIGEN    =A.SEXO 
       AND GL1.ID_FUENTE       ='10' 
       AND GL1.CODIGO_TIPO     ='GENERO'
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL3 
        ON GL3.VALOR_ORIGEN    =CAST(A.ID_TIPO_DOCUMENTO AS STRING)
       AND GL3.ID_FUENTE       ='10' 
       AND GL3.CODIGO_TIPO     ='TIPODOC'
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL4 
        ON GL4.VALOR_ORIGEN    =CAST(B.CONDICION_FUMADOR AS STRING)
       AND GL4.ID_FUENTE       ='10' 
       AND GL4.CODIGO_TIPO     ='FUMADOR'
  WHERE TRIM(COALESCE(B.NUMERO_POLIZA,''))<>'' 
    AND TRIM(COALESCE(A.NUMERO_DOCUMENTO,''))<>''
UNION ALL 

-- ================================================================================================ 
-- ***                                   RUMBO                                              *** 
-- ================================================================================================ 
SELECT DISTINCT
  --CNF.ID_FUENTE,
  '01' AS ID_ROL,
  CONCAT('01', '-', GL3.CODIGO_GLOBAL, '-', A.NUMERO_DOCUMENTO) AS ID_PERSONA,
  upper(to_hex(sha256(CONCAT(GL3.CODIGO_CORPORATIVO,LPAD(A.NUMERO_DOCUMENTO,15,'0'))))) HASH_ID,
  GL3.CODIGO_GLOBAL         AS ID_TIPO_DOCUMENTO,
  GL3.NOMBRE_GLOBAL         AS TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO,
  UPPER(A.APELLIDO_PATERNO) AS APELLIDO_PATERNO,
  UPPER(A.APELLIDO_MATERNO) AS APELLIDO_MATERNO,
  UPPER(A.NOMBRE)           AS NOMBRE,
  (CASE WHEN A.ID_TIPO_DOCUMENTO=3 
        THEN UPPER(A.NOMBRE) 
	    ELSE CAST(NULL AS STRING) 
  END)                   AS RAZON_SOCIAL,
  SAFE_CAST(A.FECHA_NACIMIENTO AS DATE) AS FECHA_NACIMIENTO,
  CAST(NULL AS DATE)     AS FECHA_FALLECIMIENTO,
  GL1.CODIGO_GLOBAL      AS ID_GENERO,
  GL1.NOMBRE_GLOBAL      AS GENERO,
  CAST(NULL AS STRING)   AS ID_ESTADO_CIVIL,
  CAST(NULL AS STRING)   AS ESTADO_CIVIL,
  CAST(NULL AS STRING)   AS PROFESION,
  CAST(NULL AS STRING)   AS NACIONALIDAD,
  CAST(NULL AS STRING)   AS CENTRO_TRABAJO,
  GL4.CODIGO_GLOBAL      AS ID_CONDICION_FUMADOR,
  GL4.NOMBRE_GLOBAL      AS CONDICION_FUMADOR,
  CAST(NULL AS STRING)   AS CUSPP,
  CAST(NULL AS STRING)   AS AFP,
  'TITULAR' AS PARENTESCO,
  '' AS ID_PADRE, 
        FROM `iter-data-storage-pv-uat.rumbo_data.CLIENTE_raw` A
  INNER JOIN `iter-data-storage-pv-uat.rumbo_data.POLIZA_raw` B
          ON A.ID_CLIENTE      =B.ID_CLIENTE
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL1 
        ON GL1.VALOR_ORIGEN    =A.SEXO 
       AND GL1.ID_FUENTE       ='10' 
       AND GL1.CODIGO_TIPO     ='GENERO'
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL3 
        ON GL3.VALOR_ORIGEN    =CAST(A.ID_TIPO_DOCUMENTO AS STRING)
       AND GL3.ID_FUENTE       ='10' 
       AND GL3.CODIGO_TIPO     ='TIPODOC'
 LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL4 
        ON GL4.VALOR_ORIGEN    =CAST(B.CONDICION_FUMADOR AS STRING)
       AND GL4.ID_FUENTE       ='10' 
       AND GL4.CODIGO_TIPO     ='FUMADOR'
  WHERE TRIM(COALESCE(B.NUMERO_POLIZA,''))<>'' 
    AND TRIM(COALESCE(A.NUMERO_DOCUMENTO,''))<>''
UNION ALL 
-- ================================================================================================ 
-- ***                                   VIAJES                                                 *** 
-- ================================================================================================ 
-- LA CANTIDAD ES LA MISMA --> 39225
SELECT DISTINCT
 -- CNF.ID_FUENTE
  '01' ID_ROL
  ,CONCAT('01', '-', GL1.CODIGO_GLOBAL, '-', A.numero_documento) ID_PERSONA
  ,upper(to_hex(sha256(CONCAT(GL1.CODIGO_CORPORATIVO,LPAD(A.NUMERO_DOCUMENTO,15,'0'))))) HASH_ID
  ,GL1.CODIGO_GLOBAL AS ID_TIPO_DOCUMENTO
  ,GL1.NOMBRE_GLOBAL AS  TIPO_DOCUMENTO
  ,A.numero_documento NUMERO_DOCUMENTO
  ,UPPER(A.apellido_paterno) AS APELLIDO_PATERNO
  ,UPPER(A.apellido_materno) AS APELLIDO_MATERNO
  ,CASE WHEN GL1.CODIGO_GLOBAL = '03' THEN CAST(NULL AS STRING) ELSE UPPER(A.nombres) END AS NOMBRE
  ,CASE WHEN GL1.CODIGO_GLOBAL = '03' THEN UPPER(A.nombres) ELSE CAST(NULL AS STRING) END RAZON_SOCIAL
  ,CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(A.fecha_nacimiento AS DATE)) <= 1900 OR A.fecha_nacimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE DATE(A.fecha_nacimiento, 'America/Lima')
   END FECHA_NACIMIENTO 
  ,CAST(NULL AS DATE)     AS FECHA_FALLECIMIENTO
  ,CAST(NULL AS STRING)   AS ID_GENERO
  ,CAST(NULL AS STRING)   AS GENERO
  ,CAST(NULL AS STRING)   AS ID_ESTADO_CIVIL
  ,CAST(NULL AS STRING)   AS ESTADO_CIVIL
  ,CAST(NULL AS STRING)   AS PROFESION
  ,CAST(NULL AS STRING)   AS NACIONALIDAD
  ,CAST(NULL AS STRING)   AS CENTRO_TRABAJO
  ,'' ID_CONDICION_FUMADOR
  ,'' CONDICION_FUMADOR
  ,CAST(NULL AS STRING)   AS CUSPP
  ,CAST(NULL AS STRING) AFP
  ,'TITULAR' AS PARENTESCO
  ,'' AS ID_PADRE 
  FROM `iter-data-storage-pv-uat.traveldb_data.cliente_venta_raw`  A
  INNER JOIN `iter-data-storage-pv-uat.traveldb_data.venta_raw` B 
  ON A.id_venta = B._id 
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` GL1 
  ON CAST(A.tipo_documento AS STRING) = GL1.VALOR_ORIGEN 
        AND GL1.ID_FUENTE        ='07'
        AND GL1.CODIGO_TIPO = 'TIPODOC'
  WHERE NUMERO_DOCUMENTO IS NOT NULL
    AND A.flag_titular = '1'  -- FLAG DE CONTRATANTE
    AND NUMERO_POLIZA IS NOT NULL -- SE AGREGO PARA QUE NO SUCEDA QUE SE REPITAN LAS POLIZAS CON DOS CONTRATANTES
    AND  B.estado_venta_estado = '2' --
  ) TAB
  LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_CON_USUARIO_ZONA_PRIVADA` ZOP
         ON ZOP.HASH_ID = TAB.HASH_ID
  WHERE TAB.NUMERO_DOCUMENTO IS NOT NULL
  QUALIFY (
		  ROW_NUMBER() OVER( PARTITION BY TAB.ID_PERSONA ORDER BY TAB.ID_PERSONA DESC )) = 1
;			  

-- ------------------------------------------------------------------------------------------------
-- Paso 1: Diferencial
-- ------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF`
AS
-- Universo de Registros NUEVOS o que se Modificados
WITH TMP_LANDING AS 
(
SELECT 
 ID_PERSONA
,ID_ROL
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,RAZON_SOCIAL
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,CENTRO_TRABAJO
,ID_CONDICION_FUMADOR
,CONDICION_FUMADOR
,CUSPP
,AFP
,PARENTESCO
,HASH_ID
,ESTADO_USUARIO_ZONAPRIVADA
,FLAG_USUARIO_ZONAPRIVADA
,UPPER(TO_HEX(SHA256(CONCAT( 
 COALESCE(ID_ROL,'')
,COALESCE(ID_TIPO_DOCUMENTO,'')
,COALESCE(TIPO_DOCUMENTO,'')
,COALESCE(NUMERO_DOCUMENTO,'')
,COALESCE(APELLIDO_PATERNO,'')
,COALESCE(APELLIDO_MATERNO,'')
,COALESCE(NOMBRE,'')
,COALESCE(RAZON_SOCIAL,'')
,COALESCE(FECHA_NACIMIENTO,'1990-01-01')
,COALESCE(FECHA_FALLECIMIENTO,'1990-01-01')
,COALESCE(ID_GENERO,'')
,COALESCE(GENERO,'')
,COALESCE(ID_ESTADO_CIVIL,'')
,COALESCE(ESTADO_CIVIL,'')
,COALESCE(PROFESION,'')
,COALESCE(NACIONALIDAD,'')
,COALESCE(CENTRO_TRABAJO,'')
,COALESCE(ID_CONDICION_FUMADOR,'')
,COALESCE(CONDICION_FUMADOR,'')
,COALESCE(CUSPP,'')
,COALESCE(AFP,'')
,COALESCE(ESTADO_USUARIO_ZONAPRIVADA,'')
,COALESCE(FLAG_USUARIO_ZONAPRIVADA,FALSE)
,COALESCE(PARENTESCO,''))))) as hash_diff
   FROM `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_RENTAS_VC_VIAJES`
)
SELECT LAN.*
      ,COALESCE(DIFF.FECHA_CREACION_REGISTRO,CURRENT_DATE('America/Lima')) AS FECHA_CREACION_REGISTRO
      ,CURRENT_DATE('America/Lima')   AS FECHA_MODIFICACION_REGISTRO
     FROM TMP_LANDING LAN
LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` /*TMP_DIFF*/ DIFF -- Universo de Registros EXISTENTES en la tabla DESTINO
        ON LAN.ID_PERSONA   = DIFF.ID_PERSONA
     WHERE LAN.HASH_DIFF  <> DIFF.HASH_DIFF -- Registros Modificados
        OR DIFF.HASH_DIFF IS NULL  -- Registros Nuevos
;

-- ----------------------------------------------------------------------
-- Paso B10: DELETE DE LOS CONTRATANTES DE ACSELE-VIAJES-RENTA PARTICULAR POR POLIZA
-- ----------------------------------------------------------------------
 DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` A
      WHERE EXISTS (
        SELECT 1 
         FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF` B 
         WHERE A.ID_PERSONA = B.ID_PERSONA
);

-- ----------------------------------------------------------------------
-- Paso B11: INSERT DE LOS CONTRATANTE POR POLIZA
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` 
(
	   ID_PERSONA
    ,ID_ROL
    ,ID_TIPO_DOCUMENTO
    ,TIPO_DOCUMENTO
    ,NUMERO_DOCUMENTO
    ,APELLIDO_PATERNO
    ,APELLIDO_MATERNO
    ,NOMBRE
    ,RAZON_SOCIAL
    ,FECHA_NACIMIENTO
    ,FECHA_FALLECIMIENTO
    ,ID_GENERO
    ,GENERO
    ,ID_ESTADO_CIVIL
    ,ESTADO_CIVIL
    ,PROFESION
    ,NACIONALIDAD
    ,CENTRO_TRABAJO
    ,ID_CONDICION_FUMADOR
    ,CONDICION_FUMADOR
    ,CUSPP
    ,AFP
    ,PARENTESCO
    ,HASH_ID
    ,FECHA_CREACION_REGISTRO
    ,FECHA_MODIFICACION_REGISTRO
    ,HASH_DIFF
    ,ESTADO_USUARIO_ZONAPRIVADA
    ,FLAG_USUARIO_ZONAPRIVADA
)
SELECT 
     TAB.ID_PERSONA
    ,TAB.ID_ROL
    ,TAB.ID_TIPO_DOCUMENTO
    ,TAB.TIPO_DOCUMENTO
    ,TAB.NUMERO_DOCUMENTO
    ,TAB.APELLIDO_PATERNO
    ,TAB.APELLIDO_MATERNO
    ,TAB.NOMBRE
    ,TAB.RAZON_SOCIAL
    ,TAB.FECHA_NACIMIENTO
    ,TAB.FECHA_FALLECIMIENTO
    ,TAB.ID_GENERO
    ,TAB.GENERO
    ,TAB.ID_ESTADO_CIVIL
    ,TAB.ESTADO_CIVIL
    ,TAB.PROFESION
    ,TAB.NACIONALIDAD
    ,TAB.CENTRO_TRABAJO
    ,TAB.ID_CONDICION_FUMADOR
    ,TAB.CONDICION_FUMADOR
    ,TAB.CUSPP
    ,TAB.AFP
    ,TAB.PARENTESCO
    ,TAB.HASH_ID
    ,TAB.FECHA_CREACION_REGISTRO
    ,TAB.FECHA_MODIFICACION_REGISTRO
    ,TAB.HASH_DIFF
    ,TAB.ESTADO_USUARIO_ZONAPRIVADA
    ,TAB.FLAG_USUARIO_ZONAPRIVADA
 FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF` TAB
;

-- ================================================================================================ 
-- ***                                   ACSELE                                                 *** 
-- ================================================================================================ 
-- ----------------------------------------------------------------------
-- Paso A10: PERSONA - NUMERO DOCUMENTOS - Una persona en acsele, puede tener varios documentos.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DOCUMENTOS` 
AS
WITH TMP_DOCUMENT AS 
(
SELECT 
	STATIC
	,[STRUCT(PNAT.DOCUMENTOIDENTIDADINPUT  AS NUMERO_DOCUMENTO   , '01' AS TIPO_DOCUMENTO , PNAT.TIPO_PERSONA,1 AS PRIORIDAD_DOCUMENTO)
  ,STRUCT(PNAT.CARNETEXTRANJERIAINPUT     ,'02', PNAT.TIPO_PERSONA,2 AS PRIORIDAD_DOCUMENTO)
  ,STRUCT(PNAT.RUCNATURALINPUT     , '03', PNAT.TIPO_PERSONA,3 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.PASAPORTEINPUT     , '04', PNAT.TIPO_PERSONA,4 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.CARNETDIPLOMATICOINPUT     , '05', PNAT.TIPO_PERSONA,5 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.CARNETFUERZASARMADASINPUT      ,'06', PNAT.TIPO_PERSONA,6 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.CARNETIDENPOLICIAINPUT     ,'07', PNAT.TIPO_PERSONA,7 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.CARNETMINISTRABINPUT     ,'08', PNAT.TIPO_PERSONA,8 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.PARTIDANACIMIENTOINPUT     ,'09', PNAT.TIPO_PERSONA,9 AS PRIORIDAD_DOCUMENTO)
	,STRUCT(PNAT.LIBRETAMILITARINPUT     ,'10', PNAT.TIPO_PERSONA,10 AS PRIORIDAD_DOCUMENTO)] AS DOCUMENTO_PERSONA
FROM (
	SELECT DISTINCT
	STATIC
	,DOCUMENTOIDENTIDADINPUT
	,RUCNATURALINPUT
	,PASAPORTEINPUT
	,CARNETDIPLOMATICOINPUT
	,CARNETEXTRANJERIAINPUT
	,CARNETFUERZASARMADASINPUT
	,CARNETIDENPOLICIAINPUT
	,CARNETMINISTRABINPUT
	,PARTIDANACIMIENTOINPUT
	,LIBRETAMILITARINPUT
	,'NATURAL' AS TIPO_PERSONA
FROM `iter-data-storage-pv-uat.acsele_data.PERSONANATURAL_raw`
) PNAT
UNION ALL
SELECT 
 	STATIC
	,[STRUCT(PJUR.RUCINPUT  AS NUMERO_DOCUMENTO   , '03' AS TIPO_DOCUMENTO,PJUR.TIPO_PERSONA,1 AS PRIORIDAD_DOCUMENTO)] AS DOCUMENTO_PERSONA
FROM (
	SELECT DISTINCT STATIC, 
	RUCINPUT, 
	'JURIDICA' AS TIPO_PERSONA,
FROM `iter-data-storage-pv-uat.acsele_data.PERSONAJURIDICA_raw`
) PJUR
)
SELECT 
 DOC.STATIC
,ARRAY_AGG(STRUCT<NUMERO_DOCUMENTO STRING,TIPO_DOCUMENTO STRING ,TIPO_PERSONA STRING, PRIORIDAD_DOCUMENTO INT64 ,HASH_ID STRING,TIPO_DOCUMENTO_GLOSA STRING>
    (PER.NUMERO_DOCUMENTO,
    PER.TIPO_DOCUMENTO,
    PER.TIPO_PERSONA, 
    PER.PRIORIDAD_DOCUMENTO,
    upper(to_hex(sha256(CONCAT(EG1.CODIGO_CORPORATIVO,LPAD(PER.NUMERO_DOCUMENTO,15,'0'))))),
	EG1.NOMBRE_GLOBAL
    )) AS DOCUMENTOS
FROM TMP_DOCUMENT DOC
,UNNEST(DOCUMENTO_PERSONA) PER
LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG1 
       ON EG1.VALOR_ORIGEN = PER.TIPO_DOCUMENTO 
      AND EG1.ID_FUENTE    ='01' 
	  AND EG1.CODIGO_TIPO ='TIPODOC'
WHERE PER.NUMERO_DOCUMENTO IS NOT NULL
GROUP BY DOC.STATIC
;

-- ----------------------------------------------------------------------
-- Paso A14: PERSONA - DATOS PERSONALES
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DATOS`
AS
SELECT
	PER.THIRDPARTYID,
	TRIM(UPPER(PER.APELLIDO_PATERNO)) AS APELLIDO_PATERNO,
	TRIM(UPPER(PER.APELLIDO_MATERNO)) AS APELLIDO_MATERNO,
    CASE WHEN TRIM(UPPER(PER.NOMBRE_SEGUNDO)) IS NULL THEN TRIM(UPPER(PER.NOMBRE))
	WHEN TRIM(UPPER(PER.NOMBRE)) IS NULL THEN TRIM(UPPER(PER.NOMBRE_SEGUNDO))
	ELSE TRIM(UPPER(CONCAT(PER.NOMBRE,' ',PER.NOMBRE_SEGUNDO)))
	END AS NOMBRE,
	UPPER(PER.RAZON_SOCIAL) AS RAZON_SOCIAL,
	PER.FECHA_NACIMIENTO,
	UPPER(PER.PROFESION) AS PROFESION,
	PER.PROFESION_CARGO_DESEMPASEG,
	PER.CODIGO_AFP,
	UPPER(PER.NACIONALIDAD ) AS NACIONALIDAD,
	PER.FECHA_FALLECIMIENTO,
	CASE WHEN PER.CONDICION_FUMADOR IS NULL THEN 'SIN ESPECIFICAR'
	ELSE UPPER(TRIM(PER.CONDICION_FUMADOR)) 
	END AS CONDICION_FUMADOR,
	PER.FECHA_MATRIMONIO,
	UPPER(PER.CENTRO_TRABAJO) AS CENTRO_TRABAJO,
	PER.AUTORIZACION_EMAIL,
	PER.AUTORIZACION_SMS,
	PER.AUTORIZACION_COMERDAT,
	PER.AUTORIZACION_CONTRATDATOS,
	PER.AUTORIZACION_ACCDATOS,
	PER.AUTORIZACION_ENVLLAMA,
	PER.CODIGO_COLABORADOR,
	PER.INDPEP,
	PER.COMUNICACION_GENERAL,
	PER.TABLA_FUENTE,
	-----------GENERO
    CASE WHEN EG2.CODIGO_GLOBAL IS NULL THEN '00'
	ELSE EG2.CODIGO_GLOBAL END AS ID_GENERO,
	CASE WHEN EG2.NOMBRE_GLOBAL IS NULL THEN 'SIN ESPECIFICAR'
	ELSE EG2.NOMBRE_GLOBAL END AS GENERO,

	-----------ESTADO CIVIL
    CASE WHEN EG3.CODIGO_GLOBAL IS NULL THEN '00'
	ELSE EG3.CODIGO_GLOBAL END AS ID_ESTADO_CIVIL,
	CASE WHEN EG3.NOMBRE_GLOBAL IS NULL THEN 'SIN ESPECIFICAR'
	ELSE EG3.NOMBRE_GLOBAL END AS ESTADO_CIVIL,

  	-----------CONDICION FUMADOR
    CASE WHEN EG4.CODIGO_GLOBAL IS NULL THEN '00'
	ELSE EG4.CODIGO_GLOBAL END AS ID_CONDICION_FUMADOR,
  --  EG4.NOMBRE_GLOBAL AS CONDICION_FUMADOR   
FROM (
	SELECT DISTINCT
	PNAT.STATIC AS THIRDPARTYID
	,PNAT.PK
	,PNAT.APELLIDOINPUT APELLIDO_PATERNO
	,PNAT.APELLIDOMATERNOINPUT APELLIDO_MATERNO
	,PNAT.NOMBREINPUT NOMBRE 
	,PNAT.SEGUNDONOMBREINPUT NOMBRE_SEGUNDO  
	,CAST(NULL AS STRING) RAZON_SOCIAL
	,CASE
		WHEN EXTRACT(YEAR FROM SAFE_CAST(PNAT.FECHANACIMIENTOINPUT AS DATE)) <= 1900 OR IFNULL(PNAT.FECHANACIMIENTOINPUT, '') = '' THEN CAST(NULL AS DATE)
		ELSE SAFE_CAST(PNAT.FECHANACIMIENTOINPUT AS DATE)
	END FECHA_NACIMIENTO
	,PNAT.SEXOINPUT GENERO 
	,PNAT.ESTADOCIVILINPUT ESTADO_CIVIL 
	,PNAT.PROFESIONINPUT PROFESION  
	,UPPER(PNAT.CARGODESEMPASEGINPUT) PROFESION_CARGO_DESEMPASEG
	,PNAT.CODIGOAFPINPUT CODIGO_AFP 
	,IF(CHAR_LENGTH(IFNULL(NACIONALIDADINPUT, '')) = 0, 'NO IDENTIFICADA', UPPER(PNAT.NACIONALIDADINPUT)) NACIONALIDAD
	,CASE
		WHEN EXTRACT(YEAR FROM SAFE_CAST(PNAT.FECHAFALLECIMIENTOINPUT AS DATE)) <= 1900 OR IFNULL(PNAT.FECHAFALLECIMIENTOINPUT, '') = '' THEN CAST(NULL AS DATE)
		ELSE SAFE_CAST(PNAT.FECHAFALLECIMIENTOINPUT AS DATE)
	END FECHA_FALLECIMIENTO
	,PNAT.FUMADORCONDICIONINPUT CONDICION_FUMADOR
	,PNAT.FECHAMATRIMONIOINPUT FECHA_MATRIMONIO
	,UPPER(PNAT.CENTROTRABASEGINPUT) CENTRO_TRABAJO
	,PNAT.AUTORIZACIONEMAILINPUT AUTORIZACION_EMAIL
	,PNAT.AUTORIZACIONSMSINPUT AUTORIZACION_SMS
	,PNAT.AUTORIZACIONCOMERDATINPUT AUTORIZACION_COMERDAT
	,PNAT.AUTORIZACIONTRATDATOSINPUT AUTORIZACION_CONTRATDATOS
	,PNAT.AUTORIZACIONACCDATOSINPUT AUTORIZACION_ACCDATOS
	,PNAT.AUTORIZACIONENVLLAMAINPUT AUTORIZACION_ENVLLAMA
	,PNAT.CODIGOCOLABORADORINPUT CODIGO_COLABORADOR
	,PNAT.INDPEPINPUT INDPEP
	,PNAT.COMUNICACIONGENERALINPUT COMUNICACION_GENERAL
	,'PERSONANATURAL' AS TABLA_FUENTE
FROM `iter-data-storage-pv-uat.acsele_data.PERSONANATURAL_raw` PNAT 
UNION ALL
SELECT DISTINCT 
	PJUR.STATIC AS THIRDPARTYID
	,PJUR.PK
	,CAST(NULL AS STRING) APELLIDO_PATERNO
	,CAST(NULL AS STRING) APELLIDO_MATERNO
	,CAST(NULL AS STRING) NOMBRE
	,CAST(NULL AS STRING) NOMBRE_SEGUNDO
	,UPPER(PJUR.NOMBRECOMPEMPINPUT) RAZON_SOCIAL
	,CASE
		WHEN EXTRACT(YEAR FROM SAFE_CAST(PJUR.FECHACONSTITUCIONINPUT AS DATE)) <= 1900 OR IFNULL(PJUR.FECHACONSTITUCIONINPUT, '') = '' THEN CAST(NULL AS DATE)
		ELSE SAFE_CAST(PJUR.FECHACONSTITUCIONINPUT AS DATE)
	END FECHA_NACIMIENTO
	,CAST(NULL AS STRING) GENERO
	,CAST(NULL AS STRING) ESTADO_CIVIL
	,CAST(NULL AS STRING) PROFESION
	,CAST(NULL AS STRING) PROFESION_CARGO_DESEMPASEG
	,CAST(NULL AS STRING) CODIGO_AFP
	,'NO IDENTIFICADA' NACIONALIDAD
	,CAST(NULL AS DATE) FECHA_FALLECIMIENTO
	,CAST(NULL AS STRING) CONDICION_FUMADOR
	,CAST(NULL AS STRING) FECHA_MATRIMONIO
	,CAST(NULL AS STRING) CENTRO_TRABAJO
	,CAST(NULL AS STRING) AUTORIZACION_EMAIL
	,CAST(NULL AS STRING) AUTORIZACION_SMS
	,CAST(NULL AS STRING) AUTORIZACION_COMERDAT
	,CAST(NULL AS STRING) AUTORIZACION_CONTRATDATOS
	,CAST(NULL AS STRING) AUTORIZACION_ACCDATOS
	,CAST(NULL AS STRING) AUTORIZACION_ENVLLAMA
	,CAST(NULL AS STRING) CODIGO_COLABORADOR
	,CAST(NULL AS STRING) INDPEP
	,CAST(NULL AS STRING) COMUNICACION_GENERAL
	,'PERSONAJURIDICA' AS TABLA_FUENTE
FROM `iter-data-storage-pv-uat.acsele_data.PERSONAJURIDICA_raw` PJUR
) PER
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG2 
         ON EG2.NOMBRE_GLOBAL/*VALOR_ORIGEN*/  = UPPER(TRIM(PER.GENERO)) --> NO EXISTE EL ID, SE DEBE HOMOLOGAR.
	    AND EG2.ID_FUENTE     = '01'
		AND EG2.CODIGO_TIPO   = 'GENERO'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG3 
         ON EG3.NOMBRE_GLOBAL/*VALOR_ORIGEN*/  =UPPER(TRIM( PER.ESTADO_CIVIL))
	    AND EG3.ID_FUENTE       ='01' 
		AND EG3.CODIGO_TIPO     = 'ESTADOCIVIL'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG4 
         ON EG4.NOMBRE_GLOBAL/*VALOR_ORIGEN*/  =UPPER(TRIM( PER.CONDICION_FUMADOR))
	    AND EG4.ID_FUENTE     = '01' 
		AND EG4.CODIGO_TIPO   = 'FUMADOR'
;

-- ----------------------------------------------------------------------
-- Paso A15: DATOS PERSONALES Y DOCUMENTO
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_ACSELE_UNI`
AS
SELECT
  DOC.STATIC
, DOC.DOCUMENTOS[ORDINAL(1)].NUMERO_DOCUMENTO
, DOC.DOCUMENTOS[ORDINAL(1)].TIPO_DOCUMENTO AS ID_TIPO_DOCUMENTO
, DOC.DOCUMENTOS[ORDINAL(1)].HASH_ID
, DOC.DOCUMENTOS[ORDINAL(1)].TIPO_DOCUMENTO_GLOSA AS TIPO_DOCUMENTO
, DOC.DOCUMENTOS[ORDINAL(1)].TIPO_PERSONA AS TIPO_PERSONA
, DOC.DOCUMENTOS
, PER.*
FROM `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DOCUMENTOS` DOC
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DATOS` PER 
        ON PER.THIRDPARTYID=DOC.STATIC
;

-- ----------------------------------------------------------------------
-- Paso A16: CARGA - TABLA FINAL
-- ----------------------------------------------------------------------

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_ACSELE`
AS
SELECT 
 TAB.*
,ZOP.ESTADO_USUARIO_ZONAPRIVADA
,IFNULL(ZOP.FLAG_USUARIO_ZONAPRIVADA,FALSE) AS FLAG_USUARIO_ZONAPRIVADA
FROM (
SELECT DISTINCT
'01' AS ID_FUENTE
,POL.ID_ROL
, CONCAT('01', '-', ASE.ID_TIPO_DOCUMENTO, '-', ASE.NUMERO_DOCUMENTO)  AS ID_PERSONA
,ASE.ID_TIPO_DOCUMENTO
,ASE.TIPO_DOCUMENTO
,ASE.NUMERO_DOCUMENTO
,ASE.APELLIDO_PATERNO
,ASE.APELLIDO_MATERNO
,ASE.NOMBRE
,ASE.RAZON_SOCIAL
,ASE.FECHA_NACIMIENTO
,ASE.FECHA_FALLECIMIENTO
,ASE.ID_GENERO
,ASE.GENERO
,ASE.ID_ESTADO_CIVIL
,ASE.ESTADO_CIVIL
,ASE.PROFESION
,ASE.NACIONALIDAD
,ASE.CENTRO_TRABAJO
,ASE.ID_CONDICION_FUMADOR
,ASE.CONDICION_FUMADOR
,'' AS CUSPP
,ASE.CODIGO_AFP AS AFP
,'TITULAR' AS PARENTESCO
,'' AS ID_PADRE
--,POL.FECHA_CREACION
--,POL.FECHA_MODIFICACION
,ASE.TIPO_PERSONA
,ASE.HASH_ID
FROM (
    SELECT  
		NUMERO_POLIZA
		,CAST (ID_PRODUCTO AS STRING) AS ID_PRODUCTO
		,THIRDPARTYID
		,'01' AS ID_ROL
		--,CURRENT_TIMESTAMP AS FECHA_CREACION
		--,CURRENT_TIMESTAMP AS FECHA_MODIFICACION
	  FROM `iter-data-storage-pv-uat.acsele_data.TD_POLIZA_CONTRATANTE_raw`
	  WHERE STATUS_OPERATION='Applied operation'
	  QUALIFY (RANK()OVER(PARTITION BY NUMERO_POLIZA ORDER BY OPERATION_DATETIME DESC , NUMERO_OPERACION DESC))=1
)POL 
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_ACSELE_UNI` ASE
	      ON CAST( POL.THIRDPARTYID AS INT64)= CAST(ASE.STATIC AS INT64)
INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_AGRUPACION_PRODUCTO` AP 
	      ON CAST(AP.ID_PRODUCTO AS INT64) = CAST(POL.ID_PRODUCTO AS INT64) 
	     AND AP.ID_FUENTE = '01'
UNION ALL 
-------------------------------------------------------------------------------------------
-- GARANTIA EXTENDIDA 
-------------------------------------------------------------------------------------------
SELECT 
	'01' AS ID_FUENTE
    ,POL.ID_ROL
    ,CONCAT('01', '-', CON.ID_TIPO_DOCUMENTO, '-', CON.NUMERO_DOCUMENTO)  AS ID_PERSONA
    ,CON.ID_TIPO_DOCUMENTO
    ,CON.TIPO_DOCUMENTO
    ,CON.NUMERO_DOCUMENTO
    ,CON.APELLIDO_PATERNO
    ,CON.APELLIDO_MATERNO
    ,CON.NOMBRE
    ,CON.RAZON_SOCIAL
    ,SAFE_CAST(CON.FECHA_NACIMIENTO AS DATE) AS FECHA_NACIMIENTO
    ,SAFE_CAST(CON.FECHA_FALLECIMIENTO AS DATE) AS FECHA_FALLECIMIENTO
    ,CON.ID_GENERO
    ,CON.GENERO
    ,CON.ID_ESTADO_CIVIL
    ,CON.ESTADO_CIVIL
    ,CON.PROFESION
    ,CON.NACIONALIDAD
    ,CON.CENTRO_TRABAJO
    ,CON.ID_CONDICION_FUMADOR
    ,CON.CONDICION_FUMADOR
    ,'' AS CUSPP
    ,CON.CODIGO_AFP AS AFP
    ,'TITULAR' AS PARENTESCO
    ,'' AS ID_PADRE
--    ,POL.FECHA_CREACION
--    ,POL.FECHA_MODIFICACION
	,CON.TIPO_PERSONA
  ,CON.HASH_ID
FROM (
		SELECT  
			P.NUMERO_POLIZA
			,CAST (P.ID_PRODUCTO AS STRING) AS ID_PRODUCTO
			,IFNULL(TRIM(P.NUMERODOCUMENTOGEINPUT),' ') AS NUMERO_DOCUMENTO
			,REPLACE(REPLACE(UPPER(P.TIPODOCUMENTOGEINPUT),'DOCUMENTOIDENTIDAD','01'),'CARNETDIPLOMATICO','05') AS TIPO_DOCUMENTO
			,'01' AS ID_ROL
--			,CURRENT_TIMESTAMP AS FECHA_CREACION
--			,CURRENT_TIMESTAMP AS FECHA_MODIFICACION
		FROM `iter-data-storage-pv-uat.acsele_data.TD_POLIZA_CONTRATANTE_GE_raw`  P
		WHERE P.STATUS_OPERATION='Applied operation'
	  	QUALIFY (RANK()OVER(PARTITION BY P.NUMERO_POLIZA ORDER BY P.OPERATION_DATETIME DESC , P.NUMERO_OPERACION DESC))=1 
	)POL 
INNER JOIN  `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_ACSELE_UNI` CON
--POLGARANTIA EXTENDIDA PRESENTA UN TIPO_DOCUMENTO DIFERENTE QUE EL DE PERSONA_NATURAL
        ON  POL.NUMERO_DOCUMENTO= CON.NUMERO_DOCUMENTO
		AND POL.TIPO_DOCUMENTO=CON.ID_TIPO_DOCUMENTO
INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_AGRUPACION_PRODUCTO` AP 
        ON CAST(AP.ID_PRODUCTO AS INT64) = CAST(POL.ID_PRODUCTO AS INT64) 
AND AP.ID_FUENTE  = '01' 
AND AP.ID_PRODUCTO='39480'
) TAB
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_CON_USUARIO_ZONA_PRIVADA` ZOP
         ON ZOP.HASH_ID = TAB.HASH_ID
WHERE TAB.NUMERO_DOCUMENTO IS NOT NULL
QUALIFY (ROW_NUMBER()OVER(
					PARTITION BY TAB.ID_PERSONA ORDER BY (	
          CASE WHEN TAB.TIPO_PERSONA='NATURAL' THEN 0
					WHEN TAB.TIPO_PERSONA='JURIDICA' THEN 1
					ELSE 2 END) ASC	
					)) = 1;

-- ------------------------------------------------------------------------------------------------
-- Paso 1: Diferencial
-- ------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF`
AS
-- Universo de Registros NUEVOS o que se Modificados
WITH TMP_LANDING AS 
(
SELECT 
 ID_PERSONA
,ID_ROL
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,RAZON_SOCIAL
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,CENTRO_TRABAJO
,ID_CONDICION_FUMADOR
,CONDICION_FUMADOR
,CUSPP
,AFP
,PARENTESCO
,HASH_ID
,ESTADO_USUARIO_ZONAPRIVADA
,FLAG_USUARIO_ZONAPRIVADA
,UPPER(TO_HEX(SHA256(CONCAT( 
 COALESCE(ID_ROL,'')
,COALESCE(ID_TIPO_DOCUMENTO,'')
,COALESCE(TIPO_DOCUMENTO,'')
,COALESCE(NUMERO_DOCUMENTO,'')
,COALESCE(APELLIDO_PATERNO,'')
,COALESCE(APELLIDO_MATERNO,'')
,COALESCE(NOMBRE,'')
,COALESCE(RAZON_SOCIAL,'')
,COALESCE(FECHA_NACIMIENTO,'1990-01-01')
,COALESCE(FECHA_FALLECIMIENTO,'1990-01-01')
,COALESCE(ID_GENERO,'')
,COALESCE(GENERO,'')
,COALESCE(ID_ESTADO_CIVIL,'')
,COALESCE(ESTADO_CIVIL,'')
,COALESCE(PROFESION,'')
,COALESCE(NACIONALIDAD,'')
,COALESCE(CENTRO_TRABAJO,'')
,COALESCE(ID_CONDICION_FUMADOR,'')
,COALESCE(CONDICION_FUMADOR,'')
,COALESCE(CUSPP,'')
,COALESCE(AFP,'')
,COALESCE(ESTADO_USUARIO_ZONAPRIVADA,'')
,COALESCE(FLAG_USUARIO_ZONAPRIVADA,FALSE)
,COALESCE(PARENTESCO,''))))) AS HASH_DIFF
   FROM `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_ACSELE`
)
SELECT LAN.*
      ,COALESCE(DIFF.FECHA_CREACION_REGISTRO,CURRENT_DATE('America/Lima')) AS FECHA_CREACION_REGISTRO
      ,CURRENT_DATE('America/Lima')   AS FECHA_MODIFICACION_REGISTRO
     FROM TMP_LANDING LAN
LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` /*TMP_DIFF*/ DIFF -- Universo de Registros EXISTENTES en la tabla DESTINO
        ON LAN.ID_PERSONA   = DIFF.ID_PERSONA
     WHERE LAN.HASH_DIFF  <> DIFF.HASH_DIFF -- Registros Modificados
        OR DIFF.HASH_DIFF IS NULL  -- Registros Nuevos
;

-- ----------------------------------------------------------------------
-- Paso A17: DELETE DE LOS CONTRATANTES DE ACSELE POR POLIZA
-- ----------------------------------------------------------------------
 DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` A
      WHERE EXISTS (
        SELECT 1 
         FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF` B 
         WHERE A.ID_PERSONA = B.ID_PERSONA
);

-- ----------------------------------------------------------------------
-- Paso A18: INSERT DE LOS CONTRATANTE POR POLIZA
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` 
(
	ID_PERSONA
    ,ID_ROL
    ,ID_TIPO_DOCUMENTO
    ,TIPO_DOCUMENTO
    ,NUMERO_DOCUMENTO
    ,APELLIDO_PATERNO
    ,APELLIDO_MATERNO
    ,NOMBRE
    ,RAZON_SOCIAL
    ,FECHA_NACIMIENTO
    ,FECHA_FALLECIMIENTO
    ,ID_GENERO
    ,GENERO
    ,ID_ESTADO_CIVIL
    ,ESTADO_CIVIL
    ,PROFESION
    ,NACIONALIDAD
    ,CENTRO_TRABAJO
    ,ID_CONDICION_FUMADOR
    ,CONDICION_FUMADOR
    ,CUSPP
    ,AFP
    ,PARENTESCO
    ,HASH_ID
    ,FECHA_CREACION_REGISTRO
    ,FECHA_MODIFICACION_REGISTRO
    ,HASH_DIFF
    ,ESTADO_USUARIO_ZONAPRIVADA
    ,FLAG_USUARIO_ZONAPRIVADA
)
SELECT 
     TAB.ID_PERSONA
    ,TAB.ID_ROL
    ,TAB.ID_TIPO_DOCUMENTO
    ,TAB.TIPO_DOCUMENTO
    ,TAB.NUMERO_DOCUMENTO
    ,TAB.APELLIDO_PATERNO
    ,TAB.APELLIDO_MATERNO
    ,TAB.NOMBRE
    ,TAB.RAZON_SOCIAL
    ,TAB.FECHA_NACIMIENTO
    ,TAB.FECHA_FALLECIMIENTO
    ,TAB.ID_GENERO
    ,TAB.GENERO
    ,TAB.ID_ESTADO_CIVIL
    ,TAB.ESTADO_CIVIL
    ,TAB.PROFESION
    ,TAB.NACIONALIDAD
    ,TAB.CENTRO_TRABAJO
    ,TAB.ID_CONDICION_FUMADOR
    ,TAB.CONDICION_FUMADOR
    ,TAB.CUSPP
    ,TAB.AFP
    ,TAB.PARENTESCO
    ,TAB.HASH_ID
    ,TAB.FECHA_CREACION_REGISTRO
    ,TAB.FECHA_MODIFICACION_REGISTRO
    ,TAB.HASH_DIFF
    ,TAB.ESTADO_USUARIO_ZONAPRIVADA
    ,TAB.FLAG_USUARIO_ZONAPRIVADA
 FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF` TAB
;

-- ================================================================================================ 
-- ***                                   RENTA VITALICIA                                        *** 
-- ================================================================================================ 
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_RENTA_VITALICIA_UNIVERSO`
AS
SELECT DISTINCT 
  '02' ID_FUENTE ,
  EG1.CODIGO_GLOBAL           AS ID_TIPO_DOCUMENTO,
  EG1.NOMBRE_GLOBAL           AS TIPO_DOCUMENTO,
  PER.num_identificacion_pdt  AS NUMERO_DOCUMENTO,
  INITCAP(PER.ape_paterno)    AS APELLIDO_PATERNO,
  INITCAP(PER.ape_materno)    AS APELLIDO_MATERNO,
  INITCAP(PER.nom_persona)    AS NOMBRE,
  CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_nacimiento AS DATE)) <= 1900 OR PER.fec_nacimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE CAST(CAST(PER.fec_nacimiento AS DATETIME) AS DATE)
  END AS FECHA_NACIMIENTO,
  CASE
    WHEN EXTRACT(YEAR FROM SAFE_CAST(PER.fec_fallecimiento AS DATE)) <= 1900 OR PER.fec_fallecimiento IS NULL THEN CAST(NULL AS DATE)
    ELSE CAST(CAST(PER.fec_nacimiento AS DATETIME) AS DATE)
  END                                          AS FECHA_FALLECIMIENTO,
  IFNULL(EG2.CODIGO_GLOBAL, '00')              AS ID_GENERO,
  IFNULL(EG2.NOMBRE_GLOBAL, 'SIN ESPECIFICAR') AS GENERO
 ,IFNULL(ECF.CODIGO_GLOBAL, '00')              AS ID_ESTADO_CIVIL
 ,IFNULL(ECF.NOMBRE_GLOBAL, 'SIN ESPECIFICAR') AS ESTADO_CIVIL
 ,IFNULL(UPPER(OC.gls_ocupacion), 'SIN ESPECIFICAR')    AS  PROFESION,
  IFNULL(UPPER(NC.gls_nacionalidad), 'SIN ESPECIFICAR') AS NACIONALIDAD,
  IFNULL(AFP.gls_larga, 'SIN ESPECIFICAR') AS AFP,
  CAST(NULL AS STRING)  AS CENTRO_TRABAJO,
  '00'                  AS ID_CONDICION_FUMADOR,
  'SIN ESPECIFICAR'     AS CONDICION_FUMADOR
 ,NULLIF(TRIM(POL.num_cuispp),'')        AS CUSPP
,'TITULAR' AS PARENTESCO
,CONCAT('01', '-', EG1.CODIGO_GLOBAL, '-', PER.num_identificacion_pdt) AS ID_PERSONA
 ,upper(to_hex(sha256(CONCAT(EG1.CODIGO_CORPORATIVO,LPAD(PER.num_identificacion_pdt,15,'0'))))) HASH_ID
 ,'01' AS ID_ROL
--
,ZOP.ESTADO_USUARIO_ZONAPRIVADA
,COALESCE(ZOP.FLAG_USUARIO_ZONAPRIVADA,FALSE) AS FLAG_USUARIO_ZONAPRIVADA
       FROM `iter-data-storage-pv-uat.rviadmin_data.personas_raw` PER
 INNER JOIN `iter-data-storage-pv-uat.rviadmin_data.poliza_raw` POL 
         ON POL.cod_tipo_id_causante = PER.cod_tipo_identificacion 
        AND POL.num_id_causante = PER.num_identificacion
 INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG1 
         ON PER.cod_tipo_identificacion = EG1.VALOR_ORIGEN
        AND EG1.ID_FUENTE   = '02'
        AND EG1.CODIGO_TIPO = 'TIPODOC'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` EG2 
         ON PER.cod_sexo    = EG2.VALOR_ORIGEN 
        AND EG2.ID_FUENTE   = '02' 
        AND EG2.CODIGO_TIPO = 'GENERO'
  LEFT JOIN `iter-data-storage-pv-uat.config_data.CNF_EQUIVALENCIA_GLOBAL` ECF 
         ON ECF.VALOR_ORIGEN     = PER.cod_estado_civil
        AND ECF.ID_FUENTE        = '02'
        AND ECF.CODIGO_TIPO      = 'ESTADOCIVIL'
 INNER JOIN `iter-data-storage-pv-uat.config_data.CNF_AGRUPACION_PRODUCTO` AP 
         ON POL.cod_cartera = AP.ID_PRODUCTO 
        AND AP.ID_FUENTE    = '02'
  LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.t_ocupac_raw` OC 
         ON OC.cod_ocupacion = PER.cod_ocupacion
  LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.T_NACION_raw` NC 
         ON NC.cod_nacionalidad = PER.cod_nacionalidad
  LEFT JOIN `iter-data-storage-pv-uat.rviadmin_data.tab_codigo_raw` AFP 
         ON AFP.cod_codigo = PER.cod_afp 
        AND AFP.nom_tabla = 'AFP'
  LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_CON_USUARIO_ZONA_PRIVADA` ZOP
         ON ZOP.HASH_ID = UPPER(TO_HEX(SHA256(CONCAT(EG1.CODIGO_CORPORATIVO,LPAD(PER.NUM_IDENTIFICACION_PDT,15,'0')))))
      WHERE POL.cod_cartera in ('RVI','PRV', 'SCTR') 
QUALIFY(ROW_NUMBER()OVER(PARTITION BY upper(to_hex(sha256(CONCAT(EG1.CODIGO_CORPORATIVO,LPAD(PER.NUM_IDENTIFICACION_PDT,15,'0'))))) ORDER BY (CASE WHEN POL.cod_cartera='RVI' THEN 0 ELSE 1 END) ASC )) =1
;

-- ------------------------------------------------------------------------------------------------
-- Paso 1: Diferencial
-- ------------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF`
AS
-- Universo de Registros NUEVOS o que se Modificados
WITH TMP_LANDING AS 
(
SELECT 
 ID_PERSONA
,ID_ROL
,ID_TIPO_DOCUMENTO
,TIPO_DOCUMENTO
,NUMERO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,FECHA_NACIMIENTO
,FECHA_FALLECIMIENTO
,ID_GENERO
,GENERO
,ID_ESTADO_CIVIL
,ESTADO_CIVIL
,PROFESION
,NACIONALIDAD
,CENTRO_TRABAJO
,ID_CONDICION_FUMADOR
,CONDICION_FUMADOR
,CUSPP
,AFP
,PARENTESCO
,HASH_ID
,ESTADO_USUARIO_ZONAPRIVADA
,FLAG_USUARIO_ZONAPRIVADA
,UPPER(TO_HEX(SHA256(CONCAT( 
 COALESCE(ID_ROL,'')
,COALESCE(ID_TIPO_DOCUMENTO,'')
,COALESCE(TIPO_DOCUMENTO,'')
,COALESCE(NUMERO_DOCUMENTO,'')
,COALESCE(APELLIDO_PATERNO,'')
,COALESCE(APELLIDO_MATERNO,'')
,COALESCE(NOMBRE,'')
,COALESCE(FECHA_NACIMIENTO,'1990-01-01')
,COALESCE(FECHA_FALLECIMIENTO,'1990-01-01')
,COALESCE(ID_GENERO,'')
,COALESCE(GENERO,'')
,COALESCE(ID_ESTADO_CIVIL,'')
,COALESCE(ESTADO_CIVIL,'')
,COALESCE(PROFESION,'')
,COALESCE(NACIONALIDAD,'')
,COALESCE(CENTRO_TRABAJO,'')
,COALESCE(ID_CONDICION_FUMADOR,'')
,COALESCE(CONDICION_FUMADOR,'')
,COALESCE(CUSPP,'')
,COALESCE(AFP,'')
,COALESCE(ESTADO_USUARIO_ZONAPRIVADA,'')
,COALESCE(FLAG_USUARIO_ZONAPRIVADA,FALSE)
,COALESCE(PARENTESCO,''))))) AS HASH_DIFF
   FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_RENTA_VITALICIA_UNIVERSO`
)
SELECT LAN.*
      ,COALESCE(DIFF.FECHA_CREACION_REGISTRO,CURRENT_DATE('America/Lima')) AS FECHA_CREACION_REGISTRO
      ,CURRENT_DATE('America/Lima')   AS FECHA_MODIFICACION_REGISTRO
     FROM TMP_LANDING LAN
LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` /*TMP_DIFF*/ DIFF -- Universo de Registros EXISTENTES en la tabla DESTINO
        ON LAN.ID_PERSONA   = DIFF.ID_PERSONA
     WHERE LAN.HASH_DIFF  <> DIFF.HASH_DIFF -- Registros Modificados
        OR DIFF.HASH_DIFF IS NULL  -- Registros Nuevos
;


-- ----------------------------------------------------------------------
-- Paso A17: DELETE DE LOS CONTRATANTES DE ACSELE POR POLIZA
-- ----------------------------------------------------------------------
 DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` A
      WHERE EXISTS (
        SELECT 1 
         FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF` B 
         WHERE A.ID_PERSONA = B.ID_PERSONA
);

-- ----------------------------------------------------------------------
-- Paso A18: INSERT DE LOS CONTRATANTE POR POLIZA
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` 
(
	   ID_PERSONA
    ,ID_ROL
    ,ID_TIPO_DOCUMENTO
    ,TIPO_DOCUMENTO
    ,NUMERO_DOCUMENTO
    ,APELLIDO_PATERNO
    ,APELLIDO_MATERNO
    ,NOMBRE
    ,FECHA_NACIMIENTO
    ,FECHA_FALLECIMIENTO
    ,ID_GENERO
    ,GENERO
    ,ID_ESTADO_CIVIL
    ,ESTADO_CIVIL
    ,PROFESION
    ,NACIONALIDAD
    ,CENTRO_TRABAJO
    ,ID_CONDICION_FUMADOR
    ,CONDICION_FUMADOR
    ,CUSPP
    ,AFP
    ,PARENTESCO
    ,HASH_ID
    ,FECHA_CREACION_REGISTRO
    ,FECHA_MODIFICACION_REGISTRO
    ,HASH_DIFF
    ,ESTADO_USUARIO_ZONAPRIVADA
    ,FLAG_USUARIO_ZONAPRIVADA
)
SELECT 
     TAB.ID_PERSONA
    ,TAB.ID_ROL
    ,TAB.ID_TIPO_DOCUMENTO
    ,TAB.TIPO_DOCUMENTO
    ,TAB.NUMERO_DOCUMENTO
    ,TAB.APELLIDO_PATERNO
    ,TAB.APELLIDO_MATERNO
    ,TAB.NOMBRE
    ,TAB.FECHA_NACIMIENTO
    ,TAB.FECHA_FALLECIMIENTO
    ,TAB.ID_GENERO
    ,TAB.GENERO
    ,TAB.ID_ESTADO_CIVIL
    ,TAB.ESTADO_CIVIL
    ,TAB.PROFESION
    ,TAB.NACIONALIDAD
    ,TAB.CENTRO_TRABAJO
    ,TAB.ID_CONDICION_FUMADOR
    ,TAB.CONDICION_FUMADOR
    ,TAB.CUSPP
    ,TAB.AFP
    ,TAB.PARENTESCO
    ,HASH_ID
    ,FECHA_CREACION_REGISTRO
    ,FECHA_MODIFICACION_REGISTRO
    ,HASH_DIFF
    ,TAB.ESTADO_USUARIO_ZONAPRIVADA
    ,TAB.FLAG_USUARIO_ZONAPRIVADA
 FROM `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF`  TAB
;

-- ----------------------------------------------------------------------
-- Eliminar temporales
-- ----------------------------------------------------------------------
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_RENTAS_VC_VIAJES`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DOCUMENTOS` ;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_DATOS` ;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERSONA_CONTRATANTE_ACSELE_UNI` ; 
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_POLIZA_CONTRATANTE_ACSELE`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_RENTA_VITALICIA_UNIVERSO` ;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_CONTRATANTE_UNIVERSO_DIFF`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_CON_USUARIO_ZONA_PRIVADA`;
DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_RENTA_CONTRANTE_CUSPP`;

SELECT 'OK' AS EJECUCION;

END;