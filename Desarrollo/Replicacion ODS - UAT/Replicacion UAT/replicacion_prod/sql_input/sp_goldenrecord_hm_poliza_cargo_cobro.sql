CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_goldenrecord_hm_poliza_cargo_cobro(par_periodo INT64)
OPTIONS(
  strict_mode=true)
BEGIN 
-- *********************************************************************
-- * Proyecto       : GOLDEN RECORD
-- * Fecha          : 03/11/2021
-- * Autor          : Ramirez Hurtado, Tito Jaime
-- * Tabla Destinos : - 
-- *                : - 
-- * Tablas Fuentes : - 
-- * Descripción    :  
-- *********************************************************************
-- *                       MODIFICACIONES POSTERIORES                  *
-- *===================================================================*
-- *===================================================================*
-- *   Fecha   | Persona |           Modificación Realizada            *
-- *           |         |                                            
-- *********************************************************************
DECLARE var_periodo_recaudacion INT64;
--DECLARE par_periodo INT64 DEFAULT 202202;

-- ----------------------------------------------------------------------
-- Paso A10: Crear la tabla final con el rango de fechas del periodo.
--           EJECUCION DIARIA: Considera el rango de cobranza con el dia D-1
--           REPROCESO: En caso de reproceso, toma el valor de periodo ingresado como parametro
-- ----------------------------------------------------------------------
IF par_periodo IS NULL THEN

CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB` 
AS
(
SELECT  PERIODO AS PERIODO_RECAUDACION
       ,PERIODO_RECAUDACION_DIA_INICIO
       ,PERIODO_RECAUDACION_DIA_FIN
       ,PERIODO_FECHA_INICIO
       --,PERIODO_FECHA_FIN
       ,PERIODO_RECAUDACION_DIA_FIN AS PERIODO_FECHA_FIN
       ,PERIODO_FECHA_COBERTURA_INICIO
       ,PERIODO_FECHA_INICIO AS PERIODO_DIA_INICIO_4M
       ,CONCAT(CAST(PERIODO_ANIO AS STRING),' ',PERIODO_MES_NOMBRE_ABREV) AS PERIODO_DESCRIPCION_ABREVIADO
  FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION`
WHERE CURRENT_DATE BETWEEN PERIODO_RECAUDACION_DIA_INICIO  AND PERIODO_RECAUDACION_DIA_FIN 
)
;
-- Variable periodo recaudacion
SET var_periodo_recaudacion = ( SELECT MAX(CAST(PERIODO_RECAUDACION AS INT64)) FROM `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB` ) ;

ELSE 
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB`
AS
(
SELECT  PERIODO AS PERIODO_RECAUDACION
       ,PERIODO_RECAUDACION_DIA_INICIO
       ,PERIODO_RECAUDACION_DIA_FIN
       ,PERIODO_FECHA_INICIO
       --,PERIODO_FECHA_FIN
       ,PERIODO_RECAUDACION_DIA_FIN AS PERIODO_FECHA_FIN
       ,PERIODO_FECHA_COBERTURA_INICIO
       ,PERIODO_FECHA_INICIO AS PERIODO_DIA_INICIO_4M
       ,CONCAT(CAST(PERIODO_ANIO AS STRING),' ',PERIODO_MES_NOMBRE_ABREV) AS PERIODO_DESCRIPCION_ABREVIADO
  FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION`
  WHERE CAST(PERIODO AS INT64) = par_periodo 
)
;
-- Variable periodo recaudacion
SET var_periodo_recaudacion = ( SELECT MAX(CAST(PERIODO_RECAUDACION AS INT64)) FROM `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB` ) ;

END IF
;

-- ----------------------------------------------------------------------
-- Paso A10: UNIVERSO DE POLIZAS A CONSIDERAR EN EL PROCESO DE COBRANZA
--           Polizas con estado VIGENTE o que se cancelaron/caducaron/... en el rango del periodo de cobranza.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_POLIZA_PERIODO`
AS
WITH TMP_SEGMENTACION_MOROSIDAD AS
(
  SELECT 
   NUMERO_POLIZA
  ,NOMBRE_PRODUCTO
  ,CAST(PUNTAJE AS STRING) AS PUNTAJE
  ,SEGMENTO 
  ,SUB_SEGMENTO
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_SEGMENTACION_MOROSIDAD`
  WHERE SAFE_CAST(NUMERO_POLIZA AS INT64) IS NOT NULL
  QUALIFY(ROW_NUMBER()OVER(PARTITION BY SAFE_CAST(NUMERO_POLIZA AS INT64) ORDER BY PUNTAJE ASC ))=1
),
TMP_PAGADO_HASTA_VIDA AS 
(
SELECT
 NUMERO_POLIZA
,MAX(FECHA_PAGADO_HASTA) AS FECHA_PAGADO_HASTA
FROM 
(
    SELECT DISTINCT NUMERO_POLIZA, FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_PAGO_VIDACASH` 
    UNION ALL 
    SELECT NUMERO_POLIZA,FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.acsele_data.PAGADO_HASTA_raw` 
    UNION ALL 
    SELECT NUMERO_POLIZA,MAX(CARGO_FECHA_COBERTURA_FIN) AS FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` 
     WHERE NOMBRE_PRODUCTO IN ("VIDACASH","VIDACASHSTOCK")
       AND ID_ABONO!="0"
     GROUP BY NUMERO_POLIZA
) TAB
GROUP BY NUMERO_POLIZA
)
,TMP_DATOSPER AS 
(
SELECT
   HASH_ID
  ,TELEFONO
  ,CORREO
  ,CORREO AS CORREO_ULT
  ,CELULAR
  FROM `iter-data-storage-pv-uat.master_party.V_MD_PERSONA`
  QUALIFY(ROW_NUMBER()OVER(PARTITION BY HASH_ID ORDER BY NUMERO_DOCUMENTO DESC ))=1
)
, TMP_ASEGURADO AS (
  SELECT 
   NUMERO_POLIZA
  ,RAZON_SOCIAL
  ,NOMBRE
  ,APELLIDO_PATERNO
  ,APELLIDO_MATERNO
  ,NUMERO_DOCUMENTO
  ,TIPO_DOCUMENTO
  ,FECHA_NACIMIENTO
   FROM `iter-data-storage-pv-uat.goldenrecord_data.ASEGURADO`
  QUALIFY( ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY NUMERO_DOCUMENTO DESC) )=1
)
,TMP_POLIZA_AGENTE AS (
  SELECT 
       AGE.NUMERO_POLIZA
      ,AGE.COD_AGENTE_INICIAL
      ,AGE.COD_AGENTE_FINAL
      ,AGE.COD_AGENCIA_FINAL
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_AGENTE` AGE
  QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY ID_PRODUCTO DESC ))=1
)
 SELECT 
       POL.NUMERO_POLIZA
      ,POL.ESTADO AS ESTADO_POLIZA
      ,COALESCE(POL.FECHA_CANCELACION,POL.FECHA_TERMINADO,POL.FECHA_PRORROGADO,POL.FECHA_ANULADA,POL.FECHA_RESCATADO,POL.FECHA_SUSPENDIDA,POL.FECHA_SALDADA,POL.FECHA_CADUCADA) AS FECHA_BAJA
      ,CAST(FORMAT_DATE("%Y%m",COALESCE(POL.FECHA_CANCELACION,POL.FECHA_TERMINADO,POL.FECHA_PRORROGADO,POL.FECHA_ANULADA,POL.FECHA_RESCATADO,POL.FECHA_SUSPENDIDA,POL.FECHA_SALDADA,POL.FECHA_CADUCADA)) AS INT64) AS CODMES_BAJA
      ,AGE.COD_AGENTE_INICIAL
      ,AGE.COD_AGENTE_FINAL
      ,POL.NOMBRE_PRODUCTO
      ,POL.ID_PRODUCTO
      ,POL.NOMBRE_GRUPO_PRODUCTO
      ,POL.FECHA_EMISION
      ,CAST(FORMAT_DATE("%Y%m",POL.FECHA_EMISION) AS INT64) AS CODMES_EMISION
      ,PER.PERIODO_RECAUDACION
      -- DATOS DEL CONTRATANTE
      ,COALESCE(CON.RAZON_SOCIAL, CONCAT(CON.NOMBRE, ' ', CON.APELLIDO_PATERNO, ' ', CON.APELLIDO_MATERNO)) AS NOMBRES_CONTRATANTE
      ,CON.FECHA_NACIMIENTO AS FECHA_NACIMIENTO_CONTRATANTE
      ,CON.NUMERO_DOCUMENTO AS NUMERO_DOCUMENTO_CONTRATANTE
      ,CON.TIPO_DOCUMENTO   AS TIPO_DOCUMENTO_CONTRATANTE
      ,CON.APELLIDO_MATERNO AS APELLIDO_MATERNO_CONTRATANTE 
      ,CON.APELLIDO_PATERNO AS APELLIDO_PATERNO_CONTRATANTE
      ,CON.NOMBRE           AS NOMBRE_CONTRATANTE
      ,CON.RAZON_SOCIAL     AS RAZON_SOCIAL_CONTRATANTE
      ,POL.ID_PERSONA
      -- DATOS DEL AGENTE
      ,AGE.COD_AGENCIA_FINAL
      ,EST.COD_USERNAME_AGENTE
      ,EST.NOM_AGENTE AS NOMBRE_AGENTE_FINAL
      ,EST.GLS_CORREO_AGENTE AS CORREO_AGENTE_FINAL
      ,EST.CODIGO_CONTRATO
      ,POL.MONEDA AS MONEDA_PRIMA_NETA
      -- DATOS DEL ASEGURADO
      ,COALESCE(ASE.RAZON_SOCIAL, CONCAT(ASE.NOMBRE, ' ', ASE.APELLIDO_PATERNO, ' ', ASE.APELLIDO_MATERNO)) AS NOMBRES_ASEGURADO
      ,ASE.NUMERO_DOCUMENTO AS NUMERO_DOCUMENTO_ASEGURADO
      ,ASE.TIPO_DOCUMENTO AS TIPO_DOCUMENTO_ASEGURADO
      -- DATOS DE LA POLIZA
      ,POL.PRIMA_NETA
      ,POL.FRECUENCIA_PAGO
      ,POL.CANAL
      ,POL.FECHA_INICIO AS FECHA_INICIO_VIGENCIA_POLIZA
      ,POL.FECHA_FIN    AS FECHA_FIN_VIGENCIA_POLIZA
      ,DATE_DIFF(CURRENT_DATE,COALESCE(SAFE.PARSE_DATE("%Y-%m-%d",POL.FECHA_VENTA),POL.FECHA_INICIO),MONTH) AS ANTIGUEDAD
      ,IFNULL(MOR.PUNTAJE,"0") AS PUNTAJE_SEGMENTO
      ,IFNULL(MOR.SEGMENTO,'PUNTUAL') AS SEGMENTO

      ,CEL.CORREO 
      ,CEL.CELULAR 
      ,CEL.TELEFONO

      ,EST.COD_JEFE     AS CODIGO_JEFE
      ,EST.NOM_JEFE     AS NOMBRE_JEFE
      ,EST.NOM_SUPERVIS AS NOMBRE_SUPERVISOR
      ,PAH.FECHA_PAGADO_HASTA
      ,CEL.CORREO_ULT
      ,ASE.FECHA_NACIMIENTO AS FECHA_NACIMIENTO_ASEGURADO
      ,MOR.SUB_SEGMENTO
      -- SEGMENTO
      ,RFM.F
      ,RFM.M
      ,RFM.R
      ,RFM.SCORE_RFM
      ,RFM.RECENCY
      ,RFM.MONETARY_VALUE
      ,RFM.FREQUENCY
      ,EST.EMAIL_LIDER  AS CORREO_GERENTE
      ,EST.NOMBRE_LIDER AS NOMBRE_GERENTE
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL
INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` CON
        ON CON.ID_PERSONA = POL.ID_PERSONA
 LEFT JOIN TMP_ASEGURADO ASE
        ON ASE.NUMERO_POLIZA = POL.NUMERO_POLIZA
 LEFT JOIN TMP_POLIZA_AGENTE AGE
         ON AGE.NUMERO_POLIZA = POL.NUMERO_POLIZA
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.ESTRUCTURA_COMERCIAL` EST
        ON CAST(EST.COD_AGENTE AS STRING) = AGE.COD_AGENTE_FINAL
 LEFT JOIN TMP_SEGMENTACION_MOROSIDAD MOR 
        ON SAFE_CAST(MOR.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
 LEFT JOIN TMP_DATOSPER CEL
        ON CEL.HASH_ID = CON.HASH_ID
 LEFT JOIN TMP_PAGADO_HASTA_VIDA PAH
		    ON PAH.NUMERO_POLIZA = POL.NUMERO_POLIZA 
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.PERSONA_SEGMENTACION_RFM`  RFM 
        ON RFM.ID_PERSONA = CON.ID_PERSONA
CROSS JOIN  `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB`  PER
    WHERE POL.NOMBRE_GRUPO_PRODUCTO='VIDA'
      AND POL.NOMBRE_PRODUCTO!='PROTECCIONFAMILIAR'
      AND (POL.ESTADO= 'VIGENTE'
       OR COALESCE(POL.FECHA_CANCELACION
      ,POL.FECHA_TERMINADO
      ,POL.FECHA_PRORROGADO
      ,POL.FECHA_ANULADA
      ,POL.FECHA_RESCATADO
      ,POL.FECHA_SUSPENDIDA
      ,POL.FECHA_SALDADA
      ,POL.FECHA_CADUCADA) >= PER.PERIODO_RECAUDACION_DIA_INICIO)
       AND POL.FECHA_EMISION <= PER.PERIODO_RECAUDACION_DIA_FIN
;

-- ----------------------------------------------------------------------
-- Paso A11: Primeras Primas
--           Universo de cargos considerados primeras Primas; estos son filtrados porque no ingresan al proceso de cobranza.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_PRIMERA_PRIMA`
AS
(
SELECT  NUMERO_POLIZA
       ,NUMERO_CARGO
       ,CORRELATIVO_CARGO
       ,CORRELATIVO_POLIZA
       ,CARGO_FECHA_COBERTURA_INICIO
       ,ESTADO_CARGO
FROM 
(SELECT NUMERO_POLIZA
       ,NUMERO_CARGO
       ,ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ,NUMERO_CARGO ORDER BY CARGO_FECHA_COBERTURA_INICIO ASC ) AS CORRELATIVO_CARGO
       ,ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA  ORDER BY CARGO_FECHA_COBERTURA_INICIO ASC ) AS CORRELATIVO_POLIZA
       ,CARGO_FECHA_COBERTURA_INICIO
       ,ESTADO_CARGO
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO`
 WHERE NOMBRE_GRUPO_PRODUCTO='VIDA'
   AND ESTADO_CARGO != 'SIN CARGO'
)
WHERE CORRELATIVO_CARGO  = 1
  AND CORRELATIVO_POLIZA = 1 
)
;

-- ----------------------------------------------------------------------
-- Paso A11: UNIVERSO DE CARGOS POR COBRAR Y COBRADOS EN EL MES
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNI_PAG_CARGOS_VEHICULAR_V`
AS
WITH TMP_PERIODO_ACTUAL AS
(
  SELECT  PERIODO AS PERIODO_RECAUDACION
       ,PERIODO_RECAUDACION_DIA_INICIO
       ,PERIODO_RECAUDACION_DIA_FIN
       ,PERIODO_FECHA_INICIO AS PERIODO_DIA_INICIO_4M
       ,PERIODO_RECAUDACION_DIA_FIN AS PERIODO_FECHA_FIN
       ,CONCAT(CAST(PERIODO_ANIO AS STRING),' ',PERIODO_MES_NOMBRE_ABREV) AS PERIODO_DESCRIPCION_ABREVIADO
  FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION`
  WHERE CAST(PERIODO AS INT64) = var_periodo_recaudacion
)
,TMP_TIPO_CAMBIO_MES_ANTERIOR AS 
(
SELECT
         MONTO_TIPO_CAMBIO
        ,PERIODO
        ,FECHA
  FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_TIPO_CAMBIO_CONTABLE`
 WHERE FECHA =DATE_SUB(PARSE_DATE("%Y%m%d",CONCAT(CAST(var_periodo_recaudacion AS STRING),'01')),INTERVAL 1 MONTH) 
   AND FRECUENCIA ='MENSUAL'
)
 SELECT -- -------------------------------------
        -- DATOS DE LA POLIZA
        -- -------------------------------------
         CAR.NUMERO_POLIZA_INT
        ,CAR.NOMBRE_PRODUCTO
        ,CAR.NOMBRE_GRUPO_PRODUCTO
        ,CAR.ID_PRODUCTO
        ,CAR.NUMERO_POLIZA
        ,CAR.FRECUENCIA_PAGO
      -- -------------------------------------
      -- DEVOLUCIONES ID DE DEVOLUCIONES EN EL PERIODO
      -- -------------------------------------
        --,CAR.ID_DEVOLUCION
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       CAR.ID_DEVOLUCION
                   ELSE 0
                   END
         ) AS ID_DEVOLUCION
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_PEN_PERIODO
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_USD_PERIODO 
        ,SUM( CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)!=0 AND CAR.MONTO_CANTIDAD<=0
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            )OVER(PARTITION BY NUMERO_POLIZA,ID_CARGO ) AS MONTO_DEVOLUCION_PEN_TOTAL
        ,SUM(CASE WHEN  COALESCE(CAR.ID_DEVOLUCION,0)!=0 AND CAR.MONTO_CANTIDAD<=0
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            )OVER(PARTITION BY NUMERO_POLIZA,ID_CARGO ) AS MONTO_DEVOLUCION_USD_TOTAL
      -- -------------------------------------
      -- CARGOS - POR COBRAR
      -- -------------------------------------
        ,CAR.ID_CARGO
        ,CAR.NUMERO_CARGO
        ,CAR.CONCEPTO_CARGO
        ,CAR.CONCEPTO_CARGO_TIPO_INGRESO
        ,CAR.ESTADO_CARGO
        ,CAR.CARGO_FECHA_COBERTURA_INICIO
        ,CAR.CARGO_FECHA_COBERTURA_FIN
        ,CAR.MONTO_CARGO_CANTIDAD
        ,CAR.MONTO_CARGO_MONEDA
        ,CAR.CARGO_PERIODO_COBRANZA
        ,CAR.SALDO_CANTIDAD
        ,CAR.SALDO_MONEDA
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_PEN
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_USD
        ,CAR.VIA_COBRO
      -- -------------------------------------
      -- ABONOS - PAGOS
      -- -------------------------------------
        ,COALESCE(CAR.ID_ABONO,'0') AS ID_ABONO
        ,COALESCE(CAR.NUMERO_ABONO,0) AS NUMERO_ABONO
        ,COALESCE(CAR.MONTO_CANTIDAD,0) AS MONTO_CANTIDAD
        ,CAR.FECHA_REGISTRO_CAJA 
        ,DATETIME(CAR.FECHA_REGISTRO_CAJA,'America/Lima') AS FECHA_REGISTRO_CAJA_PERU
        ,CAR.FECHA_REGISTRO_ABONO
        ,CAR.FECHA_APLICADO_CARGO_ABONO
        ,CAR.NUM_VIA_PAGO_COBRO AS NUMERO_VIA_PAGO
        ,CAR.ESTADO_ABONO
       --RECAUDO DEL PERIODO: Todos los Pagos realizados en el RANGO DEL PERIODO en USD  y PEN
        ,( CASE WHEN (FECHA_REGISTRO_CAJA_P >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND FECHA_REGISTRO_CAJA_P <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_PEN_PERIODO
        ,( CASE WHEN (FECHA_REGISTRO_CAJA_P >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND FECHA_REGISTRO_CAJA_P <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_USD_PERIODO 

        -- Pago posterior al ultimo dia del periodo ..??
        ,(CASE WHEN FECHA_REGISTRO_CAJA_P > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_ULTIMO_DIA_PERIODO
        ,(CASE WHEN FECHA_REGISTRO_CAJA_P > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO 
            
        --SALDO POR COBRAR PAGADO POSTERIOR AL PRIMER DIA DEL PERIODO : MONTOS CONSIRAR COMO POR COBRAR EN EL PERIODO ACTUAL, PORQUE SON PAGOS POSTERIORES AL PRIMER DIA DEL PERIODO(PARA REPROCESOS)
        ,(CASE WHEN FECHA_REGISTRO_CAJA_P >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO
        ,(CASE WHEN FECHA_REGISTRO_CAJA_P >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO --> SI ESTE MONTO ES MAYOR A CERO Y SALDO EES MAYOR A CERO, ENTONCES, ES UN MONTO POR COBRAR.
      
       -- SALDO POR COBRAR QUE AUN NO SE PAGO: Monto Pendiente de Pago Primero se evalua se el saldo es igual al monto pagado. hay polizas con estos casos.
       /*ACTUALIZADO*/
       ,/*(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
             THEN 0
             ELSE */(CASE WHEN CAR.SALDO_MONEDA='PEN'
                        THEN CAR.SALDO_CANTIDAD 
                        ELSE CAR.SALDO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO 
                   END)
         /* END) */ AS SALDO_CANTIDAD_PEN -- si el saldo es mayor a cero, tambien es una cuenta por cobrar.
       ,/*(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
              THEN 0
              ELSE*/
                 (CASE WHEN CAR.SALDO_MONEDA='USD' 
                       THEN CAR.SALDO_CANTIDAD 
                       ELSE CAR.SALDO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO 
                  END)
        /* END)*/ AS SALDO_CANTIDAD_USD
      -- -------------------------------------
      -- DATOS DEL PERIODO DE COBRANZA
      -- -------------------------------------
        ,PER.PERIODO_DIA_INICIO_4M
        ,PER.PERIODO_FECHA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_INICIO
        ,PER.PERIODO_RECAUDACION
        ,PER.PERIODO_DESCRIPCION_ABREVIADO
       -- ,PER.PERIODO_FECHA_COBERTURA_INICIO
     -- -------------------------------------
     -- DATOS DEL TIPO DE CAMBIO DEL PERIODO
     -- -------------------------------------
        ,TIP.MONTO_TIPO_CAMBIO
     -- -------------------------------------
     -- PARA POLIZAS CON CARGOS QUE CAMBIARON SU FRENCUENCIA
     -- -------------------------------------
     --  ,MAX(CASE WHEN CAR.ESTADO_CARGO='ACTIVO' THEN 1 ELSE 0 END)OVER(PARTITION BY CAR.NUMERO_POLIZA,FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_INICIO) )  AS FLAG_CARGO_ACTIVO_PERIODO
     --  ,ROW_NUMBER()OVER(PARTITION BY CAR.NUMERO_POLIZA, FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_INICIO) ORDER BY CAR.CARGO_FECHA_COBERTURA_INICIO ASC)  AS CORRELATIVO_CARGOS
    -- ------------------------------------------------------------------------------
    -- FILTRO PARA CONSIDERAR LOS CARGOS POR COBRAR EN EL PERIODO
    -- ------------------------------------------------------------------------------
    --PAGOS EN PERIODO
     ,(CASE WHEN (FECHA_REGISTRO_CAJA_P >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND FECHA_REGISTRO_CAJA_P <= PER.PERIODO_RECAUDACION_DIA_FIN)
        THEN True 
        ELSE False
      END ) AS FLAG_PAGO_EN_PERIODO
    -- CARGOS DE LOS ULTIMOS 4 PERIODOS
    ,(CASE WHEN (CAR.CARGO_FECHA_COBERTURA_INICIO <= PER.PERIODO_RECAUDACION_DIA_FIN 
       AND CAR.CARGO_FECHA_COBERTURA_INICIO >= PER.PERIODO_DIA_INICIO_4M)
       THEN True 
       ELSE False
       END ) AS FLAG_CARGO_COBRAR_PERIODO
    -- PAGOS POSTERIOR AL ULTIMO DIA DE COBRANZA... 31 O 20
    ,(CASE WHEN FECHA_REGISTRO_CAJA_P > PER.PERIODO_RECAUDACION_DIA_FIN  THEN True ELSE False END) AS FLAG_PAGO_POSTERIOR_AL_PERIODO
    -- FLAG DEVOLUCIONES EN EL MES
    ,(CASE WHEN (COALESCE(CAR.FECHA_REGISTRO_CAJA_P,DATE(CAR.FECHA_APLICADO_CARGO_ABONO)) >= PER.PERIODO_RECAUDACION_DIA_INICIO AND COALESCE(CAR.FECHA_REGISTRO_CAJA_P,DATE(CAR.FECHA_APLICADO_CARGO_ABONO )) <= PER.PERIODO_RECAUDACION_DIA_FIN 
                    AND COALESCE(CAR.ID_DEVOLUCION,0)!=0) 
                AND MAX(CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)=0 THEN FECHA_REGISTRO_CAJA_P END )OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
           THEN TRUE 
    ELSE FALSE 
    END ) AS FLAG_DEVOLUCION_PERIODO
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR
CROSS JOIN TMP_PERIODO_ACTUAL PER
CROSS JOIN TMP_TIPO_CAMBIO_MES_ANTERIOR TIP
     WHERE CAR.NOMBRE_GRUPO_PRODUCTO='VIDA'
       AND CAR.NOMBRE_PRODUCTO!='PROTECCIONFAMILIAR'
       AND COALESCE(CAR.ESTADO_ABONO,'VACIO') <> 'ANULADO'
;

-- ----------------------------------------------------------------------
-- Paso A11: 
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS_V`
AS
SELECT
 CAR.PERIODO_RECAUDACION AS PERIODO
,'RECAUDACION' AS TIPO_PERIODO
,CAR.NUMERO_POLIZA
,CAR.NUMERO_CARGO
,CAR.ID_DEVOLUCION
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO=TRUE THEN NULL ELSE CAR.NUMERO_ABONO END AS NUMERO_ABONO
,CAR.CARGO_FECHA_COBERTURA_INICIO
,CAR.CARGO_FECHA_COBERTURA_INICIO AS FECHA_VENCIMIENTO_CUOTA
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE 
        --OR COALESCE(CAR.ID_DEVOLUCION,0)!=0  -- para devoluciones.
        OR COALESCE(CAR.MONTO_PAGO_USD_PERIODO,0)=0 
        THEN NULL 
  ELSE CAR.FECHA_APLICADO_CARGO_ABONO
 END AS FECHA_APLICADO_CARGO_ABONO
,CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)!=0 THEN CAR.FECHA_APLICADO_CARGO_ABONO  ELSE NULL END AS FECHA_DEVOLUCION
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE THEN NULL ELSE CAR.FECHA_REGISTRO_CAJA_PERU END AS FECHA_REGISTRO_CAJA_PERU
,CAR.MONTO_PAGO_PEN_PERIODO AS MONTO_CANTIDAD_ABONO_PEN
,CAR.MONTO_PAGO_USD_PERIODO AS MONTO_CANTIDAD_ABONO_USD
--,CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' THEN CAR.SALDO_CANTIDAD_PEN+CAR.MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO ELSE 0 END AS MONTO_POR_COBRAR_PEN 
--,CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' THEN CAR.SALDO_CANTIDAD_USD+CAR.MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO ELSE 0 END AS MONTO_POR_COBRAR_USD
,(CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' 
      THEN MAX(CAR.SALDO_CANTIDAD_PEN)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.ID_CARGO)+ SUM(CAR.MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.ID_CARGO) /* CAR.MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO */-- +CAR.MONTO_DEVOLUCION_PEN_PERIODO
      ELSE 0 
  END) AS MONTO_POR_COBRAR_PEN 
,(CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' 
      THEN MAX(CAR.SALDO_CANTIDAD_USD)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.ID_CARGO)+ +SUM(CAR.MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.ID_CARGO) /* CAR.MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO*/ -- + CAR.MONTO_DEVOLUCION_USD_PERIODO
      ELSE 0 
  END )AS MONTO_POR_COBRAR_USD
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE THEN NULL ELSE  CAR.NUMERO_VIA_PAGO END AS NUMERO_VIA_PAGO
,CAR.MONTO_DEVOLUCION_PEN_PERIODO
,CAR.MONTO_DEVOLUCION_USD_PERIODO
,CAR.CONCEPTO_CARGO
,CAR.ESTADO_CARGO
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE OR COALESCE(CAR.MONTO_PAGO_USD_PERIODO,0)=0 THEN NULL ELSE  CAR.ESTADO_ABONO END AS ESTADO_ABONO
,CAR.FLAG_DEVOLUCION_PERIODO
,CAR.NUMERO_POLIZA_INT
,CASE WHEN CAR.ESTADO_CARGO='ACTIVO' AND (COALESCE(CAR.SALDO_CANTIDAD_USD,0)+COALESCE(CAR.MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO,0)) > 0 
      THEN (CASE WHEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)>0 
                 THEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)
                 ELSE 0
           END)
      ELSE 0
  END AS DIAS_IMPAGO
,SALDO_CANTIDAD_PEN
,SALDO_CANTIDAD_USD 
,VIA_COBRO
,ID_CARGO
,MONTO_TIPO_CAMBIO
,PERIODO_DIA_INICIO_4M
,PERIODO_DESCRIPCION_ABREVIADO
,PERIODO_RECAUDACION_DIA_INICIO AS PERIODO_FECHA_INICIO
,PERIODO_RECAUDACION_DIA_FIN AS PERIODO_FECHA_FIN
,PERIODO_RECAUDACION_DIA_INICIO
,PERIODO_RECAUDACION_DIA_FIN 
,CARGO_FECHA_COBERTURA_FIN 
,CONCEPTO_CARGO_TIPO_INGRESO
,MONTO_CARGO_MONEDA
,MONTO_CARGO_CANTIDAD_PEN
,MONTO_CARGO_CANTIDAD_USD
,CARGO_PERIODO_COBRANZA
-- FLAG CARGOS PAGADOS ANTES DEL INICIO DE LOS 4 MESES
,(CASE WHEN CARGO_FECHA_COBERTURA_INICIO<PERIODO_DIA_INICIO_4M THEN TRUE ELSE FALSE END ) AS FLAG_CARGO_RECUPERADO
FROM `iter-data-storage-pv-uat.temp.TMP_UNI_PAG_CARGOS_VEHICULAR_V` CAR
     WHERE CAR.FLAG_PAGO_EN_PERIODO =TRUE  -- COBRADO EN EL PERIODO
     OR CAR.FLAG_DEVOLUCION_PERIODO =TRUE  -- DEVOLUCIONES EN EL MES
    OR ( CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.SALDO_CANTIDAD > 0 /* AND COALESCE(CAR.ID_DEVOLUCION,0)!=0*/ ) -- Cargos del periodo que no son devoluciones
    OR ( CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO=TRUE /*AND COALESCE(CAR.ID_DEVOLUCION,0)!=0*/ )  -- Cargos del periodo que no son devoluciones
;

-- ----------------------------------------------------------------------
-- Paso A10: Rechazos que se registran en el MOTOR DE PAGOS
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_MOTOR`
AS
(
SELECT
 REH.NUMERO_POLIZA
,REH.FECHA_TRANSACCION
,REH.TIPO_TARJETA
,REH.OPERADOR
,REH.PASARELA
,REH.EMISOR
,(CASE WHEN (REH.ESTADO_TRANSACCION='N' AND REH.FUENTE='RECURRENTE') THEN IFNULL(NULLIF(TRIM(REH.MOTIVO_RECHAZO),''),'TRANSACCIÓN DENEGADA A/D') 
   ELSE REH.MOTIVO_RECHAZO END) AS MOTIVO_RECHAZO
,INC.ID_OPENITEM
,INC.ID_CARGO
,REH.NUMERO_TARJETA_ENCRYP
 FROM `iter-data-storage-pv-uat.bi_cobranza.DV_RECHAZOS` REH
INNER JOIN `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` PER
   ON  DATE(REH.FECHA_TRANSACCION) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
INNER JOIN `iter-data-storage-pv-uat.samp_data.INTERMEDIO_CARGO_raw` INC 
        ON CAST(INC.ID_OPENITEM AS INT64) =  SAFE_CAST(REH.ID_OPENITEM AS INT64) --> REVISAR ESOS RECHAZOS
WHERE REH.NOMBRE_GRUPO_PRODUCTO='VIDA'
  AND CAST(PER.PERIODO AS INT64) =var_periodo_recaudacion
  AND REH.FECHA_VENCIMIENTO_CUOTA IS NOT NULL
QUALIFY (ROW_NUMBER()OVER(PARTITION  BY REH.NUMERO_POLIZA,INC.ID_CARGO ORDER BY REH.FECHA_TRANSACCION DESC )) = 1
);

-- ----------------------------------------------------------------------
-- Paso A10: Rechazos que se registran en el MOTOR DE PAGOS
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_MOTOR_ULTIMO`
AS
(
SELECT
 REH.NUMERO_POLIZA
,REH.FECHA_TRANSACCION
,REH.TIPO_TARJETA
,REH.OPERADOR
,REH.PASARELA
,REH.EMISOR
,(CASE WHEN (REH.ESTADO_TRANSACCION='N' AND REH.FUENTE='RECURRENTE') THEN IFNULL(NULLIF(TRIM(REH.MOTIVO_RECHAZO),''),'TRANSACCIÓN DENEGADA A/D') 
   ELSE REH.MOTIVO_RECHAZO END) AS MOTIVO_RECHAZO
,INC.ID_OPENITEM
,INC.ID_CARGO
,REH.NUMERO_TARJETA_ENCRYP
 FROM `iter-data-storage-pv-uat.bi_cobranza.DV_RECHAZOS` REH
INNER JOIN `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` PER
   ON  DATE(REH.FECHA_TRANSACCION) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
INNER JOIN `iter-data-storage-pv-uat.samp_data.INTERMEDIO_CARGO_raw` INC 
        ON CAST(INC.ID_OPENITEM AS INT64) = SAFE_CAST(REH.ID_OPENITEM AS INT64) --> REVISAR
WHERE REH.NOMBRE_GRUPO_PRODUCTO='VIDA'
  AND CAST(PER.PERIODO AS INT64) =var_periodo_recaudacion
  AND REH.FECHA_VENCIMIENTO_CUOTA IS NOT NULL
 AND TRIM(UPPER(REH.MOTIVO_RECHAZO)) != 'OK'
QUALIFY (ROW_NUMBER()OVER(PARTITION  BY REH.NUMERO_POLIZA ORDER BY REH.FECHA_TRANSACCION DESC )) = 1
);

-- ----------------------------------------------------------------------
-- Paso A10: Rechazos que se registran en la BD de SALOMON; 
--           Estos datos  son enviados en tramas y son cargados a SALOMON.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_SALOMON`
AS
(
SELECT 
 TRIM(REH.NUMERO_POLIZA) AS NUMERO_POLIZA
,COALESCE(NULLIF(TRIM(UPPER(REH.MENSAJE_HOMOLOGADO)),'<SIN DEFINIR>'),TRIM(REH.MOTIVO_RECHAZO))  AS MENSAJE_HOMOLOGADO
,PER.PERIODO
   FROM `iter-data-storage-pv-uat.bi_cobranza.DV_RECHAZOS_VIDA` REH 
 INNER JOIN `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` PER
    ON  DATE(REH.FECHA_TRANSACCION) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
WHERE CAST(PER.PERIODO AS INT64)=var_periodo_recaudacion
QUALIFY (ROW_NUMBER() OVER(PARTITION BY SAFE_CAST(REH.NUMERO_POLIZA AS INT64) ORDER BY DATE(FECHA_TRANSACCION) DESC ))=1
);

-- CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_SALOMON`
-- AS
-- (
-- SELECT 
--  TRIM(REH.NUMERO_POLIZA) AS NUMERO_POLIZA
-- ,REH.CARGO AS ID_CARGO
-- ,COALESCE(NULLIF(TRIM(UPPER(REH.MENSAJE_HOMOLOGADO)),'<SIN DEFINIR>'),TRIM(REH.MENSAJE_TERMINAL))  AS MENSAJE_HOMOLOGADO
-- ,PER.PERIODO
-- ,REH.FECHA_RETORNO
--    FROM `iter-data-storage-pv-uat.salomon_data.RECHAZOS_RECAUDACION_raw` REH --ORDER BY FECHA_PROCESO DESC
--  INNER JOIN `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` PER
--     ON  DATE(REH.FECHA_RETORNO) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
-- WHERE CAST(PER.PERIODO AS INT64)=var_periodo_recaudacion
-- QUALIFY (ROW_NUMBER() OVER(PARTITION BY REH.NUMERO_POLIZA,REH.CARGO ORDER BY DATE(FECHA_RETORNO) DESC ))=1
-- );


-- ------------------------------------------------------
-- ------------------------------------------------------
-- AFILIACION
-- ------------------------------------------------------
-- ------------------------------------------------------
 
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_AFILIACION_POLIZA_UNI`
AS
( 
SELECT DISTINCT 
 AFI.NUMERO_POLIZA
,UPPER(TV.DESCRIPCION) AS TIPO_VIA_COBRO_AFILIACION
,(CASE AFI.ESTADO_AFILIACION  
       WHEN 0  THEN 'DESCONOCIDO'
       WHEN 1  THEN 'INGRESADO'
       WHEN 2  THEN 'ENPROCESO'
       WHEN 3  THEN 'RECHAZADO'
       WHEN 4  THEN 'APROBADO'
       WHEN 5  THEN 'VALIDADO'
       WHEN 6  THEN 'NOCONFORME'
       WHEN 7  THEN 'DESISTIDO'
       WHEN 8  THEN 'PORVALIDAR'
       WHEN 9  THEN 'ENPROCESOVALIDACION'
       WHEN 10 THEN 'VALIDACIONAPROBADA'
       WHEN 11 THEN 'VALIDACIONRECHAZADA'
       WHEN 12 THEN 'PORAPROBAR'
   END) AS ESTADO_AFILIACION
,VC.nombre AS VIA_COBRO_AFILIACION
,(CASE WHEN VC.ID_TIPO_VIA_COBRO = 3 THEN 'CAJA-VENTANILLA'
       WHEN VC.ID_TIPO_VIA_COBRO = 2 AND TAR.MONEDA ='PEN' THEN 'TARJETA CRÉDITO MONEDA NACIONAL'
       WHEN VC.ID_TIPO_VIA_COBRO = 2 AND TAR.MONEDA ='USD' THEN 'TARJETA CRÉDITO MONEDA EXTRANJERA'
       WHEN VC.ID_TIPO_VIA_COBRO = 1 THEN UPPER(TRIM(TC.GLS_TIPO_CUENTA))
       ELSE 'TIPO INDEFINIDO'
  END) TIPO_CUENTA
  ,vc2.nombre AS VIA_COBRO_TARJETA
  ,UPPER(tar.PASARELA) AS PASARELA
  ,TAR.NUMERO_TARJETA
  FROM `iter-data-storage-pv-uat.samp_data.AFILIACION_raw` AFI
 INNER JOIN `iter-data-storage-pv-uat.samp_data.CUENTA_POLIZA_raw` CP
    ON AFI.NUMERO_POLIZA      = CP.NUMERO_POLIZA
 INNER JOIN `iter-data-storage-pv-uat.samp_data.VIA_COBRO_raw` VC
    ON AFI.ID_VIA_COBRO       = VC.ID
 INNER JOIN `iter-data-storage-pv-uat.samp_data.TIPO_VIA_COBRO_raw` TV
    ON CAST(VC.ID_TIPO_VIA_COBRO AS STRING) = TV.ID
 INNER JOIN `iter-data-storage-pv-uat.sampmed_data.TARJETA_AFILIACION_raw` TA
    ON TA.ID_AFILIACION     = AFI.ID
LEFT JOIN `iter-data-storage-pv-uat.sampmed_data.TARJETA_raw` TAR
       ON TA.ID_TARJETA        = TAR.ID_TARJETA
 LEFT JOIN `iter-data-storage-pv-uat.samp_data.VIA_COBRO_raw` vc2 
       ON CAST(TAR.medio_pago as int64) = cast(vc2.id as int64)
 LEFT JOIN `iter-data-storage-pv-uat.sampmed_data.TIPO_CUENTA_raw` TC
        ON TAR.VIA_COBRO          = CAST(TC.TIPO_VIA_COBRO AS STRING)
       AND TAR.ID_TIPO_CUENTA     = TC.TARJ_TIPO_CUENTA
       AND TAR.MONEDA = TC.MON_POLIZA
     WHERE AFI.ESTADO_AFILIACION =4
)
;

-- ----------------------------------------------------------------------
-- Paso A10: Rechazos que se registran en logs
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_LOGS_BANCOS`
AS
SELECT
 NUMERO_POLIZA
,MOTIVO
,BANCO
FROM 
(
SELECT
 numero_poliza AS NUMERO_POLIZA
--,motivo_rechazo AS MOTIVO
,CASE 
WHEN REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'LINEA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'BLOQUEADA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'TARJETA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'PODRÍA') THEN 'TARJETA PODRIA ESTAR PERDIDA,ROBADA,VENCIDA'
WHEN REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'LINEA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'BLOQUEDA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'TARJETA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'BANCO') THEN 'TARJETA BLOQUEADA POR EL BANCO' 
WHEN REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'LINEA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'VENCIDA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'TARJETA')  THEN 'TARJETA VENCIDA'  
WHEN REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'LINEA') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'CLIENTE') AND REGEXP_CONTAINS(UPPER(MOTIVO_RECHAZO), 'COMERCIO')  THEN 'CLIENTE NO REGISTRADO EN EL COMERCIO'  
ELSE MOTIVO_RECHAZO
END  AS MOTIVO
,banco_rechazo AS BANCO
,NOMBRE_ARCHIVO
,SPLIT(REPLACE(nombre_archivo,'AMEX/log_cargos_',''),'_')[OFFSET (1)] AS FECHA_ORDEN
FROM `iter-data-storage-pv-uat.salomon_data.RECHAZOS_AMEX` 
UNION ALL 
SELECT
 codigo_servicio AS NUMERO_POLIZA 
,mensaje_estado_registro AS MOTIVO
,banco_rechazo AS BANCO
,nombre_archivo
,SPLIT(REPLACE(nombre_archivo,'MASTERCARD/LOTE_R_',''),'_')[OFFSET (1)] AS FECHA_ORDEN
 FROM `iter-data-storage-pv-uat.salomon_data.RECHAZOS_MASTERCARD`
UNION ALL
 SELECT
 nro_beneficiario AS NUMERO_POLIZA
--,mensaje AS MOTIVO
,CASE 
 WHEN REGEXP_CONTAINS(UPPER(mensaje), 'NO EXISTE UNA AFILIACION ACTIVA CON NRO DE BENFICIARIO') THEN 'NO EXISTE UNA AFILIACION ACTIVA CON NRO DE BENEFICIARIO' 
WHEN REGEXP_CONTAINS(UPPER(mensaje), 'EL MONTO INGRESADO EXCEDE EL MONTO MAXIMO DE LA AFILIACION') THEN 'EL MONTO INGRESADO EXCEDE EL MONTO MAXIMO DE LA AFILIACION' 
ELSE mensaje END AS MOTIVO 
,banco_rechazo AS BANCO
,nombre_archivo
,SPLIT(REPLACE(nombre_archivo,'VISA/CARGOS_',''),'.')[OFFSET (0)] AS FECHA_ORDEN
 FROM `iter-data-storage-pv-uat.salomon_data.RECHAZOS_VISA`
)
QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY CAST(FECHA_ORDEN AS INT64) DESC )) = 1 
;

--UNIERSO AFILIAIONC..

CREATE OR REPLACE TABLE  `iter-data-storage-pv-uat.temp.TMP_AFILIACION_POLIZA_UNI_RECH_AFI`
AS
( 
SELECT 
 TAB.NUMERO_POLIZA
,TAB.ID_CARGO
,TAB.TIPO_TARJETA_AFILIADO
,TAB.OPERADOR_AFILIADO
,TAB.PASARELA
,TAB.EMISOR
,TAB.MOTIVO_RECHAZO
,TAB.VIA_COBRO_AFILIACION
,TAB.TIPO_VIA_COBRO_AFILIACION
,TAB.VIA_COBRO_TARJETA
,TAB.NUMERO_TARJETA
,TAB.EMISOR_RECH
,TAB.TIPO_TARJETA_RECH
,HOM.MOTIVO_RECHAZO_HOMOLOGADO
FROM (
SELECT 
  POL.NUMERO_POLIZA
 ,POL.ID_CARGO
,COALESCE(NULLIF(TRIM(MOT.TIPO_TARJETA),''),NULLIF(TRIM(MOL.TIPO_TARJETA),''),AFI.TIPO_CUENTA) AS TIPO_TARJETA_AFILIADO
,COALESCE(MOT.OPERADOR,MOL.OPERADOR,VIA_COBRO_TARJETA) AS OPERADOR_AFILIADO
,COALESCE(MOT.PASARELA,MOL.PASARELA,AFI.PASARELA) AS PASARELA
,COALESCE(MOT.EMISOR,MOL.EMISOR,BAN.BANCO) AS EMISOR
,COALESCE(MOT.MOTIVO_RECHAZO,MOL.MOTIVO_RECHAZO,MENSAJE_HOMOLOGADO,BAN.MOTIVO) AS MOTIVO_RECHAZO
,AFI.VIA_COBRO_AFILIACION
,AFI.TIPO_VIA_COBRO_AFILIACION
,AFI.VIA_COBRO_TARJETA
,COALESCE(MOT.NUMERO_TARJETA_ENCRYP,MOL.NUMERO_TARJETA_ENCRYP,AFI.NUMERO_TARJETA) AS NUMERO_TARJETA
--
,COALESCE(MOT.EMISOR,MOL.EMISOR) AS EMISOR_RECH
,COALESCE(MOT.TIPO_TARJETA,MOL.TIPO_TARJETA) AS TIPO_TARJETA_RECH
  FROM (
    SELECT DISTINCT ID_CARGO , NUMERO_POLIZA
    FROM `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS_V`
  ) POL 
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_MOTOR` MOT 
        ON SAFE_CAST(MOT.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
       AND SAFE_CAST(MOT.ID_CARGO AS INT64)      = SAFE_CAST(POL.ID_CARGO AS INT64)
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_MOTOR_ULTIMO` MOL 
        ON SAFE_CAST(MOL.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
LEFT JOIN  `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_SALOMON` SAL 
        ON SAFE_CAST(SAL.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
       --AND SAFE_CAST(SAL.ID_CARGO AS INT64)      = SAFE_CAST(POL.ID_CARGO AS INT64)
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_COBRO_RECHAZO_LOGS_BANCOS` BAN 
        ON SAFE_CAST(BAN.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
LEFT JOIN `iter-data-storage-pv-uat.temp.TMP_AFILIACION_POLIZA_UNI` AFI 
       ON SAFE_CAST(AFI.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
)TAB 
LEFT JOIN `iter-data-storage-pv-uat.inputfiles.RECHAZO_HOMOLOGADO_VIDA` HOM
       ON HOM.HASH_ID_RECHAZO = UPPER(TO_HEX(SHA256(TRIM(UPPER(TAB.MOTIVO_RECHAZO)))))
)
;

-- ============================================================================================== --
-- |          REPORTE VIDA NIVEL [ POLIZA - CARGO - ABONO - DEVOLUCION ]                       | -- 
-- ============================================================================================== --
-- ----------------------------------------------------------------------
-- Paso A12:  
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_VIDA`
 WHERE PERIODO = var_periodo_recaudacion;

-- ----------------------------------------------------------------------
-- Paso A12:  
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_VIDA`
(
 NUMERO_POLIZA
,ESTADO_POLIZA
,FECHA_BAJA
,COD_AGENTE_INICIAL
,COD_AGENTE_FINAL
,NOMBRE_PRODUCTO
,NOMBRE_GRUPO_PRODUCTO
,FECHA_EMISION
,NOMBRES_CONTRATANTE
,FECHA_NACIMIENTO_CONTRATANTE
,NUMERO_DOCUMENTO_CONTRATANTE
,COD_AGENCIA_FINAL
,COD_USERNAME_AGENTE
,NOMBRE_AGENTE_FINAL
,MONEDA_PRIMA_NETA
,PRIMA_NETA
,FRECUENCIA_PAGO
,NOMBRES_ASEGURADO
,NUMERO_DOCUMENTO_ASEGURADO
,TIPO_DOCUMENTO_ASEGURADO
,CANAL
,FECHA_INICIO_VIGENCIA_POLIZA
,FECHA_FIN_VIGENCIA_POLIZA
,ANTIGUEDAD
,PERIODO
,TIPO_PERIODO
,NUMERO_CARGO
,ID_DEVOLUCION
,NUMERO_ABONO
,CARGO_FECHA_COBERTURA_INICIO
,FECHA_VENCIMIENTO_CUOTA
,FECHA_APLICADO_CARGO_ABONO
,FECHA_DEVOLUCION
,FECHA_REGISTRO_CAJA_PERU
,MONTO_CANTIDAD_ABONO_PEN
,MONTO_CANTIDAD_ABONO_USD
,MONTO_POR_COBRAR_PEN
,MONTO_POR_COBRAR_USD
,NUMERO_VIA_PAGO
,MONTO_DEVOLUCION_PEN_PERIODO
,MONTO_DEVOLUCION_USD_PERIODO
,CONCEPTO_CARGO
,ESTADO_CARGO
,ESTADO_ABONO
,FLAG_DEVOLUCION_PERIODO
,NUMERO_POLIZA_INT
,DIAS_IMPAGO
,SALDO_CANTIDAD_PEN
,SALDO_CANTIDAD_USD
,VIA_COBRO
,ID_CARGO
,MONTO_TIPO_CAMBIO
,PERIODO_DIA_INICIO_4M
,PERIODO_DESCRIPCION_ABREVIADO
,PERIODO_FECHA_INICIO
,PERIODO_FECHA_FIN
,PERIODO_RECAUDACION_DIA_INICIO
,PERIODO_RECAUDACION_DIA_FIN
,CARGO_FECHA_COBERTURA_FIN
,CONCEPTO_CARGO_TIPO_INGRESO
,MONTO_CARGO_MONEDA
,MONTO_CARGO_CANTIDAD_PEN
,MONTO_CARGO_CANTIDAD_USD
,CARGO_PERIODO_COBRANZA
---
,MOTIVO_RECHAZO
,TIPO_TARJETA_AFILIADO
,NUMERO_TARJETA
,OPERADOR_AFILIADO
,PASARELA
-- segmenteo
,PUNTAJE_SEGMENTO
,SEGMENTO
,CORREO_CONTRATANTE 
,CELULAR_CONTRATANTE
,ID_PERSONA
,CODIGO_JEFE
,NOMBRE_JEFE
,NOMBRE_SUPERVISOR
,FECHA_PAGADO_HASTA
,TIPO_DOCUMENTO_CONTRATANTE
,RAZON_SOCIAL_CONTRATANTE
,NOMBRE_CONTRATANTE
,APELLIDO_PATERNO_CONTRATANTE
,APELLIDO_MATERNO_CONTRATANTE
,TELEFONO
,CORREO_AGENTE_FINAL
,CODIGO_CONTRATO
,ID_PRODUCTO
,PERFIL_FINANCIERO
,TIPO_MONEDA_TC_PERFIL
,MORA
,EMISOR
,TIPO_TARJETA
,CORREO_ULT
,FECHA_NACIMIENTO_ASEGURADO
,MOTIVO_RECHAZO_HOMOLOGADO
,SUB_SEGMENTO
--
,F
,M
,R
,SCORE_RFM
,RECENCY
,MONETARY_VALUE
,FREQUENCY
,CORREO_GERENTE
,NOMBRE_GERENTE
)
    SELECT   DISTINCT  
           POL.NUMERO_POLIZA
          ,POL.ESTADO_POLIZA
          ,POL.FECHA_BAJA
          ,POL.COD_AGENTE_INICIAL
          ,POL.COD_AGENTE_FINAL
          ,POL.NOMBRE_PRODUCTO
          ,POL.NOMBRE_GRUPO_PRODUCTO
          ,POL.FECHA_EMISION
          ,POL.NOMBRES_CONTRATANTE
          ,POL.FECHA_NACIMIENTO_CONTRATANTE
          ,POL.NUMERO_DOCUMENTO_CONTRATANTE
          ,POL.COD_AGENCIA_FINAL
          ,POL.COD_USERNAME_AGENTE
          ,POL.NOMBRE_AGENTE_FINAL
          ,POL.MONEDA_PRIMA_NETA
          ,POL.PRIMA_NETA
          ,POL.FRECUENCIA_PAGO
          ,POL.NOMBRES_ASEGURADO
          ,POL.NUMERO_DOCUMENTO_ASEGURADO
          ,POL.TIPO_DOCUMENTO_ASEGURADO
          ,POL.CANAL
          ,POL.FECHA_INICIO_VIGENCIA_POLIZA
          ,POL.FECHA_FIN_VIGENCIA_POLIZA
          ,POL.ANTIGUEDAD
          ,CAST(CAR.PERIODO AS INT64) AS PERIODO
          ,CAR.TIPO_PERIODO
          ,CAR.NUMERO_CARGO
          ,CAR.ID_DEVOLUCION
          ,CAR.NUMERO_ABONO
          ,CAR.CARGO_FECHA_COBERTURA_INICIO
          ,CAR.FECHA_VENCIMIENTO_CUOTA
          ,CAR.FECHA_APLICADO_CARGO_ABONO
          ,CAR.FECHA_DEVOLUCION
          ,CAR.FECHA_REGISTRO_CAJA_PERU
          ,SUM(CAR.MONTO_CANTIDAD_ABONO_PEN)OVER(PARTITION BY CAR.NUMERO_POLIZA, CAR.NUMERO_CARGO) AS MONTO_CANTIDAD_ABONO_PEN --MODIFICADO
          ,SUM(CAR.MONTO_CANTIDAD_ABONO_USD)OVER(PARTITION BY CAR.NUMERO_POLIZA, CAR.NUMERO_CARGO) AS MONTO_CANTIDAD_ABONO_USD -- MODIFICADO
          ,MAX(CASE WHEN CAR.MONTO_POR_COBRAR_PEN> CAR.MONTO_CARGO_CANTIDAD_PEN THEN CAR.MONTO_CARGO_CANTIDAD_PEN ELSE  CAR.MONTO_POR_COBRAR_PEN END)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) AS MONTO_POR_COBRAR_PEN  -- modificado
          ,MAX(CASE WHEN CAR.MONTO_POR_COBRAR_USD> CAR.MONTO_CARGO_CANTIDAD_USD THEN CAR.MONTO_CARGO_CANTIDAD_USD ELSE  CAR.MONTO_POR_COBRAR_USD END)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) AS MONTO_POR_COBRAR_USD --modificado
          ,CAR.NUMERO_VIA_PAGO
          ,CAR.MONTO_DEVOLUCION_PEN_PERIODO
          ,CAR.MONTO_DEVOLUCION_USD_PERIODO
          ,CAR.CONCEPTO_CARGO
          ,CAR.ESTADO_CARGO
          ,CAR.ESTADO_ABONO
          ,CAR.FLAG_DEVOLUCION_PERIODO
          ,CAR.NUMERO_POLIZA_INT
          ,CAR.DIAS_IMPAGO
          ,CAR.SALDO_CANTIDAD_PEN
          ,CAR.SALDO_CANTIDAD_USD
          ,CAR.VIA_COBRO
          ,CAR.ID_CARGO
          ,CAR.MONTO_TIPO_CAMBIO
          ,CAR.PERIODO_DIA_INICIO_4M
          ,CAR.PERIODO_DESCRIPCION_ABREVIADO
          ,CAR.PERIODO_FECHA_INICIO
          ,CAR.PERIODO_FECHA_FIN
          ,CAR.PERIODO_RECAUDACION_DIA_INICIO
          ,CAR.PERIODO_RECAUDACION_DIA_FIN
          ,CAR.CARGO_FECHA_COBERTURA_FIN
          ,CAR.CONCEPTO_CARGO_TIPO_INGRESO
          ,CAR.MONTO_CARGO_MONEDA
          ,MAX(CAR.MONTO_CARGO_CANTIDAD_PEN)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) AS MONTO_CARGO_CANTIDAD_PEN -- MODIFICADO
          ,MAX(CAR.MONTO_CARGO_CANTIDAD_USD)OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) AS MONTO_CARGO_CANTIDAD_USD -- MODIFICADO
          ,CAR.CARGO_PERIODO_COBRANZA
          -----
          ,(CASE WHEN CAR.SALDO_CANTIDAD_USD =0 
                 THEN 'PAGADO'
                 -- WHEN CAR.DIAS_IMPAGO =0 
                 -- THEN NULL
                 ELSE AFI.MOTIVO_RECHAZO END) AS MOTIVO_RECHAZO
          ,AFI.TIPO_TARJETA_AFILIADO
          ,AFI.NUMERO_TARJETA
          ,AFI.OPERADOR_AFILIADO
          ,AFI.PASARELA
          --
          ,POL.PUNTAJE_SEGMENTO
          ,POL.SEGMENTO
          ,POL.CORREO 
          ,POL.CELULAR
          ,POL.ID_PERSONA
          ,POL.CODIGO_JEFE
          ,POL.NOMBRE_JEFE
          ,POL.NOMBRE_SUPERVISOR
          ,POL.FECHA_PAGADO_HASTA
          ,POL.TIPO_DOCUMENTO_CONTRATANTE
          ,POL.RAZON_SOCIAL_CONTRATANTE
          ,POL.NOMBRE_CONTRATANTE
          ,POL.APELLIDO_PATERNO_CONTRATANTE
          ,POL.APELLIDO_MATERNO_CONTRATANTE
          ,POL.TELEFONO
          ,POL.CORREO_AGENTE_FINAL
          ,POL.CODIGO_CONTRATO
          ,POL.ID_PRODUCTO
          ,COALESCE(PER.PERFIL_FINANCIERO,'NO BANCARIZADO') AS PERFIL_FINANCIERO
          ,COALESCE(PER.TIPO_MONEDA_TC,'NINGUNO') AS TIPO_MONEDA_TC
          --,COUNT(DISTINCT (CASE WHEN CAR.DIAS_IMPAGO > 0 THEN CAR.NUMERO_CARGO END)) OVER(PARTITION BY CAR.NUMERO_POLIZA) AS MORA
          ,CASE WHEN POL.ID_PRODUCTO='77969' THEN (CASE WHEN DATE_DIFF(CAR.PERIODO_FECHA_FIN,POL.FECHA_PAGADO_HASTA,MONTH)>0 THEN
                DATE_DIFF(CAR.PERIODO_FECHA_FIN,POL.FECHA_PAGADO_HASTA,MONTH)
                ELSE 0 END )
            ELSE (CASE WHEN POL.FECHA_PAGADO_HASTA >= LAST_DAY(CAR.PERIODO_FECHA_FIN,MONTH) THEN 0
                WHEN DATE_DIFF(CAR.PERIODO_FECHA_FIN,POL.FECHA_PAGADO_HASTA,MONTH)>0 THEN 
                DATE_DIFF(CAR.PERIODO_FECHA_FIN,POL.FECHA_PAGADO_HASTA,MONTH)
                END)
            END  AS MORA
          ,AFI.EMISOR_RECH
          ,AFI.TIPO_TARJETA_RECH
          ,POL.CORREO_ULT
          ,POL.FECHA_NACIMIENTO_ASEGURADO
          ,(CASE WHEN CAR.SALDO_CANTIDAD_USD =0 
                 THEN 'PAGADO'
                 ELSE AFI.MOTIVO_RECHAZO_HOMOLOGADO END) AS MOTIVO_RECHAZO_HOMOLOGADO
          ,POL.SUB_SEGMENTO
          --
          ,POL.F
          ,POL.M
          ,POL.R
          ,POL.SCORE_RFM
          ,POL.RECENCY
          ,POL.MONETARY_VALUE
          ,POL.FREQUENCY
          ,POL.CORREO_GERENTE
          ,POL.NOMBRE_GERENTE
      FROM `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS_V` CAR
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_POLIZA_PERIODO` POL
        ON SAFE_CAST(CAR.NUMERO_POLIZA AS INT64) = SAFE_CAST(POL.NUMERO_POLIZA AS INT64)
LEFT JOIN  `iter-data-storage-pv-uat.temp.TMP_AFILIACION_POLIZA_UNI_RECH_AFI` AFI 
       ON AFI.NUMERO_POLIZA = CAR.NUMERO_POLIZA
      AND AFI.ID_CARGO      = CAR.ID_CARGO
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_PERFIL_FINANCIERO` PER
        ON CAR.NUMERO_POLIZA = PER.NUMERO_POLIZA 
     WHERE CAR.CONCEPTO_CARGO IN (100,101,0)
       AND CAR.NUMERO_CARGO NOT IN ( SELECT NUMERO_CARGO FROM `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_PRIMERA_PRIMA` )
--QUALIFY(ROW_NUMBER()OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO,CAR.ID_DEVOLUCION ORDER BY CAR.FECHA_APLICADO_CARGO_ABONO ASC ))=1 --MODIFICADO
QUALIFY(ROW_NUMBER()OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO,CAR.ID_DEVOLUCION ORDER BY CAR.FECHA_APLICADO_CARGO_ABONO DESC ))=1 --MODIFICADO
;

-- ----------------------------------------------------------------------
-- Paso A12: TABLA AGREGADA FINAL
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_COBVIDA_HM_POLIZA_CARGO_COBRO`
AS(
WITH TMP_TOTAL_POR_COBRAR_COBRADO AS 
(
SELECT 
 FN.NUMERO_POLIZA_INT
,FN.NUMERO_POLIZA
,FN.ID_CARGO
,FN.NUMERO_CARGO
,FN.CONCEPTO_CARGO
,FN.CONCEPTO_CARGO_TIPO_INGRESO
,FN.ESTADO_CARGO
,FN.CARGO_FECHA_COBERTURA_INICIO
,FN.CARGO_FECHA_COBERTURA_FIN
,FN.MONTO_CARGO_MONEDA
,FN.VIA_COBRO
,FN.PERIODO_FECHA_INICIO
,FN.PERIODO_FECHA_FIN
,FN.PERIODO_RECAUDACION_DIA_FIN	
,FN.PERIODO_RECAUDACION_DIA_INICIO	
,FN.CARGO_PERIODO_COBRANZA 
,FN.FLAG_CARGO_RECUPERADO
,MAX(FN.MONTO_CARGO_CANTIDAD_PEN) AS MONTO_CARGO_CANTIDAD_PEN
,MAX(FN.MONTO_CARGO_CANTIDAD_USD) AS MONTO_CARGO_CANTIDAD_USD
,MAX(FN.SALDO_CANTIDAD_PEN) AS SALDO_CANTIDAD_PEN
,MAX(FN.SALDO_CANTIDAD_USD) AS SALDO_CANTIDAD_USD
,SUM(FN.MONTO_CANTIDAD_ABONO_PEN ) AS MONTO_RECAUDO_PEN
,SUM(FN.MONTO_CANTIDAD_ABONO_USD) AS MONTO_RECAUDO_USD
,CASE WHEN MAX(FN.MONTO_POR_COBRAR_PEN) > MAX(FN.MONTO_CARGO_CANTIDAD_PEN) THEN MAX(FN.MONTO_CARGO_CANTIDAD_PEN) ELSE MAX(FN.MONTO_POR_COBRAR_PEN) END AS MONTO_POR_COBRAR_PEN
,CASE WHEN MAX(FN.MONTO_POR_COBRAR_USD) > MAX(FN.MONTO_CARGO_CANTIDAD_USD) THEN MAX(FN.MONTO_CARGO_CANTIDAD_USD) ELSE MAX(FN.MONTO_POR_COBRAR_USD) END AS MONTO_POR_COBRAR_USD
      FROM `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS_V` FN
      WHERE CONCEPTO_CARGO IN (100,101,0)
       AND NUMERO_CARGO NOT IN ( SELECT NUMERO_CARGO FROM `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_PRIMERA_PRIMA` )
       AND COALESCE(ID_DEVOLUCION,0) = 0
GROUP BY
 FN.NUMERO_POLIZA_INT
,FN.NUMERO_POLIZA
,FN.ID_CARGO
,FN.NUMERO_CARGO
,FN.CONCEPTO_CARGO
,FN.CONCEPTO_CARGO_TIPO_INGRESO
,FN.ESTADO_CARGO
,FN.CARGO_FECHA_COBERTURA_INICIO
,FN.CARGO_FECHA_COBERTURA_FIN
,FN.MONTO_CARGO_MONEDA
,FN.VIA_COBRO
,FN.CARGO_PERIODO_COBRANZA
,FN.PERIODO_FECHA_INICIO
,FN.PERIODO_FECHA_FIN
,FN.PERIODO_RECAUDACION_DIA_FIN	
,FN.PERIODO_RECAUDACION_DIA_INICIO
,FN.FLAG_CARGO_RECUPERADO
)
SELECT 
         COB.*
        ,POL.ESTADO_POLIZA
        ,POL.FECHA_BAJA
        ,POL.CODMES_BAJA
        ,POL.COD_AGENTE_INICIAL
        ,POL.COD_AGENTE_FINAL
        ,POL.NOMBRE_PRODUCTO
        ,POL.ID_PRODUCTO
        ,POL.NOMBRE_GRUPO_PRODUCTO
        ,POL.FECHA_EMISION
        ,POL.CODMES_EMISION
        ,CAST(POL.PERIODO_RECAUDACION AS INT64) AS PERIODO_RECAUDACION
        ,POL.NOMBRES_CONTRATANTE
        ,POL.FECHA_NACIMIENTO_CONTRATANTE
        ,POL.COD_AGENCIA_FINAL
        ,POL.COD_USERNAME_AGENTE
        ,POL.NOMBRE_AGENTE_FINAL
        ,POL.MONEDA_PRIMA_NETA
        ,POL.PRIMA_NETA
        ,POL.ID_PERSONA
        ,POL.NUMERO_DOCUMENTO_CONTRATANTE
        ,POL.FRECUENCIA_PAGO
          --
        ,POL.F
        ,POL.M
        ,POL.R
        ,POL.SCORE_RFM
        ,POL.RECENCY
        ,POL.MONETARY_VALUE
        ,POL.FREQUENCY
        ,POL.CORREO_GERENTE
        ,POL.NOMBRE_GERENTE
       FROM TMP_TOTAL_POR_COBRAR_COBRADO COB
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_POLIZA_PERIODO` POL 
         ON SAFE_CAST(POL.NUMERO_POLIZA AS INT64) = SAFE_CAST(COB.NUMERO_POLIZA AS INT64)
);

-- ============================================================================================== --
-- |                    REPORTE VIDA NIVEL [ POLIZA - CARGO ]                                   | -- 
-- ============================================================================================== --
-- ----------------------------------------------------------------------
-- Paso A12: Eliminar la información del Periodo
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_COBRO` 
      WHERE  PERIODO_RECAUDACION =var_periodo_recaudacion ;

-- ----------------------------------------------------------------------
-- Paso A12: Cargar la Tabla Final con información del Periodo
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_COBRO` 
(
 NUMERO_POLIZA_INT
,NUMERO_POLIZA
,ID_CARGO
,NUMERO_CARGO
,CONCEPTO_CARGO
,CONCEPTO_CARGO_TIPO_INGRESO
,ESTADO_CARGO
,CARGO_FECHA_COBERTURA_INICIO
,CARGO_FECHA_COBERTURA_FIN
,MONTO_CARGO_MONEDA
,FRECUENCIA_PAGO
,PERIODO_FECHA_INICIO
,PERIODO_FECHA_FIN
,PERIODO_RECAUDACION_DIA_FIN
,PERIODO_RECAUDACION_DIA_INICIO
,CARGO_PERIODO_COBRANZA
,MONTO_CARGO_CANTIDAD_PEN
,MONTO_CARGO_CANTIDAD_USD
,SALDO_CANTIDAD_PEN
,SALDO_CANTIDAD_USD
,MONTO_RECAUDO_PEN
,MONTO_RECAUDO_USD
,MONTO_POR_COBRAR_PEN
,MONTO_POR_COBRAR_USD
,ESTADO_POLIZA
,FECHA_BAJA
,CODMES_BAJA
,COD_AGENTE_INICIAL
,COD_AGENTE_FINAL
,NOMBRE_PRODUCTO
,ID_PRODUCTO
,NOMBRE_GRUPO_PRODUCTO
,FECHA_EMISION
,CODMES_EMISION
,PERIODO_RECAUDACION
,ID_PERSONA
,COD_AGENCIA_FINAL
,PRIMA_NETA
,MONEDA_PRIMA_NETA
,COD_USERNAME_AGENTE
,NOMBRE_AGENTE_FINAL
,FECHA_NACIMIENTO_CONTRATANTE
,NOMBRES_CONTRATANTE
,NUMERO_DOCUMENTO_CONTRATANTE
,VIA_COBRO
,DIAS_IMPAGO
,CORREO_GERENTE
,NOMBRE_GERENTE
)
SELECT DISTINCT 
 NUMERO_POLIZA_INT
,NUMERO_POLIZA
,ID_CARGO
,NUMERO_CARGO
,CONCEPTO_CARGO
,CONCEPTO_CARGO_TIPO_INGRESO
,ESTADO_CARGO
,CARGO_FECHA_COBERTURA_INICIO
,CARGO_FECHA_COBERTURA_FIN
,MONTO_CARGO_MONEDA
,FRECUENCIA_PAGO
,PERIODO_FECHA_INICIO
,PERIODO_FECHA_FIN
,PERIODO_RECAUDACION_DIA_FIN
,PERIODO_RECAUDACION_DIA_INICIO
,CARGO_PERIODO_COBRANZA
,MONTO_CARGO_CANTIDAD_PEN
,MONTO_CARGO_CANTIDAD_USD
,SALDO_CANTIDAD_PEN
,SALDO_CANTIDAD_USD
,CASE WHEN UPPER(ESTADO_CARGO) NOT IN ('COMODIN') THEN MONTO_RECAUDO_PEN ELSE 0 END MONTO_RECAUDO_PEN
,CASE WHEN UPPER(ESTADO_CARGO) NOT IN ('COMODIN') THEN MONTO_RECAUDO_USD ELSE 0 END MONTO_RECAUDO_USD
,(CASE WHEN FLAG_CARGO_RECUPERADO=TRUE AND COALESCE(MONTO_POR_COBRAR_PEN,0) = 0 AND ESTADO_CARGO='ACTIVO' THEN MONTO_RECAUDO_PEN ELSE MONTO_POR_COBRAR_PEN END ) AS MONTO_POR_COBRAR_PEN
,(CASE WHEN FLAG_CARGO_RECUPERADO=TRUE AND COALESCE(MONTO_POR_COBRAR_USD,0) = 0 AND ESTADO_CARGO='ACTIVO' THEN MONTO_RECAUDO_USD ELSE MONTO_POR_COBRAR_USD END ) AS MONTO_POR_COBRAR_USD
,ESTADO_POLIZA
,FECHA_BAJA
,CODMES_BAJA
,COD_AGENTE_INICIAL
,COD_AGENTE_FINAL
,NOMBRE_PRODUCTO
,ID_PRODUCTO
,NOMBRE_GRUPO_PRODUCTO
,FECHA_EMISION
,CODMES_EMISION
,PERIODO_RECAUDACION
,ID_PERSONA
,COD_AGENCIA_FINAL
,PRIMA_NETA
,MONEDA_PRIMA_NETA
,COD_USERNAME_AGENTE
,NOMBRE_AGENTE_FINAL
,FECHA_NACIMIENTO_CONTRATANTE
,NOMBRES_CONTRATANTE
,NUMERO_DOCUMENTO_CONTRATANTE
,VIA_COBRO
,CASE WHEN ESTADO_CARGO = "ACTIVO" AND COALESCE(SALDO_CANTIDAD_USD,0) > 0
	THEN (CASE WHEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE, PERIODO_FECHA_FIN), CARGO_FECHA_COBERTURA_INICIO, DAY), 0) > 0
			THEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE, PERIODO_FECHA_FIN), CARGO_FECHA_COBERTURA_INICIO, DAY), 0)
			ELSE 0
		END)
	ELSE 0
END AS DIAS_IMPAGO
,CORREO_GERENTE
,NOMBRE_GERENTE
FROM `iter-data-storage-pv-uat.temp.TMP_COBVIDA_HM_POLIZA_CARGO_COBRO` ;

-- ============================================================================================== --
-- |                    REPORTE VIDA NIVEL [ POLIZA ]                                   | -- 
-- ============================================================================================== --

-- ----------------------------------------------------------------------
-- Paso A12: RESUMEN NIVEL POLIZA - ELIMINAR
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.goldenrecord_data.TB_COBRANZA_POLIZA_MDC` 
 WHERE PERIODO_COBRANZA=var_periodo_recaudacion;

-- ----------------------------------------------------------------------
-- Paso A12: RESUMEN NIVEL POLIZA
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.goldenrecord_data.TB_COBRANZA_POLIZA_MDC`
(
NUMERO_POLIZA
,ID_PRODUCTO
,NOMBRE_PRODUCTO
,NOMBRE_GRUPO_PRODUCTO
,FECHA_EMISION
,FECHA_INICIO_VIGENCIA
,FECHA_FIN_VIGENCIA
,MONEDA
,PRIMA_NETA
,FRECUENCIA_PAGO
,ESTADO
,NUMERO_DOCUMENTO
,TIPO_DOCUMENTO
,APELLIDO_PATERNO
,APELLIDO_MATERNO
,NOMBRE
,RAZON_SOCIAL
,FECHA_NACIMIENTO
,GENERO
,ESTADO_CIVIL
,EDAD
,CORREO_LN
,CORREO_UL
,TELEFONO_FIJO_LN
,TELEFONO_FIJO_LN_RECIENTE
,TELEFONO_MOVIL_LN
,TELEFONO_MOVIL_LN_RECIENTE
,MONTO_PAGO
,MONEDA_PAGO
,FECHA_PAGADO_HASTA
,VIA_COBRO
,FECHA_PAGO
,CANTIDAD_DIA_VENCIMIENTO
,MORA
,CUENTA_POR_COBRAR
,MOTIVO_RECHAZO
,PERIODO_COBRANZA
,MES_COBRANZA
,ANIO_COBRANZA
,COD_AGENTE_ACTUAL
,NOMBRES_AGENTE_ACTUAL
,AGENCIA_ACTUAL
,CORREO_AGENTE
,CARGO_AGENTE
,CELULAR_AGENTE
,SUPERVISOR_AGENTE
,SCORE
,ULTIMA_VIA_PAGO
,FECHA_ACTUALIZACION_TABLA
)
SELECT 
 NUMERO_POLIZA
,ID_PRODUCTO
,NOMBRE_PRODUCTO
,NOMBRE_GRUPO_PRODUCTO
,FECHA_EMISION
,FECHA_INICIO_VIGENCIA_POLIZA AS FECHA_INICIO_VIGENCIA
,FECHA_FIN_VIGENCIA_POLIZA AS FECHA_FIN_VIGENCIA
,MONEDA_PRIMA_NETA AS MONEDA
,CAST(PRIMA_NETA AS NUMERIC) AS PRIMA_NETA
,FRECUENCIA_PAGO
,ESTADO_POLIZA AS ESTADO
,NUMERO_DOCUMENTO_CONTRATANTE AS NUMERO_DOCUMENTO
,TIPO_DOCUMENTO_CONTRATANTE AS  TIPO_DOCUMENTO
,APELLIDO_PATERNO_CONTRATANTE AS APELLIDO_PATERNO
,APELLIDO_MATERNO_CONTRATANTE AS APELLIDO_MATERNO
,NOMBRE_CONTRATANTE AS NOMBRE
,RAZON_SOCIAL_CONTRATANTE AS RAZON_SOCIAL
,FECHA_NACIMIENTO_CONTRATANTE AS FECHA_NACIMIENTO
,'' AS GENERO
,'' AS ESTADO_CIVIL
,CAST(NULL AS INT64 ) AS EDAD
,CORREO_CONTRATANTE AS CORREO_LN
,CORREO_CONTRATANTE AS CORREO_UL
,TELEFONO AS TELEFONO_FIJO_LN
,TELEFONO AS TELEFONO_FIJO_LN_RECIENTE
,CELULAR_CONTRATANTE AS TELEFONO_MOVIL_LN
,CELULAR_CONTRATANTE AS TELEFONO_MOVIL_LN_RECIENTE
,CAST(SUM(IFNULL(MONTO_CANTIDAD_ABONO_USD,0))OVER(PARTITION BY NUMERO_POLIZA,PERIODO,TIPO_PERIODO) AS NUMERIC) AS MONTO_PAGO
,MONTO_CARGO_MONEDA AS MONEDA_PAGO
,FECHA_PAGADO_HASTA
,VIA_COBRO
,CAST(NULL AS DATE) AS FECHA_PAGO
,CAST(DIAS_IMPAGO AS INT64) AS CANTIDAD_DIA_VENCIMIENTO -- REVISAR
,COUNT(DISTINCT IF(DIAS_IMPAGO>0,NUMERO_CARGO,NULL))OVER(PARTITION BY NUMERO_POLIZA,PERIODO,TIPO_PERIODO) AS MORA
,CAST(SUM(IFNULL(MONTO_POR_COBRAR_USD,0))OVER(PARTITION BY NUMERO_POLIZA,PERIODO,TIPO_PERIODO) AS NUMERIC) AS CUENTA_POR_COBRAR
,MOTIVO_RECHAZO
,CAST(PERIODO AS NUMERIC ) AS PERIODO_COBRANZA
,FORMAT_DATE("%m",PARSE_DATE("%Y%m%d",CONCAT(CAST(PERIODO AS STRING),"01"))) AS MES_COBRANZA
,FORMAT_DATE("%Y",PARSE_DATE("%Y%m%d",CONCAT(CAST(PERIODO AS STRING),"01"))) AS ANIO_COBRANZA
,COD_AGENTE_FINAL    AS COD_AGENTE_ACTUAL
,NOMBRE_AGENTE_FINAL AS NOMBRES_AGENTE_ACTUAL
,COD_AGENCIA_FINAL   AS AGENCIA_ACTUAL
,CORREO_AGENTE_FINAL AS CORREO_AGENTE
,CODIGO_CONTRATO AS CARGO_AGENTE
,'' AS CELULAR_AGENTE
,NOMBRE_SUPERVISOR AS SUPERVISOR_AGENTE
,CAST(0 AS NUMERIC) AS SCORE
,NUMERO_VIA_PAGO AS ULTIMA_VIA_PAGO
,FORMAT_DATETIME('%Y-%m-%d %H:%M:%S',CURRENT_DATETIME('America/Lima')) AS FECHA_ACTUALIZACION_TABLA
    FROM `iter-data-storage-pv-uat.goldenrecord_data.HM_POLIZA_CARGO_VIDA`
   WHERE PERIODO =var_periodo_recaudacion
 QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA,PERIODO,TIPO_PERIODO ORDER BY CARGO_FECHA_COBERTURA_INICIO DESC ))=1
;

-- ----------------------------------------------------------------------
-- Paso A12: Eliminar tablas temporales nativas creados en el proceso
-- ----------------------------------------------------------------------
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_POLIZA_PERIODO` ;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_PERIODO` ;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_PRIMERA_PRIMA` ;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COBVIDA_UNIVERSO_CARGOS_DEVOLUCION` ;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COBVIDA_HM_POLIZA_CARGO_COBRO` ;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PERIODO_RECAUDACION_CALENDARIO_COB` ;

END;