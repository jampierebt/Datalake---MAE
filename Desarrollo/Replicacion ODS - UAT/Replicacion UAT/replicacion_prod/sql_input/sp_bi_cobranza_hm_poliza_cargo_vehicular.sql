CREATE OR REPLACE PROCEDURE `iter-data-storage-pv-uat`.programs.sp_bi_cobranza_hm_poliza_cargo_vehicular(par_periodo INT64)
OPTIONS(
  strict_mode=true)
BEGIN
-- *********************************************************************
-- * Proyecto       : GOLDEN RECORD
-- * Fecha          : 07/10/2021
-- * Autor          : Ramirez Hurtado, Tito Jaime
-- * Tabla Destinos : - 
-- *                : - 
-- * Tablas Fuentes : - 
-- * Descripción    :  
-- *********************************************************************
-- *                       MODIFICACIONES POSTERIORES                  *
-- *===================================================================*
-- *===================================================================*
-- *   Fecha   | Persona |           Modificación Realizada            *
-- *           |         |                                            
-- *********************************************************************
-- ----------------------------------------------------------------------
-- Paso A10: VARIABLES GLOBALES
-- ----------------------------------------------------------------------
-- CALENDARIO  : Considerado de 1 al último día del mes. 
-- RECAUDACION : Considerado del 21 a 20 de cada mes.
DECLARE var_periodo_recaudacion INT64;
DECLARE var_periodo_calendario INT64;

IF par_periodo IS NULL THEN

-- Variable periodo recaudacion
SET var_periodo_calendario = ( SELECT   MAX(CAST(PERIODO AS INT64))  FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_PERIODO_CALENDARIO`
WHERE CURRENT_DATE BETWEEN PERIODO_DIA_INICIO  AND PERIODO_DIA_FIN ) ;

ELSE 
-- Variable periodo recaudacion
SET var_periodo_calendario = par_periodo ;

END IF
;
-- ----------------------------------------------------------------------
-- Paso A10: Tipo de cambio del ultimo dia anterior
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_POLIZA_TIPO_CAMBIO_VEH_ULT`
AS
( 
SELECT
    MONTO_TIPO_CAMBIO
   ,FECHA AS TIPO_CAMBIO_ULTIMO_DIA_ANT
 FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_TIPO_CAMBIO_CONTABLE`
WHERE FRECUENCIA = 'DIARIO'
  AND MONEDA ='USD'
  AND PERIODO = CAST(FORMAT_DATE("%Y%m",DATE_SUB(PARSE_DATE("%Y%m%d",CONCAT(CAST( var_periodo_calendario AS STRING),"01")),INTERVAL 1 MONTH)) AS INT64) /*202111*/
  QUALIFY(ROW_NUMBER() OVER(PARTITION BY PERIODO ORDER BY FECHA DESC )) = 1
)
;

-- ----------------------------------------------------------------------
-- Paso A10: Polizas que tiene problemas con sus primeros cargos, al migrar al nuevo modelo SAMP no se migragron completo sus cargos.
--           por eso se tiene que quitar de la validacion de primeros cargos.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PAG_POLIZAS_ERROR_PRIMERAS_PRIMA`
AS
WITH TMP_POLIZA  AS
(
    SELECT
     FECHA_INICIO
    ,NUMERO_POLIZA
    ,INDRENOVACIONINPUT AS INDICADOR_RENOVACION
    FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA`
    WHERE NOMBRE_GRUPO_PRODUCTO= 'VEHICULAR'
)
,TMP_PRIMER_CARGO AS 
(
SELECT 
     CARGO_FECHA_COBERTURA_INICIO
    ,NUMERO_POLIZA 
    ,NUMERO_CARGO
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO`
WHERE ESTADO_CARGO!='SIN CARGO'
AND NOMBRE_GRUPO_PRODUCTO='VEHICULAR'
QUALIFY (ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ORDER BY CARGO_FECHA_COBERTURA_INICIO ASC)) = 1
)
SELECT DISTINCT POL.NUMERO_POLIZA
       FROM TMP_POLIZA POL 
  INNER JOIN TMP_PRIMER_CARGO CAR 
         ON POL.NUMERO_POLIZA  =CAR.NUMERO_POLIZA
WHERE DATE_DIFF(CAR.CARGO_FECHA_COBERTURA_INICIO, FECHA_INICIO, MONTH) !=0
;

-- ----------------------------------------------------------------------
-- pre
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PRIMERA_PRIMA_TOTAL`
AS
(
SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_VEHICULO` WHERE INDICADOR_RENOVACION='SI'   --> Polizas de renovacion no se evaluan su primer cargo, porque ya pasaron 12 meses o mas desde su compra.
UNION ALL 
SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.temp.TMP_PAG_POLIZAS_ERROR_PRIMERAS_PRIMA`  --> Polizas con Error de primer cargo, no se evaluan.
-- Polizas que no se deben filtrar sus primeros cargos
UNION ALL 
SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.samp_data.AFILIACION_DIGITAL_SAMP_raw` WHERE AFI_TIPO_OPERACION ='3'
);

-- ----------------------------------------------------------------------
-- Paso A10: Universo de cargos de PRIMERA PRIMA, no se considera en el proceso de cobranza tanto para el tipo CALENDARIO y RECAUDACION
--           Polizas de Vehicular con Renovación no filtrar su primera prima.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_PAG_CARGO_PRIMERA_PRIMA`
AS
SELECT  NUMERO_POLIZA
       ,NUMERO_CARGO
       ,CORRELATIVO_CARGO
       ,CORRELATIVO_POLIZA
       ,CARGO_FECHA_COBERTURA_INICIO
       ,ESTADO_CARGO
FROM 
(SELECT CAR.NUMERO_POLIZA
       ,CAR.NUMERO_CARGO
       ,ROW_NUMBER() OVER(PARTITION BY CAR.NUMERO_POLIZA ,CAR.NUMERO_CARGO ORDER BY CAR.CARGO_FECHA_COBERTURA_INICIO ASC ) AS CORRELATIVO_CARGO
       ,ROW_NUMBER() OVER(PARTITION BY CAR.NUMERO_POLIZA  ORDER BY CAR.CARGO_FECHA_COBERTURA_INICIO ASC ) AS CORRELATIVO_POLIZA
       ,CAR.CARGO_FECHA_COBERTURA_INICIO
       ,CAR.ESTADO_CARGO
  FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL ON POL.NUMERO_POLIZA=CAR.NUMERO_POLIZA
 WHERE CAR.NOMBRE_GRUPO_PRODUCTO='VEHICULAR'
   AND CAR.ESTADO_CARGO != 'SIN CARGO'
   AND NOT EXISTS (SELECT 1 FROM  `iter-data-storage-pv-uat.temp.TMP_PRIMERA_PRIMA_TOTAL` CNS WHERE CNS.NUMERO_POLIZA = CAR.NUMERO_POLIZA )
--   AND NUMERO_POLIZA NOT IN ( SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.temp.TMP_PAG_POLIZAS_ERROR_PRIMERAS_PRIMA` ) --> Polizas con Error de primer cargo, no se evaluan.
  -- Polizas que no se deben filtrar sus primeros cargos
--   AND NUMERO_POLIZA NOT IN ( SELECT NUMERO_POLIZA FROM `iter-data-storage-pv-uat.samp_data.AFILIACION_DIGITAL_SAMP_raw` WHERE AFI_TIPO_OPERACION ='3')
)
WHERE CORRELATIVO_CARGO  = 1
  AND CORRELATIVO_POLIZA = 1 
;
-- ====================================================================================================================================
-- ====================================================================================================================================
-- ||                                           PERIODO - CALENDARIO(1-31)                                                             ||
-- ====================================================================================================================================
-- ====================================================================================================================================
-- ----------------------------------------------------------------------
-- Paso A11: Universo de Polizas/Contratante y sus atributos
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIVERSO_POLIZAS_VEH`
AS
WITH V_MD_PERSONA AS (
    SELECT HASH_ID
    ,LOWER(CORREO) CORREO
    ,LOWER(CORREO) AS CORREO_VEHICULAR
    ,CELULAR AS CELULAR_VEHICULAR
    ,CELULAR
    FROM `iter-data-storage-pv-uat.master_party.V_MD_PERSONA`
),


TMP_PERIODO_ACTUAL AS (
    SELECT 
         PERIODO
        ,PERIODO_DIA_INICIO AS PERIODO_RECAUDACION_DIA_INICIO
        ,PERIODO_DIA_FIN    AS PERIODO_RECAUDACION_DIA_FIN
    FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_PERIODO_CALENDARIO`
    WHERE PERIODO =var_periodo_calendario
)


SELECT 
 POL.NUMERO_POLIZA
,POL.NOMBRE_GRUPO_PRODUCTO
,POL.NOMBRE_PRODUCTO
,VEH.NUMERO_PLACA
,POL.ESTADO AS ESTADO_POLIZA
,POL.CANAL
,POL.PLAN
,VEH.MODELO_VEHICULO
,VEH.MARCA_VEHICULO
,CON.NUMERO_DOCUMENTO
,CON.TIPO_DOCUMENTO
,COALESCE(CONCAT(IFNULL(CON.APELLIDO_PATERNO,'')," ",IFNULL(CON.APELLIDO_MATERNO,'')," ",IFNULL(CON.NOMBRE,'')),CON.RAZON_SOCIAL) AS NOMBRE_CONTRATANTE
,VEH.INDICADOR_RENOVACION
,POL.FECHA_INICIO AS FECHA_INICIO_VIGENCIA_POLIZA
,POL.FECHA_FIN  AS FECHA_FIN_VIGENCIA_POLIZA
,PERS.CORREO 
,PERS.CELULAR
,POL.MONEDA
,POL.VIGENCIA
,COALESCE(FECHA_CADUCADA,FECHA_PRORROGADO,FECHA_ANULADA,FECHA_RESCATADO,FECHA_SUSPENDIDA,FECHA_SALDADA,FECHA_TERMINADO,FECHA_CANCELACION ) AS FECHA_BAJA
,CAST(FORMAT_DATE("%Y%m",COALESCE(FECHA_CADUCADA,FECHA_PRORROGADO,FECHA_ANULADA,FECHA_RESCATADO,FECHA_SUSPENDIDA,FECHA_SALDADA,FECHA_TERMINADO,FECHA_CANCELACION )) AS INT64) AS CODMES_BAJA
,POL.FRECUENCIA_PAGO
,SAFE.PARSE_DATE("%Y-%m-%d",VEH.FECHA_VENTA) AS FECHA_VENTA
,DATE_DIFF(CURRENT_DATE,SAFE.PARSE_DATE("%Y-%m-%d",VEH.FECHA_VENTA),  MONTH) AS ANTIGUEDAD
,PERS.CORREO_VEHICULAR
,PERS.CELULAR_VEHICULAR
,VEH.CORREO_CONTACTO
,VEH.CELULAR_CONTACTO
,CON.NOMBRE
,CON.APELLIDO_PATERNO
,CON.APELLIDO_MATERNO
,CON.RAZON_SOCIAL 
-- SEGMENTO
,RFM.F
,RFM.M
,RFM.R
,RFM.SCORE_RFM
,RFM.RECENCY
,RFM.MONETARY_VALUE
,RFM.FREQUENCY
--AGENCIA
,CAST(AGE.COD_AGENCIA_FINAL AS STRING) AS CODIGO_AGENCIA
,CAST(AGE.COD_AGENTE_FINAL AS STRING)  AS CODIGO_AGENTE
,AGE.NOMBRE_AGENTE_FINAL               AS NOMBRE_AGENTE
,AGE.SUPERVISOR_AGENTE_FINAL           AS NOMBRE_SUPERVISOR
,AGE.JEFE_AGENTE_FINAL                 AS NOMBRE_JEFE
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL
INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` CON 
        ON CON.ID_PERSONA    = POL.ID_PERSONA
INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_VEHICULO` VEH
        ON VEH.NUMERO_POLIZA = POL.NUMERO_POLIZA
LEFT JOIN V_MD_PERSONA PERS ON PERS.HASH_ID = CON.HASH_ID 
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_AGENTE` AGE
        ON AGE.NUMERO_POLIZA = POL.NUMERO_POLIZA 
       AND AGE.ID_PRODUCTO = POL.ID_PRODUCTO
-- SEGMENTO
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.PERSONA_SEGMENTACION_RFM`  RFM 
        ON RFM.ID_PERSONA = CON.ID_PERSONA
CROSS JOIN TMP_PERIODO_ACTUAL PER
     WHERE POL.NOMBRE_GRUPO_PRODUCTO='VEHICULAR'
      AND (POL.ESTADO= 'VIGENTE'
       OR COALESCE(  POL.FECHA_CANCELACION
      ,POL.FECHA_TERMINADO
      ,POL.FECHA_CADUCADA
      ,POL.FECHA_PRORROGADO
      ,POL.FECHA_ANULADA
      ,POL.FECHA_RESCATADO
      ,POL.FECHA_SUSPENDIDA
      ,POL.FECHA_SALDADA
      ) >= PER.PERIODO_RECAUDACION_DIA_INICIO )
       AND POL.FECHA_EMISION <= PER.PERIODO_RECAUDACION_DIA_FIN
;

-- ----------------------------------------------------------------------
-- Paso A10: RECHAZOS , PAGOS DE LAS CUOTAS., EL ULTIMO INTENTO POR POLIZAS Y CUOTA/CARGO en el rango del periodo del corte del periodo.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP`
AS 
(
WITH TMP_PERIODO_ACTUAL AS
(
    SELECT 
         PERIODO
        ,PERIODO_DIA_INICIO AS PERIODO_RECAUDACION_DIA_INICIO
        ,PERIODO_DIA_FIN    AS PERIODO_RECAUDACION_DIA_FIN
    FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_PERIODO_CALENDARIO`
    WHERE PERIODO =var_periodo_calendario
)
SELECT NUMERO_POLIZA
        ,(CASE WHEN TRIM(MOTIVO_RECHAZO)='' THEN 'TRANSACCIÓN DENEGADA A/D' ELSE MOTIVO_RECHAZO END) AS MOTIVO_RECHAZO
        ,TIPO_TARJETA
        ,NUMERO_TARJETA_ENCRYP
        ,TIPO_ENTIDAD			
        ,NOMBRE_TARJETA
        ,BIN_TARJETA
        ,EMISOR
        ,FECHA_VENCIMIENTO_CUOTA
        ,DATE(FORMAT_DATETIME('%Y-%m-%d', TIMESTAMP(FECHA_VENCIMIENTO_CUOTA),'America/Lima')) AS FECHA_VENCIMIENTO_CUOTA_DATE
        ,ESTADO_TRANSACCION
        ,FECHA_TRANSACCION
        ,ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA,FECHA_VENCIMIENTO_CUOTA ORDER BY FECHA_TRANSACCION DESC) AS ULTIMO_INTENTO_POR_CUOTA
        ,ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ORDER BY FECHA_TRANSACCION DESC ) AS CORRELATIVO_INTENTOS
        ,IF(MOTIVO_RECHAZO='OK',NULL,ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA,(CASE WHEN MOTIVO_RECHAZO!='OK' THEN 1 ELSE 0 END) ORDER BY FECHA_TRANSACCION DESC)) AS CORRELATIVO_INTENTOS_RECHAZOS
        ,OPERADOR
        ,PASARELA
    FROM `iter-data-storage-pv-uat.bi_cobranza.DV_RECHAZOS` REC 
  CROSS JOIN TMP_PERIODO_ACTUAL ACT
    WHERE NOMBRE_PRODUCTO IN ('SEGUROVEHICULARMODULAR','SEGUROVEHICULAR')
      AND DATE(REC.FECHA_TRANSACCION) <=ACT.PERIODO_RECAUDACION_DIA_FIN
QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA,FECHA_VENCIMIENTO_CUOTA ORDER BY FECHA_TRANSACCION DESC ))=1
);

-- ----------------------------------------------------------------------
-- Paso A12: PERIODO-CALENDARIO :  DATOS DE PAGOS PARA CARGOS FUTUROS NIVEL POLIZA.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A`
AS 
(
SELECT * 
from `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP`
where ESTADO_TRANSACCION ='S'
QUALIFY(ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ORDER BY FECHA_TRANSACCION DESC))=1
);
-- ----------------------------------------------------------------------
-- Paso A12: PERIODO-CALENDARIO :  MORA-CUOTA
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_CUOTAMORA`
AS
(
SELECT
  NUMERO_POLIZA 
 ,ID_CARGO
 ,ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY CARGO_FECHA_COBERTURA_INICIO ASC ) AS NUMERO_CUOTA
 ,FLAG_PAGOTOTAL_CARGO
 ,CASE WHEN FLAG_PAGOTOTAL_CARGO=False AND CARGO_FECHA_COBERTURA_INICIO <= CURRENT_DATE AND ESTADO_CARGO='ACTIVO'
       THEN DATE_DIFF( CURRENT_DATE,CARGO_FECHA_COBERTURA_INICIO,DAY) 
       ELSE 0 END AS DIAS_IMPAGO 
    ,CARGO_FECHA_COBERTURA_INICIO
FROM 
(
SELECT NUMERO_POLIZA
      ,ID_CARGO
      ,CARGO_FECHA_COBERTURA_INICIO
      ,ESTADO_CARGO
      ,CASE WHEN SUM(SALDO_CANTIDAD) <> 0 THEN False ELSE True  END AS FLAG_PAGOTOTAL_CARGO
 FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` 
  WHERE NOMBRE_GRUPO_PRODUCTO ='VEHICULAR'
GROUP BY NUMERO_POLIZA,ID_CARGO,CARGO_FECHA_COBERTURA_INICIO,ESTADO_CARGO
)
)
;

-- ----------------------------------------------------------------------
-- Paso A11: Universo de Cargos del Producto VEHICULAR, TODA LA HISTORIA.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNI_PAG_CARGOS_VEHICULAR`
AS
WITH TMP_PERIODO_ACTUAL AS
(
 SELECT  PERIODO AS PERIODO_RECAUDACION
        ,PERIODO_DIA_INICIO AS PERIODO_RECAUDACION_DIA_INICIO
        ,PERIODO_DIA_FIN    AS PERIODO_RECAUDACION_DIA_FIN
        --,DATE_SUB(PERIODO_DIA_INICIO,INTERVAL 3 MONTH)  AS PERIODO_FECHA_INICIO
        ,DATE_SUB(PERIODO_DIA_INICIO,INTERVAL 3 MONTH)  AS PERIODO_DIA_INICIO_4M
        ,PERIODO_DIA_FIN AS PERIODO_FECHA_FIN
        ,PERIODO_DESCRIPCION_ABREVIADO
   FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_PERIODO_CALENDARIO`
  WHERE PERIODO= var_periodo_calendario 
)

,TMP_TIPO_CAMBIO_MES_ANTERIOR AS 
(
SELECT
         MONTO_TIPO_CAMBIO
        ,PERIODO
        ,FECHA
  FROM `iter-data-storage-pv-uat.goldenrecord_data.DIM_TIPO_CAMBIO_CONTABLE`
 WHERE FECHA =DATE_SUB(PARSE_DATE("%Y%m%d",CONCAT(CAST(var_periodo_calendario AS STRING),'01')),INTERVAL 1 MONTH) 
   AND FRECUENCIA ='MENSUAL'
)
 SELECT -- -------------------------------------
        -- DATOS DE LA POLIZA
        -- -------------------------------------
         CAR.NUMERO_POLIZA_INT
        ,CAR.NOMBRE_PRODUCTO
        ,CAR.NOMBRE_GRUPO_PRODUCTO
        ,CAR.ID_PRODUCTO
        ,CAR.NUMERO_POLIZA
        ,CAR.FRECUENCIA_PAGO
      -- -------------------------------------
      -- DEVOLUCIONES ID DE DEVOLUCIONES EN EL PERIODO
      -- -------------------------------------
        --,CAR.ID_DEVOLUCION
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       CAR.ID_DEVOLUCION
                   ELSE 0
                   END
         ) AS ID_DEVOLUCION
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_PEN_PERIODO
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_USD_PERIODO 
      -- -------------------------------------
      -- CARGOS - POR COBRAR
      -- -------------------------------------
        ,CAR.ID_CARGO
        ,CAR.NUMERO_CARGO
        ,CAR.CONCEPTO_CARGO
        ,CAR.CONCEPTO_CARGO_TIPO_INGRESO
        ,CAR.ESTADO_CARGO
        ,CAR.CARGO_FECHA_COBERTURA_INICIO
        ,CAR.CARGO_FECHA_COBERTURA_FIN
        ,CAR.MONTO_CARGO_CANTIDAD
        ,CAR.MONTO_CARGO_MONEDA
        ,CAR.CARGO_PERIODO_COBRANZA
        ,CAR.SALDO_CANTIDAD
        ,CAR.SALDO_MONEDA
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_PEN
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_USD
        ,CAR.VIA_COBRO
      -- -------------------------------------
      -- ABONOS - PAGOS
      -- -------------------------------------
        ,COALESCE(CAR.ID_ABONO,'0') AS ID_ABONO
        ,COALESCE(CAR.NUMERO_ABONO,0) AS NUMERO_ABONO
        ,COALESCE(CAR.MONTO_CANTIDAD,0) AS MONTO_CANTIDAD
        ,CAR.FECHA_REGISTRO_CAJA 
        ,DATETIME(CAR.FECHA_REGISTRO_CAJA,'America/Lima') AS FECHA_REGISTRO_CAJA_PERU
        ,CAR.FECHA_REGISTRO_ABONO
        ,CAR.FECHA_APLICADO_CARGO_ABONO
        ,CAR.NUM_VIA_PAGO_COBRO AS NUMERO_VIA_PAGO
        ,CAR.ESTADO_ABONO
       --RECAUDO DEL PERIODO: Todos los Pagos realizados en el RANGO DEL PERIODO en USD  y PEN
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_PEN_PERIODO
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_USD_PERIODO 

        -- Pago posterior al ultimo dia del periodo ..??
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_ULTIMO_DIA_PERIODO
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO 
            
        --SALDO POR COBRAR PAGADO POSTERIOR AL PRIMER DIA DEL PERIODO : MONTOS CONSIRAR COMO POR COBRAR EN EL PERIODO ACTUAL, PORQUE SON PAGOS POSTERIORES AL PRIMER DIA DEL PERIODO(PARA REPROCESOS)
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO --> SI ESTE MONTO ES MAYOR A CERO Y SALDO EES MAYOR A CERO, ENTONCES, ES UN MONTO POR COBRAR.
      
       -- SALDO POR COBRAR QUE AUN NO SE PAGO: Monto Pendiente de Pago Primero se evalua se el saldo es igual al monto pagado. hay polizas con estos casos.
       ,(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
             THEN 0
             ELSE (CASE WHEN CAR.SALDO_MONEDA='PEN'
                        THEN CAR.SALDO_CANTIDAD 
                        ELSE CAR.SALDO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO 
                   END)
          END) AS SALDO_CANTIDAD_PEN -- si el saldo es mayor a cero, tambien es una cuenta por cobrar.
       ,(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
              THEN 0
              ELSE
                 (CASE WHEN CAR.SALDO_MONEDA='USD' 
                       THEN CAR.SALDO_CANTIDAD 
                       ELSE CAR.SALDO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO 
                  END)
         END) AS SALDO_CANTIDAD_USD
      -- -------------------------------------
      -- DATOS DEL PERIODO DE COBRANZA
      -- -------------------------------------
        ,PER.PERIODO_DIA_INICIO_4M
        ,PER.PERIODO_FECHA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_INICIO
        ,PER.PERIODO_RECAUDACION
        ,PER.PERIODO_DESCRIPCION_ABREVIADO
       -- ,PER.PERIODO_FECHA_COBERTURA_INICIO
     -- -------------------------------------
     -- DATOS DEL TIPO DE CAMBIO DEL PERIODO
     -- -------------------------------------
        ,TIP.MONTO_TIPO_CAMBIO
     -- -------------------------------------
     -- PARA POLIZAS CON CARGOS QUE CAMBIARON SU FRENCUENCIA
     -- -------------------------------------
        ,MAX(CASE WHEN CAR.ESTADO_CARGO='ACTIVO' THEN 1 ELSE 0 END)OVER(PARTITION BY CAR.NUMERO_POLIZA,FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_INICIO) )  AS FLAG_CARGO_ACTIVO_PERIODO
        ,ROW_NUMBER()OVER(PARTITION BY CAR.NUMERO_POLIZA, FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_INICIO) ORDER BY CAR.CARGO_FECHA_COBERTURA_INICIO ASC)  AS CORRELATIVO_CARGOS
    -- ------------------------------------------------------------------------------
    -- FILTRO PARA CONSIDERAR LOS CARGOS POR COBRAR EN EL PERIODO
    -- ------------------------------------------------------------------------------
    --PAGOS EN PERIODO
     ,(CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
        THEN True 
        ELSE False
      END ) AS FLAG_PAGO_EN_PERIODO
    -- CARGOS DE LOS ULTIMOS 4 PERIODOS
    ,(CASE WHEN (CAR.CARGO_FECHA_COBERTURA_INICIO <= PER.PERIODO_RECAUDACION_DIA_FIN 
       AND CAR.CARGO_FECHA_COBERTURA_INICIO >= PER.PERIODO_DIA_INICIO_4M)
       THEN True 
       ELSE False
       END ) AS FLAG_CARGO_COBRAR_PERIODO
    -- PAGOS POSTERIOR AL ULTIMO DIA DE COBRANZA... 31 O 20
    ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN  THEN True ELSE False END) AS FLAG_PAGO_POSTERIOR_AL_PERIODO
    -- FLAG DEVOLUCIONES EN EL MES
    ,(CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN 
                    AND COALESCE(CAR.ID_DEVOLUCION,0)!=0) 
                AND MAX(CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)=0 THEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) END )OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
           THEN TRUE 
    ELSE FALSE 
    END ) AS FLAG_DEVOLUCION_PERIODO
    ,POL.CANAL
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR
  INNER JOIN  `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL 
  ON CAR.NUMERO_POLIZA=POL.NUMERO_POLIZA
CROSS JOIN TMP_PERIODO_ACTUAL PER
CROSS JOIN TMP_TIPO_CAMBIO_MES_ANTERIOR TIP
     WHERE CAR.NOMBRE_GRUPO_PRODUCTO='VEHICULAR'
       AND CAR.ESTADO_CARGO NOT IN ("SIN CARGO")
       -- FILTRAR PRIMERAS PRIMERAS
       AND CAR.NUMERO_CARGO NOT IN ( SELECT NUMERO_CARGO FROM `iter-data-storage-pv-uat.temp.TMP_PAG_CARGO_PRIMERA_PRIMA` )
AND IFNULL(POL.CANAL,'')  NOT IN ('BROKERS')



 UNION ALL

SELECT -- -------------------------------------
        -- DATOS DE LA POLIZA
        -- -------------------------------------
         CAR.NUMERO_POLIZA_INT
        ,CAR.NOMBRE_PRODUCTO
        ,CAR.NOMBRE_GRUPO_PRODUCTO
        ,CAR.ID_PRODUCTO
        ,CAR.NUMERO_POLIZA
        ,CAR.FRECUENCIA_PAGO
      -- -------------------------------------
      -- DEVOLUCIONES ID DE DEVOLUCIONES EN EL PERIODO
      -- -------------------------------------
        --,CAR.ID_DEVOLUCION
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       CAR.ID_DEVOLUCION
                   ELSE 0
                   END
         ) AS ID_DEVOLUCION
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_PEN_PERIODO
        ,( CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN
                        AND COALESCE(CAR.ID_DEVOLUCION,0)!=0)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_DEVOLUCION_USD_PERIODO 
      -- -------------------------------------
      -- CARGOS - POR COBRAR
      -- -------------------------------------
        ,CAR.ID_CARGO
        ,CAR.NUMERO_CARGO
        ,CAR.CONCEPTO_CARGO
        ,CAR.CONCEPTO_CARGO_TIPO_INGRESO
        ,CAR.ESTADO_CARGO
        ,CAR.CARGO_FECHA_COBERTURA_INICIO
        ,CAR.CARGO_FECHA_COBERTURA_FIN
        ,CAR.MONTO_CARGO_CANTIDAD
        ,CAR.MONTO_CARGO_MONEDA
        ,CAR.CARGO_PERIODO_COBRANZA
        ,CAR.SALDO_CANTIDAD
        ,CAR.SALDO_MONEDA
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_PEN
        ,(CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CARGO_CANTIDAD ELSE CAR.MONTO_CARGO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END) AS MONTO_CARGO_CANTIDAD_USD
        ,CAR.VIA_COBRO
      -- -------------------------------------
      -- ABONOS - PAGOS
      -- -------------------------------------
        ,COALESCE(CAR.ID_ABONO,'0') AS ID_ABONO
        ,COALESCE(CAR.NUMERO_ABONO,0) AS NUMERO_ABONO
        ,COALESCE(CAR.MONTO_CANTIDAD,0) AS MONTO_CANTIDAD
        ,CAR.FECHA_REGISTRO_CAJA 
        ,DATETIME(CAR.FECHA_REGISTRO_CAJA,'America/Lima') AS FECHA_REGISTRO_CAJA_PERU
        ,CAR.FECHA_REGISTRO_ABONO
        ,CAR.FECHA_APLICADO_CARGO_ABONO
        ,CAR.NUM_VIA_PAGO_COBRO AS NUMERO_VIA_PAGO
        ,CAR.ESTADO_ABONO
       --RECAUDO DEL PERIODO: Todos los Pagos realizados en el RANGO DEL PERIODO en USD  y PEN
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN  
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_PEN_PERIODO
        ,( CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
                   THEN 
                       (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                   ELSE 0
                   END
            ) AS MONTO_PAGO_USD_PERIODO 

        -- Pago posterior al ultimo dia del periodo ..??
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_ULTIMO_DIA_PERIODO
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO 
            
        --SALDO POR COBRAR PAGADO POSTERIOR AL PRIMER DIA DEL PERIODO : MONTOS CONSIRAR COMO POR COBRAR EN EL PERIODO ACTUAL, PORQUE SON PAGOS POSTERIORES AL PRIMER DIA DEL PERIODO(PARA REPROCESOS)
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO
        ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO 
                  THEN (CASE WHEN CAR.MONTO_CARGO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO END)
                  ELSE 0
            END) AS MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO --> SI ESTE MONTO ES MAYOR A CERO Y SALDO EES MAYOR A CERO, ENTONCES, ES UN MONTO POR COBRAR.
      
       -- SALDO POR COBRAR QUE AUN NO SE PAGO: Monto Pendiente de Pago Primero se evalua se el saldo es igual al monto pagado. hay polizas con estos casos.
       ,(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
             THEN 0
             ELSE (CASE WHEN CAR.SALDO_MONEDA='PEN'
                        THEN CAR.SALDO_CANTIDAD 
                        ELSE CAR.SALDO_CANTIDAD*TIP.MONTO_TIPO_CAMBIO 
                   END)
          END) AS SALDO_CANTIDAD_PEN -- si el saldo es mayor a cero, tambien es una cuenta por cobrar.
       ,(CASE WHEN COALESCE(CAR.MONTO_CANTIDAD,0)>0 AND CAR.SALDO_CANTIDAD=COALESCE(CAR.MONTO_CANTIDAD,0)
              THEN 0
              ELSE
                 (CASE WHEN CAR.SALDO_MONEDA='USD' 
                       THEN CAR.SALDO_CANTIDAD 
                       ELSE CAR.SALDO_CANTIDAD/TIP.MONTO_TIPO_CAMBIO 
                  END)
         END) AS SALDO_CANTIDAD_USD
      -- -------------------------------------
      -- DATOS DEL PERIODO DE COBRANZA
      -- -------------------------------------
        ,PER.PERIODO_DIA_INICIO_4M
        ,PER.PERIODO_FECHA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_FIN
        ,PER.PERIODO_RECAUDACION_DIA_INICIO
        ,PER.PERIODO_RECAUDACION
        ,PER.PERIODO_DESCRIPCION_ABREVIADO
       -- ,PER.PERIODO_FECHA_COBERTURA_INICIO
     -- -------------------------------------
     -- DATOS DEL TIPO DE CAMBIO DEL PERIODO
     -- -------------------------------------
        ,TIP.MONTO_TIPO_CAMBIO
     -- -------------------------------------
     -- PARA POLIZAS CON CARGOS QUE CAMBIARON SU FRENCUENCIA
     -- -------------------------------------
        ,MAX(CASE WHEN CAR.ESTADO_CARGO='ACTIVO' THEN 1 ELSE 0 END)OVER(PARTITION BY CAR.NUMERO_POLIZA,FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_FIN) )  AS FLAG_CARGO_ACTIVO_PERIODO ---- CARGO_FECHA_COBERTURA_FIN
        ,ROW_NUMBER()OVER(PARTITION BY CAR.NUMERO_POLIZA, FORMAT_DATE("%Y%m",CAR.CARGO_FECHA_COBERTURA_FIN) ORDER BY CAR.CARGO_FECHA_COBERTURA_FIN ASC)  AS CORRELATIVO_CARGOS  ---- CARGO_FECHA_COBERTURA_FIN
    -- ------------------------------------------------------------------------------
    -- FILTRO PARA CONSIDERAR LOS CARGOS POR COBRAR EN EL PERIODO
    -- ------------------------------------------------------------------------------
    --PAGOS EN PERIODO

     ,(CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_RECAUDACION_DIA_INICIO
                        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_RECAUDACION_DIA_FIN)
        THEN True 
        ELSE False
      END ) AS FLAG_PAGO_EN_PERIODO --EN ESTE CASO LO QUE HACE ES VER SI LA FECHA_APLICADO_CARGO_ABONO SE ENCUENTRA EN EL RANGO DEL PERIODO 01-31
    ,(CASE WHEN (CAR.CARGO_FECHA_COBERTURA_FIN <= PER.PERIODO_RECAUDACION_DIA_FIN    ---- CARGO_FECHA_COBERTURA_FIN
       AND CAR.CARGO_FECHA_COBERTURA_FIN >= PER.PERIODO_DIA_INICIO_4M)    ---- CARGO_FECHA_COBERTURA_FIN
       THEN True 
       ELSE False
       END ) AS FLAG_CARGO_COBRAR_PERIODO --FLAG A MODIFICAR 
    ,(CASE WHEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_RECAUDACION_DIA_FIN  THEN True ELSE False END) AS FLAG_PAGO_POSTERIOR_AL_PERIODO -- FLAG A MODIFICAR
    ,(CASE WHEN (DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) >= PER.PERIODO_RECAUDACION_DIA_INICIO AND DATE( CAR.FECHA_APLICADO_CARGO_ABONO ) <= PER.PERIODO_RECAUDACION_DIA_FIN 
                    AND COALESCE(CAR.ID_DEVOLUCION,0)!=0) 
                AND MAX(CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)=0 THEN DATE(CAR.FECHA_APLICADO_CARGO_ABONO) END )OVER(PARTITION BY CAR.NUMERO_POLIZA,CAR.NUMERO_CARGO) BETWEEN PER.PERIODO_RECAUDACION_DIA_INICIO AND PER.PERIODO_RECAUDACION_DIA_FIN
           THEN TRUE 
    ELSE FALSE 
    END ) AS FLAG_DEVOLUCION_PERIODO --FLAG A MODIFICAR 
       ,POL.CANAL
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR
        INNER JOIN  `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL 
  ON CAR.NUMERO_POLIZA=POL.NUMERO_POLIZA  
 CROSS JOIN TMP_PERIODO_ACTUAL PER
--CROSS JOIN TMP_PERIODO_ACTUAL_MODIFICADO PER --MODIFICADO 
CROSS JOIN TMP_TIPO_CAMBIO_MES_ANTERIOR TIP
     WHERE CAR.NOMBRE_GRUPO_PRODUCTO='VEHICULAR' 
       AND CAR.ESTADO_CARGO NOT IN ("SIN CARGO")
       AND POL.CANAL='BROKERS'             
       ---------------------------------------------
;
-- ----------------------------------------------------------------------
-- Paso A11: Universo de Cargos en el RANGO de COBRANZA del Producto VEHICULAR.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS`
AS
WITH TMP_PAGADO_HASTA_VEHICULAR AS 
(
SELECT
 NUMERO_POLIZA
,MAX(FECHA_PAGADO_HASTA) AS FECHA_PAGADO_HASTA
FROM 
(
    SELECT NUMERO_POLIZA,FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.acsele_data.PAGADO_HASTA_raw` 
    UNION ALL 
    SELECT NUMERO_POLIZA,MAX(CARGO_FECHA_COBERTURA_FIN) AS FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` 
     WHERE NOMBRE_PRODUCTO IN ("VEHICULAR")
       AND ID_ABONO!="0"
     GROUP BY NUMERO_POLIZA
) TAB
GROUP BY NUMERO_POLIZA
)
SELECT
 CAR.PERIODO_RECAUDACION AS PERIODO
,'CALENDARIO' AS TIPO_PERIODO
,CAR.NUMERO_POLIZA
,CAR.NUMERO_CARGO
,CAR.ID_DEVOLUCION
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO=TRUE THEN NULL ELSE CAR.NUMERO_ABONO END AS NUMERO_ABONO
--- MODIFICADO PARA EL CASO BROKERS VA SER LA FECHA DE COBERTURA FIN EN LOS DEMAS CASOS VA SER LA FECHA COBERTURA INICIO
,CAR.CARGO_FECHA_COBERTURA_INICIO
,CASE WHEN  CAR.CANAL='BROKERS' THEN CAR.CARGO_FECHA_COBERTURA_FIN 
 ELSE  CAR.CARGO_FECHA_COBERTURA_INICIO 
   END AS FECHA_VENCIMIENTO_CUOTA
-----------------------------------------------------------------------------
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE 
        --OR COALESCE(CAR.ID_DEVOLUCION,0)!=0  -- para devoluciones.
        OR COALESCE(CAR.MONTO_PAGO_USD_PERIODO,0)=0 
        THEN NULL 
  ELSE CAR.FECHA_APLICADO_CARGO_ABONO
 END AS FECHA_APLICADO_CARGO_ABONO
,CASE WHEN COALESCE(CAR.ID_DEVOLUCION,0)!=0 THEN CAR.FECHA_APLICADO_CARGO_ABONO  ELSE NULL END AS FECHA_DEVOLUCION
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE THEN NULL ELSE CAR.FECHA_REGISTRO_CAJA_PERU END AS FECHA_REGISTRO_CAJA_PERU
,CAR.MONTO_PAGO_PEN_PERIODO AS MONTO_CANTIDAD_ABONO_PEN
,CAR.MONTO_PAGO_USD_PERIODO AS MONTO_CANTIDAD_ABONO_USD
,CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' THEN CAR.SALDO_CANTIDAD_PEN+CAR.MONTO_RECAUDADO_PEN_DESPUES_PRIMER_DIA_PERIODO ELSE 0 END AS MONTO_POR_COBRAR_PEN 
,CASE WHEN CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.ESTADO_CARGO='ACTIVO' THEN CAR.SALDO_CANTIDAD_USD+CAR.MONTO_RECAUDADO_USD_DESPUES_PRIMER_DIA_PERIODO ELSE 0 END AS MONTO_POR_COBRAR_USD
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE THEN NULL ELSE  CAR.NUMERO_VIA_PAGO END AS NUMERO_VIA_PAGO
,CAR.MONTO_DEVOLUCION_PEN_PERIODO
,CAR.MONTO_DEVOLUCION_USD_PERIODO
,CAR.CONCEPTO_CARGO
,CAR.ESTADO_CARGO
,CASE WHEN CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO = TRUE OR COALESCE(CAR.MONTO_PAGO_USD_PERIODO,0)=0 THEN NULL ELSE  CAR.ESTADO_ABONO END AS ESTADO_ABONO
,CAR.FLAG_DEVOLUCION_PERIODO
,CASE WHEN CAR.CANAL= 'BROKERS' THEN(
              CASE WHEN CAR.ESTADO_CARGO='ACTIVO' AND (COALESCE(CAR.SALDO_CANTIDAD_USD,0)+COALESCE(CAR.MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO,0)) > 0 
                  THEN (CASE WHEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_FIN,DAY),0)>0 
                            THEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_FIN,DAY),0)
                            ELSE 0
                      END)
                  ELSE 0
              END )
--PARA NO BROKERS
              ELSE 
                        CASE WHEN CAR.ESTADO_CARGO='ACTIVO' AND (COALESCE(CAR.SALDO_CANTIDAD_USD,0)+COALESCE(CAR.                   MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO,0)) > 0 
                THEN (CASE WHEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)>0 
                          THEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)
                          ELSE 0
                    END)
                ELSE 0
               END
              END AS DIAS_IMPAGO

/*
,CASE WHEN CAR.ESTADO_CARGO='ACTIVO' AND (COALESCE(CAR.SALDO_CANTIDAD_USD,0)+COALESCE(CAR.MONTO_RECAUDADO_USD_DESPUES_ULTIMO_DIA_PERIODO,0)) > 0 
      THEN (CASE WHEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)>0 
                 THEN COALESCE(DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_FECHA_FIN),CAR.CARGO_FECHA_COBERTURA_INICIO,DAY),0)
                 ELSE 0
           END)
      ELSE 0
  END AS DIAS_IMPAGO
  */
--------------------------------------------------------
,SALDO_CANTIDAD_PEN
,SALDO_CANTIDAD_USD 
,VIA_COBRO
,ID_CARGO
,MONTO_TIPO_CAMBIO
,PERIODO_DIA_INICIO_4M
,PERIODO_DESCRIPCION_ABREVIADO
,PERIODO_RECAUDACION_DIA_INICIO AS PERIODO_DIA_INICIO
,PERIODO_RECAUDACION_DIA_FIN AS PERIODO_DIA_FIN
,CARGO_FECHA_COBERTURA_FIN  
,TPHV.FECHA_PAGADO_HASTA
FROM `iter-data-storage-pv-uat.temp.TMP_UNI_PAG_CARGOS_VEHICULAR` CAR
LEFT JOIN TMP_PAGADO_HASTA_VEHICULAR TPHV
       ON CAR.NUMERO_POLIZA = TPHV.NUMERO_POLIZA
     WHERE CAR.FLAG_PAGO_EN_PERIODO =TRUE  -- COBRADO EN EL PERIODO
     OR CAR.FLAG_DEVOLUCION_PERIODO =TRUE -- DEVOLUCIONES EN EL MES
    OR ( CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.SALDO_CANTIDAD > 0 /* AND COALESCE(CAR.ID_DEVOLUCION,0)!=0*/ ) -- Cargos del periodo que no son devoluciones
    OR ( CAR.FLAG_CARGO_COBRAR_PERIODO =TRUE AND CAR.FLAG_PAGO_POSTERIOR_AL_PERIODO=TRUE /*AND COALESCE(CAR.ID_DEVOLUCION,0)!=0*/ )  -- Cargos del periodo que no son 
;
-- ----------------------------------------------------------------------
-- Paso A13: PERIODO-CALENDARIO : PRE-
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_POLIZA_CARGO_VEHICULAR_PRE`
AS
SELECT DISTINCT 
     CAR.PERIODO
    ,CAR.TIPO_PERIODO
    ,CAR.NUMERO_POLIZA
    ,CAR.NUMERO_CARGO
    ,CAR.NUMERO_ABONO
    ,CAR.ID_DEVOLUCION
    ,CAR.PERIODO_DIA_INICIO_4M
    ,CAR.PERIODO_DIA_INICIO
    ,CAR.PERIODO_DIA_FIN
    ,CAR.FECHA_VENCIMIENTO_CUOTA
    ,CAR.CARGO_FECHA_COBERTURA_FIN
    ,CAR.PERIODO_DESCRIPCION_ABREVIADO
    ,CAR.MONTO_CANTIDAD_ABONO_PEN
    ,CAR.MONTO_CANTIDAD_ABONO_USD
    ,CAR.SALDO_CANTIDAD_PEN	
    ,CAR.SALDO_CANTIDAD_USD
    ,CAR.FECHA_APLICADO_CARGO_ABONO
    ,POL.NOMBRE_GRUPO_PRODUCTO
    ,POL.NOMBRE_PRODUCTO
    ,POL.NUMERO_PLACA
    ,POL.ESTADO_POLIZA
    ,POL.CANAL
    ,POL.PLAN
    ,POL.MODELO_VEHICULO
    ,POL.MARCA_VEHICULO
    ,POL.NUMERO_DOCUMENTO
    ,POL.TIPO_DOCUMENTO
    ,POL.NOMBRE_CONTRATANTE
    ,(CASE WHEN CAR.NUMERO_VIA_PAGO IN ('400','300') 
           THEN 'OK' 
--           WHEN COALESCE(CAR.DIAS_IMPAGO,0)<=0 AND REC.MOTIVO_RECHAZO!='OK'
--           THEN NULL
           ELSE COALESCE(REC.MOTIVO_RECHAZO,RNO.MOTIVO_RECHAZO,PAF.MOTIVO_RECHAZO,PLN.MOTIVO_RECHAZO)  
       END ) AS MOTIVO_RECHAZO
    ,COALESCE(REC.TIPO_TARJETA,RNO.TIPO_TARJETA,PAF.TIPO_TARJETA,PLN.TIPO_TARJETA) AS TIPO_TARJETA
    ,COALESCE(REC.NUMERO_TARJETA_ENCRYP,RNO.NUMERO_TARJETA_ENCRYP,PAF.NUMERO_TARJETA_ENCRYP,PLN.NUMERO_TARJETA_ENCRYP) AS NUMERO_TARJETA_ENCRYP
    ,COALESCE(REC.TIPO_ENTIDAD,RNO.TIPO_ENTIDAD,PAF.TIPO_ENTIDAD,PLN.TIPO_ENTIDAD) AS TIPO_ENTIDAD
    ,COALESCE(REC.NOMBRE_TARJETA,RNO.NOMBRE_TARJETA,PAF.NOMBRE_TARJETA,PLN.NOMBRE_TARJETA) AS NOMBRE_TARJETA
    ,COALESCE(REC.BIN_TARJETA,RNO.BIN_TARJETA,PAF.BIN_TARJETA,PLN.BIN_TARJETA) AS BIN_TARJETA
    ,COALESCE(REC.EMISOR,RNO.EMISOR,PAF.EMISOR,PLN.EMISOR ) AS EMISOR
    ,CAR.MONTO_POR_COBRAR_PEN
    ,CAR.MONTO_POR_COBRAR_USD
    ,CAR.ESTADO_CARGO
    ,CAR.ESTADO_ABONO
    ,POL.INDICADOR_RENOVACION
    ,POL.FECHA_INICIO_VIGENCIA_POLIZA
    ,POL.FECHA_FIN_VIGENCIA_POLIZA
    ,POL.CORREO 
    ,POL.CELULAR
    ,POL.MONEDA
    ,POL.VIGENCIA
    ,COALESCE(POL.NOMBRE_AGENTE,'Marvin Solier Huaman') AS NOMBRE_AGENTE 
    ,COALESCE(POL.CODIGO_AGENTE,'16332')              AS CODIGO_AGENTE 
    ,COALESCE(POL.CODIGO_AGENCIA,'906')               AS CODIGO_AGENCIA 
    ,COALESCE(POL.NOMBRE_SUPERVISOR,'Milagros Luna')  AS NOMBRE_SUPERVISOR 
    ,COALESCE(POL.NOMBRE_JEFE,'Sally silvestre')      AS NOMBRE_JEFE 
    ,MOR.NUMERO_CUOTA
    ,CAR.DIAS_IMPAGO  AS MORA
    ,POL.FRECUENCIA_PAGO
    ,CAR.VIA_COBRO
    ,CAR.NUMERO_VIA_PAGO
    ,COALESCE(REC.OPERADOR,RNO.OPERADOR,PAF.OPERADOR,PLN.OPERADOR) AS OPERADOR
    ,POL.FECHA_VENTA 
    ,POL.ANTIGUEDAD
    ,CAR.MONTO_TIPO_CAMBIO
    ,COALESCE(REC.PASARELA,RNO.PASARELA,PAF.PASARELA,PLN.PASARELA) AS PASARELA
    ,POL.CORREO_VEHICULAR
    ,POL.CELULAR_VEHICULAR
    ,POL.CORREO_CONTACTO
    ,POL.CELULAR_CONTACTO
    ,POL.NOMBRE
    ,POL.APELLIDO_PATERNO
    ,POL.APELLIDO_MATERNO
    ,POL.RAZON_SOCIAL
    --SEGMENTO
    ,POL.F
    ,POL.M
    ,POL.R
    ,POL.SCORE_RFM
    ,POL.RECENCY
    ,POL.MONETARY_VALUE
    ,POL.FREQUENCY
    ,CAR.FECHA_PAGADO_HASTA
     -- FROM `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_PORCOBRAR` CAR
      FROM `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS` CAR 
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_UNIVERSO_POLIZAS_VEH` POL
        ON POL.NUMERO_POLIZA                = CAR.NUMERO_POLIZA
 LEFT JOIN `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP` REC 
       ON REC.NUMERO_POLIZA                 = CAR.NUMERO_POLIZA 
      AND DATE(REC.FECHA_VENCIMIENTO_CUOTA) = DATE(CAR.FECHA_VENCIMIENTO_CUOTA)
LEFT JOIN `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP` RNO
       ON RNO.NUMERO_POLIZA                 = CAR.NUMERO_POLIZA
      AND RNO.FECHA_VENCIMIENTO_CUOTA_DATE <= DATE(CAR.FECHA_VENCIMIENTO_CUOTA) -- PARA TODAS LAS CUOTAS CON DEUDA O NO CANCELADAS DEL ULTIMO INTENTO
      AND RNO.ESTADO_TRANSACCION   ='N'
      --AND RNO.CORRELATIVO_INTENTOS = 1
      AND RNO.CORRELATIVO_INTENTOS_RECHAZOS = 1
LEFT JOIN  `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A` PAF
       ON PAF.NUMERO_POLIZA = CAR.NUMERO_POLIZA 
     -- AND CAR.FLAG_PAGO_FUTURO = 1
       AND CAR.FECHA_VENCIMIENTO_CUOTA > CAR.PERIODO_DIA_FIN --> PAGOS DE CARGOS FUTUROS.
-- PARA LINK DE CUOTAS - 1000, tomar datos por el ultimo medio de pago realimozado
--LEFT JOIN  `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A` PLN
LEFT JOIN (select *  
from `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP` 
where ESTADO_TRANSACCION!=''
qualify (row_number()over(partition by NUMERO_POLIZA ORDER BY FECHA_TRANSACCION DESC))=1
)PLN
       ON PLN.NUMERO_POLIZA   = CAR.NUMERO_POLIZA 
      AND CAR.NUMERO_VIA_PAGO = '1000'
LEFT JOIN `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_CUOTAMORA` MOR 
       ON MOR.ID_CARGO      = CAR.ID_CARGO 
      AND MOR.NUMERO_POLIZA = CAR.NUMERO_POLIZA
WHERE CAR.ESTADO_CARGO NOT IN('DESACTIVO')
;
-- ----------------------------------------------------------------------
-- Paso A13: PERIODO-CALENDARIO : Eliminar el Periodo a reprocesar. 
-- ----------------------------------------------------------------------
DELETE FROM `iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR`
    WHERE TIPO_PERIODO ='CALENDARIO' 
  AND PERIODO      = var_periodo_calendario;
-- ----------------------------------------------------------------------
-- Paso A14: PERIODO-CALENDARIO : POR COBRAR 
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR`
(
     PERIODO
    ,TIPO_PERIODO
    ,NUMERO_POLIZA
    ,NUMERO_CARGO
    ,NUMERO_ABONO
    ,ID_DEVOLUCION
    ,PERIODO_DIA_INICIO_4M
    ,PERIODO_DIA_INICIO
    ,PERIODO_DIA_FIN
    ,FECHA_VENCIMIENTO_CUOTA
    ,CARGO_FECHA_COBERTURA_FIN
    ,PERIODO_DESCRIPCION_ABREVIADO
    ,MONTO_CANTIDAD_ABONO_PEN
    ,MONTO_CANTIDAD_ABONO_USD
    ,SALDO_CANTIDAD_PEN	
    ,SALDO_CANTIDAD_USD
    ,FECHA_APLICADO_CARGO_ABONO	
    ,NOMBRE_GRUPO_PRODUCTO
    ,NOMBRE_PRODUCTO
    ,NUMERO_PLACA
    ,ESTADO_POLIZA
    ,CANAL
    ,PLAN
    ,MODELO_VEHICULO
    ,MARCA_VEHICULO
    ,NUMERO_DOCUMENTO
    ,TIPO_DOCUMENTO
    ,NOMBRE_CONTRATANTE
    ,MOTIVO_RECHAZO
    ,TIPO_TARJETA
    ,NUMERO_TARJETA_ENCRYP
    ,TIPO_ENTIDAD			
    ,NOMBRE_TARJETA
    ,BIN_TARJETA
    ,EMISOR
    ,MONTO_POR_COBRAR_PEN
    ,MONTO_POR_COBRAR_USD
    ,ESTADO_CARGO
    ,ESTADO_ABONO
    ,INDICADOR_RENOVACION
    ,FECHA_INICIO_VIGENCIA_POLIZA
    ,FECHA_FIN_VIGENCIA_POLIZA
    ,CORREO
    ,CELULAR
    ,MONEDA
    ,VIGENCIA
    ,NOMBRE_AGENTE 
    ,CODIGO_AGENTE 
    ,CODIGO_AGENCIA 
    ,NOMBRE_SUPERVISOR 
    ,NOMBRE_JEFE
    ,NUMERO_CUOTA
    ,MORA
    ,FRECUENCIA_PAGO
    ,VIA_COBRO
    ,NUMERO_VIA_PAGO
    ,OPERADOR
    ,FECHA_VENTA
    ,ANTIGUEDAD
    ,MONTO_TIPO_CAMBIO
    ,PASARELA
    ,CORREO_VEHICULAR
    ,CELULAR_VEHICULAR
    ,CORREO_CONTACTO
    ,CELULAR_CONTACTO
    ,NOMBRE
    ,APELLIDO_PATERNO 
    ,APELLIDO_MATERNO 
    ,RAZON_SOCIAL
    -- PERFIL Y SEGMENTO
    ,SEGMENTO 
    ,PUNTAJE_SEGMENTO
    ,TIPO_MONEDA_TC_PERFIL
    ,PERFIL_FINANCIERO
    --SEGMENTO
    ,F
    ,M
    ,R
    ,SCORE_RFM
    ,RECENCY
    ,MONETARY_VALUE
    ,FREQUENCY
    ,FECHA_PAGADO_HASTA
)
SELECT  
     FNT.PERIODO
    ,FNT.TIPO_PERIODO
    ,FNT.NUMERO_POLIZA
    ,FNT.NUMERO_CARGO
    ,FNT.NUMERO_ABONO
    ,FNT.ID_DEVOLUCION
    ,FNT.PERIODO_DIA_INICIO_4M
    ,FNT.PERIODO_DIA_INICIO
    ,FNT.PERIODO_DIA_FIN
    ,FNT.FECHA_VENCIMIENTO_CUOTA
    ,FNT.CARGO_FECHA_COBERTURA_FIN
    ,FNT.PERIODO_DESCRIPCION_ABREVIADO
    ,FNT.MONTO_CANTIDAD_ABONO_PEN
    ,FNT.MONTO_CANTIDAD_ABONO_USD
    ,FNT.SALDO_CANTIDAD_PEN	
    ,FNT.SALDO_CANTIDAD_USD
    ,FNT.FECHA_APLICADO_CARGO_ABONO	
    ,FNT.NOMBRE_GRUPO_PRODUCTO
    ,FNT.NOMBRE_PRODUCTO
    ,FNT.NUMERO_PLACA
    ,FNT.ESTADO_POLIZA
    ,FNT.CANAL
    ,FNT.PLAN
    ,FNT.MODELO_VEHICULO
    ,FNT.MARCA_VEHICULO
    ,FNT.NUMERO_DOCUMENTO
    ,FNT.TIPO_DOCUMENTO
    ,FNT.NOMBRE_CONTRATANTE
    ,CASE WHEN FNT.MONTO_CANTIDAD_ABONO_USD>0 
          THEN 'OK'
          WHEN COALESCE(FNT.MONTO_CANTIDAD_ABONO_USD,0)=0 AND FNT.MOTIVO_RECHAZO='OK'
          THEN NULL 
          WHEN COALESCE(FNT.MORA,0)<0 AND FNT.MOTIVO_RECHAZO!='OK' 
          THEN NULL
          WHEN FNT.FECHA_VENCIMIENTO_CUOTA > CURRENT_DATE("America/Lima")  AND FNT.MOTIVO_RECHAZO IS NOT NULL AND FNT.MOTIVO_RECHAZO !='OK'
          THEN NULL
          ELSE FNT.MOTIVO_RECHAZO 
      END AS MOTIVO_RECHAZO
    ,FNT.TIPO_TARJETA
    ,FNT.NUMERO_TARJETA_ENCRYP
    ,FNT.TIPO_ENTIDAD			
    ,FNT.NOMBRE_TARJETA
    ,FNT.BIN_TARJETA
    ,FNT.EMISOR
    ,FNT.MONTO_POR_COBRAR_PEN
    ,FNT.MONTO_POR_COBRAR_USD
    ,FNT.ESTADO_CARGO
    ,FNT.ESTADO_ABONO
    ,FNT.INDICADOR_RENOVACION
    ,FNT.FECHA_INICIO_VIGENCIA_POLIZA
    ,FNT.FECHA_FIN_VIGENCIA_POLIZA
    ,FNT.CORREO
    ,FNT.CELULAR
    ,FNT.MONEDA
    ,FNT.VIGENCIA
    ,FNT.NOMBRE_AGENTE 
    ,FNT.CODIGO_AGENTE 
    ,FNT.CODIGO_AGENCIA 
    ,FNT.NOMBRE_SUPERVISOR 
    ,FNT.NOMBRE_JEFE
    ,FNT.NUMERO_CUOTA
    ,FNT.MORA
    ,FNT.FRECUENCIA_PAGO
    ,FNT.VIA_COBRO
    ,FNT.NUMERO_VIA_PAGO
    ,FNT.OPERADOR
    ,FNT.FECHA_VENTA
    ,FNT.ANTIGUEDAD
    ,FNT.MONTO_TIPO_CAMBIO
    ,FNT.PASARELA
    ,FNT.CORREO_VEHICULAR
    ,FNT.CELULAR_VEHICULAR
    ,FNT.CORREO_CONTACTO
    ,FNT.CELULAR_CONTACTO
    ,FNT.NOMBRE
    ,FNT.APELLIDO_PATERNO 
    ,FNT.APELLIDO_MATERNO 
    ,FNT.RAZON_SOCIAL
    -- DATOS DE SEGMENTO
    ,SEG.SEGMENTO 
    ,CAST(SEG.PUNTAJE AS STRING) AS PUNTAJE_SEGMENTO
    ,PER.TIPO_MONEDA_TC AS TIPO_MONEDA_TC_PERFIL
    ,PER.PERFIL_FINANCIERO
    --SEGMENTO
    ,FNT.F
    ,FNT.M
    ,FNT.R
    ,FNT.SCORE_RFM
    ,FNT.RECENCY
    ,FNT.MONETARY_VALUE
    ,FNT.FREQUENCY
    ,FNT.FECHA_PAGADO_HASTA
FROM `iter-data-storage-pv-uat.temp.TMP_POLIZA_CARGO_VEHICULAR_PRE` FNT
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_SEGMENTACION_MOROSIDAD`  SEG
        ON SEG.NUMERO_POLIZA = FNT.NUMERO_POLIZA 
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_PERFIL_FINANCIERO`  PER
        ON PER.NUMERO_POLIZA = FNT.NUMERO_POLIZA
;

-- ====================================================================================================================================
-- ====================================================================================================================================
-- ||                                          PERIODO-RECAUDACION(21-20)                                                           ||
-- ====================================================================================================================================
-- ====================================================================================================================================

-- ----------------------------------------------------------------------
-- Paso A10: Crear la tabla final con el rango de fechas del periodo.
--           EJECUCION DIARIA: Considera el rango de cobranza con el dia D-1
--           REPROCESO: En caso de reproceso, toma el valor de periodo ingresado como parametro
-- ----------------------------------------------------------------------

IF par_periodo IS NULL THEN

-- Variable periodo recaudacion
SET var_periodo_recaudacion = ( SELECT   MAX(CAST(PERIODO AS INT64))  FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` 
WHERE CURRENT_DATE BETWEEN PERIODO_RECAUDACION_DIA_INICIO  AND PERIODO_RECAUDACION_DIA_FIN ) ;

ELSE 

-- Variable periodo recaudacion
SET var_periodo_recaudacion = par_periodo ;

END IF
;
-- ----------------------------------------------------------------------
-- Paso A11: Universo de Polizas/Contratante y sus atributos
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_UNIVERSO_POLIZAS_VEH`
AS
WITH V_MD_PERSONA AS (
    SELECT HASH_ID
    ,LOWER(CORREO) CORREO
    ,LOWER(CORREO) AS CORREO_VEHICULAR
    ,CELULAR AS CELULAR_VEHICULAR
    ,CELULAR
    FROM `iter-data-storage-pv-uat.master_party.V_MD_PERSONA`
),


TMP_PERIODO_ACTUAL AS
(
         SELECT 
         CAST(PERIODO AS INT64)    AS PERIODO
        ,PERIODO_RECAUDACION_DIA_FIN
        ,PERIODO_RECAUDACION_DIA_INICIO
    FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION`  
    WHERE CAST(PERIODO AS INT64) =var_periodo_recaudacion   
)

SELECT 
 POL.NUMERO_POLIZA
,POL.NOMBRE_GRUPO_PRODUCTO
,POL.NOMBRE_PRODUCTO
,VEH.NUMERO_PLACA
,POL.ESTADO AS ESTADO_POLIZA
,POL.CANAL
,POL.PLAN
,VEH.MODELO_VEHICULO
,VEH.MARCA_VEHICULO
,CON.NUMERO_DOCUMENTO
,CON.TIPO_DOCUMENTO
,COALESCE(CONCAT(IFNULL(CON.APELLIDO_PATERNO,'')," ",IFNULL(CON.APELLIDO_MATERNO,'')," ",IFNULL(CON.NOMBRE,'')),CON.RAZON_SOCIAL) AS NOMBRE_CONTRATANTE
,VEH.INDICADOR_RENOVACION
,POL.FECHA_INICIO AS FECHA_INICIO_VIGENCIA_POLIZA
,POL.FECHA_FIN  AS FECHA_FIN_VIGENCIA_POLIZA
,PERS.CORREO 
,PERS.CELULAR
,POL.MONEDA
,POL.VIGENCIA
,COALESCE(FECHA_CADUCADA,FECHA_PRORROGADO,FECHA_ANULADA,FECHA_RESCATADO,FECHA_SUSPENDIDA,FECHA_SALDADA,FECHA_TERMINADO,FECHA_CANCELACION ) AS FECHA_BAJA
,CAST(FORMAT_DATE("%Y%m",COALESCE(FECHA_CADUCADA,FECHA_PRORROGADO,FECHA_ANULADA,FECHA_RESCATADO,FECHA_SUSPENDIDA,FECHA_SALDADA,FECHA_TERMINADO,FECHA_CANCELACION )) AS INT64) AS CODMES_BAJA
,POL.FRECUENCIA_PAGO
,SAFE.PARSE_DATE("%Y-%m-%d",VEH.FECHA_VENTA) AS FECHA_VENTA
,DATE_DIFF(CURRENT_DATE,SAFE.PARSE_DATE("%Y-%m-%d",VEH.FECHA_VENTA),  MONTH) AS ANTIGUEDAD
,PERS.CORREO_VEHICULAR
,PERS.CELULAR_VEHICULAR
,VEH.CORREO_CONTACTO
,VEH.CELULAR_CONTACTO
,CON.NOMBRE
,CON.APELLIDO_PATERNO 
,CON.APELLIDO_MATERNO
,CON.RAZON_SOCIAL
-- SEGMENTO
,RFM.F
,RFM.M
,RFM.R
,RFM.SCORE_RFM
,RFM.RECENCY
,RFM.MONETARY_VALUE
,RFM.FREQUENCY
-- AGENTE
,CAST(AGE.COD_AGENCIA_FINAL AS STRING) AS CODIGO_AGENCIA
,CAST(AGE.COD_AGENTE_FINAL AS STRING)  AS CODIGO_AGENTE
,AGE.NOMBRE_AGENTE_FINAL               AS NOMBRE_AGENTE
,AGE.SUPERVISOR_AGENTE_FINAL           AS NOMBRE_SUPERVISOR
,AGE.JEFE_AGENTE_FINAL                 AS NOMBRE_JEFE
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL
INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.CONTRATANTE` CON 
        ON CON.ID_PERSONA    = POL.ID_PERSONA
INNER JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_VEHICULO` VEH
        ON VEH.NUMERO_POLIZA = POL.NUMERO_POLIZA
LEFT JOIN V_MD_PERSONA PERS ON PERS.HASH_ID = CON.HASH_ID 
-- SEGMENTO
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.PERSONA_SEGMENTACION_RFM`  RFM 
        ON RFM.ID_PERSONA = CON.ID_PERSONA
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_AGENTE` AGE
        ON AGE.NUMERO_POLIZA = POL.NUMERO_POLIZA 
       AND AGE.ID_PRODUCTO = POL.ID_PRODUCTO
CROSS JOIN TMP_PERIODO_ACTUAL PER
     WHERE POL.NOMBRE_GRUPO_PRODUCTO='VEHICULAR'
      AND (POL.ESTADO= 'VIGENTE'
       OR COALESCE(  POL.FECHA_CANCELACION
      ,POL.FECHA_TERMINADO
      ,POL.FECHA_CADUCADA
      ,POL.FECHA_PRORROGADO
      ,POL.FECHA_ANULADA
      ,POL.FECHA_RESCATADO
      ,POL.FECHA_SUSPENDIDA
      ,POL.FECHA_SALDADA
      )  >= PER.PERIODO_RECAUDACION_DIA_INICIO )
       AND POL.FECHA_EMISION <= PER.PERIODO_RECAUDACION_DIA_FIN
;
-- ----------------------------------------------------------------------
-- Paso A10: RECHAZOS , PAGOS DE LAS CUOTAS., EL ULTIMO INTENTO POR POLIZAS Y CUOTA/CARGO en el rango del periodo del corte del periodo.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP`
AS 
(
WITH TMP_PERIODO_ACTUAL AS
(
  SELECT 
         CAST(PERIODO AS INT64)    AS PERIODO
        ,PERIODO_RECAUDACION_DIA_FIN
        ,PERIODO_RECAUDACION_DIA_INICIO AS PERIODO_DIA_INICIO
    FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION`  
    WHERE CAST(PERIODO AS INT64) = var_periodo_recaudacion 
)
SELECT NUMERO_POLIZA
        --,MOTIVO_RECHAZO
        ,(CASE WHEN TRIM(MOTIVO_RECHAZO)='' THEN 'TRANSACCIÓN DENEGADA A/D' ELSE MOTIVO_RECHAZO END) AS MOTIVO_RECHAZO
        ,TIPO_TARJETA
        ,NUMERO_TARJETA_ENCRYP
        ,TIPO_ENTIDAD
        ,NOMBRE_TARJETA
        ,BIN_TARJETA
        ,EMISOR
        ,FECHA_VENCIMIENTO_CUOTA
        ,DATE(FORMAT_DATETIME('%Y-%m-%d', TIMESTAMP(FECHA_VENCIMIENTO_CUOTA),'America/Lima'))  AS FECHA_VENCIMIENTO_CUOTA_DATE
        --,DATE(FECHA_VENCIMIENTO_CUOTA) AS FECHA_VENCIMIENTO_CUOTA_DATE --> CAMBIO POR CASTEO DE FECHA REVISAR ORIGEN
        ,ESTADO_TRANSACCION
        ,FECHA_TRANSACCION
        ,ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA,FECHA_VENCIMIENTO_CUOTA ORDER BY FECHA_TRANSACCION DESC) AS ULTIMO_INTENTO_POR_CUOTA
        ,ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ORDER BY FECHA_TRANSACCION DESC ) AS CORRELATIVO_INTENTOS
        ,OPERADOR
        ,PASARELA
    FROM `iter-data-storage-pv-uat.bi_cobranza.DV_RECHAZOS` REC 
  CROSS JOIN TMP_PERIODO_ACTUAL ACT
    WHERE NOMBRE_PRODUCTO IN ('SEGUROVEHICULARMODULAR','SEGUROVEHICULAR')
      AND DATE(REC.FECHA_TRANSACCION) <=ACT.PERIODO_RECAUDACION_DIA_FIN
QUALIFY(ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA,FECHA_VENCIMIENTO_CUOTA ORDER BY FECHA_TRANSACCION DESC ))=1
);

-- ----------------------------------------------------------------------
-- Paso A12: PERIODO-CALENDARIO :  DATOS DE PAGOS PARA CARGOS FUTUROS NIVEL POLIZA.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A`
AS 
(
SELECT * 
from `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP`
where ESTADO_TRANSACCION ='S'
QUALIFY(ROW_NUMBER() OVER(PARTITION BY NUMERO_POLIZA ORDER BY FECHA_TRANSACCION DESC))=1
);
-- ----------------------------------------------------------------------
-- Paso A12: PERIODO-CALENDARIO :  MORA-CUOTA
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_CUOTAMORA`
AS
(
SELECT
  NUMERO_POLIZA 
 ,ID_CARGO
 ,ROW_NUMBER()OVER(PARTITION BY NUMERO_POLIZA ORDER BY CARGO_FECHA_COBERTURA_INICIO ASC ) AS NUMERO_CUOTA
 ,FLAG_PAGOTOTAL_CARGO
 ,CASE WHEN FLAG_PAGOTOTAL_CARGO=False AND CARGO_FECHA_COBERTURA_INICIO <= CURRENT_DATE AND ESTADO_CARGO='ACTIVO'
       THEN DATE_DIFF( CURRENT_DATE,CARGO_FECHA_COBERTURA_INICIO,DAY) 
       ELSE 0 END AS DIAS_IMPAGO 
    ,CARGO_FECHA_COBERTURA_INICIO
FROM 
(
SELECT NUMERO_POLIZA
      ,ID_CARGO
      ,CARGO_FECHA_COBERTURA_INICIO
      ,ESTADO_CARGO
      ,CASE WHEN SUM(SALDO_CANTIDAD) <> 0 THEN False ELSE True  END AS FLAG_PAGOTOTAL_CARGO
 FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` 
  WHERE NOMBRE_GRUPO_PRODUCTO ='VEHICULAR'
GROUP BY NUMERO_POLIZA,ID_CARGO,CARGO_FECHA_COBERTURA_INICIO,ESTADO_CARGO
)
)
;
-- ----------------------------------------------------------------------
-- Paso A12: PERIODO-CALENDARIO :  RECAUDO -  Universo de Poliza con sus cargos y abonos.
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_PORCOBRAR`
AS
WITH TMP_PERIODO AS (
   SELECT 
         CAST(PERIODO AS INT64)    AS PERIODO
        ,PERIODO_RECAUDACION_DIA_FIN    AS PERIODO_DIA_FIN
        ,PERIODO_RECAUDACION_DIA_INICIO AS PERIODO_DIA_INICIO
        ,CONCAT(PERIODO_MES_NOMBRE_ABREV," ",PERIODO_ANIO) AS PERIODO_DESCRIPCION_ABREVIADO
    FROM `iter-data-storage-pv-uat.bi_finanzas.DIM_PERIODO_RECAUDACION` 
    WHERE CAST(PERIODO AS INT64) =var_periodo_recaudacion 
)
,TMP_PAGADO_HASTA_VEHICULAR AS 
(
SELECT
 NUMERO_POLIZA
,MAX(FECHA_PAGADO_HASTA) AS FECHA_PAGADO_HASTA
FROM 
(
    SELECT NUMERO_POLIZA,FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.acsele_data.PAGADO_HASTA_raw` 
    UNION ALL 
    SELECT NUMERO_POLIZA,MAX(CARGO_FECHA_COBERTURA_FIN) AS FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` 
     WHERE NOMBRE_PRODUCTO IN ("VEHICULAR")
       AND ID_ABONO!="0"
     GROUP BY NUMERO_POLIZA
) TAB
GROUP BY NUMERO_POLIZA
)
SELECT
     TAB.NUMERO_POLIZA
     ,'RECAUDACION' AS TIPO_PERIODO -- RECAUDACION/CALENDARIO
    ,NUMERO_CARGO
    ,NUMERO_ABONO
    ,MONTO_CANTIDAD_ABONO_PEN
    ,MONTO_CANTIDAD_ABONO_USD
    ,SALDO_CANTIDAD_PEN	
    ,SALDO_CANTIDAD_USD
    ,FECHA_APLICADO_CARGO_ABONO	
    ,FLAG_PAGADO_PERIODO	
    ,ID_DEVOLUCION
    ,PERIODO_DIA_INICIO_4M
    ,PERIODO_DIA_INICIO
    ,PERIODO_DIA_FIN
    ,CARGO_FECHA_COBERTURA_INICIO AS FECHA_VENCIMIENTO_CUOTA
    ,CARGO_FECHA_COBERTURA_FIN
    ,PERIODO_DESCRIPCION_ABREVIADO
    ,PERIODO
    ,ESTADO_CARGO
    ,ESTADO_ABONO
    ,ID_CARGO
    ,VIA_COBRO
    ,NUMERO_VIA_PAGO
    ,FLAG_PAGO_FUTURO
    ,FLAG_CARGO_DEVOLUCION
    ,MONTO_TIPO_CAMBIO
    ,TPHV.FECHA_PAGADO_HASTA
FROM (
SELECT 
         CAR.NUMERO_POLIZA
        ,CAR.NUMERO_CARGO
        ,CAR.NUMERO_ABONO
        ,(CASE WHEN CAR.SALDO_MONEDA='PEN' THEN CAR.SALDO_CANTIDAD ELSE CAR.SALDO_CANTIDAD*CAM.MONTO_TIPO_CAMBIO END) AS SALDO_CANTIDAD_PEN
        ,(CASE WHEN CAR.SALDO_MONEDA='USD' THEN CAR.SALDO_CANTIDAD ELSE CAR.SALDO_CANTIDAD/CAM.MONTO_TIPO_CAMBIO END) AS SALDO_CANTIDAD_USD
        ,(CASE WHEN CAR.MONTO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*CAM.MONTO_TIPO_CAMBIO END) AS MONTO_CANTIDAD_ABONO_PEN
        ,(CASE WHEN CAR.MONTO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/CAM.MONTO_TIPO_CAMBIO END) AS MONTO_CANTIDAD_ABONO_USD
        ,CAR.FECHA_APLICADO_CARGO_ABONO
        ,CAR.ID_DEVOLUCION
        ,(CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO  AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN) 
              THEN 1 
              ELSE 0 
         END) AS FLAG_PAGADO_PERIODO
        ,(CASE WHEN CAR.CARGO_FECHA_COBERTURA_INICIO >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) AND CAR.CARGO_FECHA_COBERTURA_INICIO <= PER.PERIODO_DIA_FIN AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_DIA_FIN 
               THEN 1 
               ELSE 0 
          END) AS FLAG_PAGO_FUTURO
        ,CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO  AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN AND CAR.FLAG_CARGO_DEVOLUCION = TRUE ) THEN TRUE ELSE FALSE END AS FLAG_DEVOLUCION_PERIODO
        ,DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH)  AS PERIODO_DIA_INICIO_4M
        ,PER.PERIODO_DIA_INICIO
        ,PER.PERIODO_DIA_FIN
        ,CAR.CARGO_FECHA_COBERTURA_INICIO 
        ,CAR.CARGO_FECHA_COBERTURA_FIN
        ,PER.PERIODO_DESCRIPCION_ABREVIADO
        ,PER.PERIODO
        ,CAR.ESTADO_CARGO
        ,CAR.ESTADO_ABONO
        ,CAR.ID_CARGO
        ,CAR.VIA_COBRO
        ,CAR.NUM_VIA_PAGO_COBRO AS NUMERO_VIA_PAGO
        ,CAR.FLAG_CARGO_DEVOLUCION
        ,CAM.MONTO_TIPO_CAMBIO
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR
  INNER JOIN  `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL 
  ON CAR.NUMERO_POLIZA=POL.NUMERO_POLIZA  															  
										  
INNER JOIN TMP_PERIODO PER 
-- RANGO DE CARGOS POR COBRAR EN EL PERIODO.
        ON (( CAR.CARGO_FECHA_COBERTURA_INICIO >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) 
       AND CAR.CARGO_FECHA_COBERTURA_INICIO <= PER.PERIODO_DIA_FIN)
       OR (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO 
          AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN))
-- UNIVERSO DE CARGO QUE SON DEL RANGO, PERO SE PAGARON POSTERIOR AL ULTIMO DIA DEL MES
          OR  (CAR.CARGO_FECHA_COBERTURA_INICIO  >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) 
       AND CAR.CARGO_FECHA_COBERTURA_INICIO      <= PER.PERIODO_DIA_FIN
        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_FIN ) --> CONSIDERAR COMO POR COBRAR EN EL PERIODO.
CROSS JOIN `iter-data-storage-pv-uat.temp.RH_POLIZA_TIPO_CAMBIO_VEH_ULT` CAM --> TIPO DE CAMBIO
     WHERE CAR.NUMERO_POLIZA IS NOT NULL
       AND CAR.ESTADO_CARGO  NOT IN ("SIN CARGO",'DESACTIVO') --?? --,'INHABILITADO'
       AND CAR.NOMBRE_GRUPO_PRODUCTO = 'VEHICULAR'
       AND IFNULL(CAR.ESTADO_ABONO,'') NOT IN ('ANULADO') -- NO TRAER ABONOS ANULADOS
	       AND POL.CANAL<> ('BROKERS')

UNION ALL

 SELECT 
         CAR.NUMERO_POLIZA
        ,CAR.NUMERO_CARGO
        ,CAR.NUMERO_ABONO
        ,(CASE WHEN CAR.SALDO_MONEDA='PEN' THEN CAR.SALDO_CANTIDAD ELSE CAR.SALDO_CANTIDAD*CAM.MONTO_TIPO_CAMBIO END) AS SALDO_CANTIDAD_PEN
        ,(CASE WHEN CAR.SALDO_MONEDA='USD' THEN CAR.SALDO_CANTIDAD ELSE CAR.SALDO_CANTIDAD/CAM.MONTO_TIPO_CAMBIO END) AS SALDO_CANTIDAD_USD
        ,(CASE WHEN CAR.MONTO_MONEDA='PEN' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD*CAM.MONTO_TIPO_CAMBIO END) AS MONTO_CANTIDAD_ABONO_PEN
        ,(CASE WHEN CAR.MONTO_MONEDA='USD' THEN CAR.MONTO_CANTIDAD ELSE CAR.MONTO_CANTIDAD/CAM.MONTO_TIPO_CAMBIO END) AS MONTO_CANTIDAD_ABONO_USD
        ,CAR.FECHA_APLICADO_CARGO_ABONO
        ,CAR.ID_DEVOLUCION
        ,(CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO  AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN) 
              THEN 1 
              ELSE 0 
         END) AS FLAG_PAGADO_PERIODO
        ,(CASE WHEN CAR.CARGO_FECHA_COBERTURA_INICIO >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) AND CAR.CARGO_FECHA_COBERTURA_INICIO <= PER.PERIODO_DIA_FIN AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) > PER.PERIODO_DIA_FIN --MODIFICADO A CARGO_FECHA_COBERTURA_FIN ANTES ESTABA LA DE INICIO
               THEN 1 
               ELSE 0 
          END) AS FLAG_PAGO_FUTURO
        ,CASE WHEN (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO  AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN AND CAR.FLAG_CARGO_DEVOLUCION = TRUE ) THEN TRUE ELSE FALSE END AS FLAG_DEVOLUCION_PERIODO
        ,DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH)  AS PERIODO_DIA_INICIO_4M
        ,PER.PERIODO_DIA_INICIO
        ,PER.PERIODO_DIA_FIN
       -- ,CAR.CARGO_FECHA_COBERTURA_FIN as CARGO_FECHA_COBERTURA_INICIO 
       -- ,CAR.CARGO_FECHA_COBERTURA_INICIO as CARGO_FECHA_COBERTURA_FIN
        ,CAR.CARGO_FECHA_COBERTURA_FIN  AS FECHA_VENCIMIENTO_CUOTA
        ,CAR.CARGO_FECHA_COBERTURA_FIN --MODIFICADO
        ,PER.PERIODO_DESCRIPCION_ABREVIADO
        ,PER.PERIODO
        ,CAR.ESTADO_CARGO
        ,CAR.ESTADO_ABONO
        ,CAR.ID_CARGO
        ,CAR.VIA_COBRO
        ,CAR.NUM_VIA_PAGO_COBRO AS NUMERO_VIA_PAGO
        ,CAR.FLAG_CARGO_DEVOLUCION
        ,CAM.MONTO_TIPO_CAMBIO
      FROM `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_CARGO_ABONO` CAR
  INNER JOIN  `iter-data-storage-pv-uat.goldenrecord_data.POLIZA` POL 
  ON CAR.NUMERO_POLIZA=POL.NUMERO_POLIZA  
INNER JOIN TMP_PERIODO PER 
-- RANGO DE CARGOS POR COBRAR EN EL PERIODO.
        ON (( CAR.CARGO_FECHA_COBERTURA_FIN >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) -----CARGO_FECHA_COBERTURA_FIN
       AND CAR.CARGO_FECHA_COBERTURA_FIN <= PER.PERIODO_DIA_FIN)-----CARGO_FECHA_COBERTURA_FIN
       OR (DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_INICIO 
          AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) <= PER.PERIODO_DIA_FIN))
-- UNIVERSO DE CARGO QUE SON DEL RANGO, PERO SE PAGARON POSTERIOR AL ULTIMO DIA DEL MES
          OR  (CAR.CARGO_FECHA_COBERTURA_FIN  >= DATE_SUB(PER.PERIODO_DIA_INICIO,INTERVAL 3 MONTH) ----CARGO_FECHA_COBERTURA_FIN
       AND CAR.CARGO_FECHA_COBERTURA_FIN      <= PER.PERIODO_DIA_FIN-------CARGO_FECHA_COBERTURA_FIN
        AND DATE(CAR.FECHA_APLICADO_CARGO_ABONO) >= PER.PERIODO_DIA_FIN ) --> CONSIDERAR COMO POR COBRAR EN EL PERIODO.
CROSS JOIN `iter-data-storage-pv-uat.temp.RH_POLIZA_TIPO_CAMBIO_VEH_ULT` CAM --> TIPO DE CAMBIO
     WHERE CAR.NUMERO_POLIZA IS NOT NULL
       AND CAR.ESTADO_CARGO  NOT IN ("SIN CARGO",'DESACTIVO') --?? --,'INHABILITADO'
       AND CAR.NOMBRE_GRUPO_PRODUCTO = 'VEHICULAR'
       AND IFNULL(CAR.ESTADO_ABONO,'') NOT IN ('ANULADO') -- NO TRAER ABONOS ANULADOS
       AND POL.CANAL= ('BROKERS')						   
) TAB 
LEFT JOIN TMP_PAGADO_HASTA_VEHICULAR TPHV
       ON TAB.NUMERO_POLIZA = TPHV.NUMERO_POLIZA
WHERE FLAG_PAGADO_PERIODO =1 -- Pagado en el Periodo
   --OR SALDO_CANTIDAD_USD > 0 -- Tienen una deuda en el mes
   OR ( SALDO_CANTIDAD_USD > 0 AND FLAG_CARGO_DEVOLUCION=FALSE) -- Tienen una deuda en el mes
   OR FLAG_DEVOLUCION_PERIODO=TRUE
   OR FLAG_PAGO_FUTURO = 1 -- CARGOS PAGADOS POSTERIOR AL MES DE CORTE.
;
-- ----------------------------------------------------------------------
-- Paso A13: PERIODO-CALENDARIO : PRE-
-- ----------------------------------------------------------------------
CREATE OR REPLACE TABLE `iter-data-storage-pv-uat.temp.TMP_POLIZA_CARGO_VEHICULAR_PRE`
AS
SELECT DISTINCT 
     CAR.PERIODO
    ,CAR.TIPO_PERIODO
    ,CAR.NUMERO_POLIZA
    ,CAR.NUMERO_CARGO
    --,CAR.NUMERO_ABONO
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO!=1 THEN CAR.NUMERO_ABONO ELSE NULL END AS NUMERO_ABONO
    ,CAR.ID_DEVOLUCION
    ,CAR.PERIODO_DIA_INICIO_4M
    ,CAR.PERIODO_DIA_INICIO
    ,CAR.PERIODO_DIA_FIN
    ,CAR.FECHA_VENCIMIENTO_CUOTA
    ,CAR.CARGO_FECHA_COBERTURA_FIN
    ,CAR.PERIODO_DESCRIPCION_ABREVIADO
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO !=1 THEN CAR.MONTO_CANTIDAD_ABONO_PEN ELSE 0 END AS MONTO_CANTIDAD_ABONO_PEN
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO !=1 THEN CAR.MONTO_CANTIDAD_ABONO_USD ELSE 0 END AS MONTO_CANTIDAD_ABONO_USD
    ,CAR.SALDO_CANTIDAD_PEN	
    ,CAR.SALDO_CANTIDAD_USD
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO!=1 THEN CAR.FECHA_APLICADO_CARGO_ABONO ELSE NULL END AS FECHA_APLICADO_CARGO_ABONO
    ,POL.NOMBRE_GRUPO_PRODUCTO
    ,POL.NOMBRE_PRODUCTO
    ,POL.NUMERO_PLACA
    ,POL.ESTADO_POLIZA
    ,POL.CANAL
    ,POL.PLAN
    ,POL.MODELO_VEHICULO
    ,POL.MARCA_VEHICULO
    ,POL.NUMERO_DOCUMENTO
    ,POL.TIPO_DOCUMENTO
    ,POL.NOMBRE_CONTRATANTE
    --,COALESCE(REC.MOTIVO_RECHAZO,RNO.MOTIVO_RECHAZO) AS MOTIVO_RECHAZO
    ,(CASE WHEN CAR.FLAG_PAGO_FUTURO!=1 AND CAR.NUMERO_VIA_PAGO IN ('400','300') 
           THEN 'OK' 
           ELSE  COALESCE(REC.MOTIVO_RECHAZO,RNO.MOTIVO_RECHAZO,PAF.MOTIVO_RECHAZO)  
       END ) AS MOTIVO_RECHAZO
    ,COALESCE(REC.TIPO_TARJETA,RNO.TIPO_TARJETA,PAF.TIPO_TARJETA) AS TIPO_TARJETA
    ,COALESCE(REC.NUMERO_TARJETA_ENCRYP,RNO.NUMERO_TARJETA_ENCRYP,PAF.NUMERO_TARJETA_ENCRYP) AS NUMERO_TARJETA_ENCRYP
    ,COALESCE(REC.TIPO_ENTIDAD,RNO.TIPO_ENTIDAD,PAF.TIPO_ENTIDAD) AS TIPO_ENTIDAD
    ,COALESCE(REC.NOMBRE_TARJETA,RNO.NOMBRE_TARJETA,PAF.NOMBRE_TARJETA) AS NOMBRE_TARJETA
    ,COALESCE(REC.BIN_TARJETA,RNO.BIN_TARJETA,PAF.BIN_TARJETA) AS BIN_TARJETA
    ,COALESCE(REC.EMISOR,RNO.EMISOR,PAF.EMISOR) AS EMISOR
    ,(CASE WHEN (CAR.FECHA_VENCIMIENTO_CUOTA >= CAR.PERIODO_DIA_INICIO_4M  AND CAR.FECHA_VENCIMIENTO_CUOTA <= CAR.PERIODO_DIA_FIN) OR CAR.FLAG_PAGO_FUTURO=1 
            THEN ( CASE WHEN FLAG_CARGO_DEVOLUCION =TRUE --> Para las devoluciones solo considerar el saldo por cobrar
                        THEN IFNULL(SALDO_CANTIDAD_PEN,0) 
                        ELSE IFNULL(MONTO_CANTIDAD_ABONO_PEN,0)+IFNULL(SALDO_CANTIDAD_PEN,0) 
                        END
                  )
            ELSE 0 
      END) AS MONTO_POR_COBRAR_PEN
    ,(CASE WHEN (CAR.FECHA_VENCIMIENTO_CUOTA >= CAR.PERIODO_DIA_INICIO_4M  AND CAR.FECHA_VENCIMIENTO_CUOTA <= CAR.PERIODO_DIA_FIN)  OR CAR.FLAG_PAGO_FUTURO=1 
            THEN (CASE WHEN FLAG_CARGO_DEVOLUCION =TRUE --> Para las devoluciones solo considerar el saldo por cobrar
                       THEN IFNULL(SALDO_CANTIDAD_USD,0) 
                       ELSE IFNULL(MONTO_CANTIDAD_ABONO_USD,0)+IFNULL(SALDO_CANTIDAD_USD,0) 
                  END)
            ELSE 0 
            END) AS MONTO_POR_COBRAR_USD
    ,CAR.ESTADO_CARGO
    --,CAR.ESTADO_ABONO
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO!=1 THEN CAR.ESTADO_ABONO ELSE NULL END AS ESTADO_ABONO
    ,POL.INDICADOR_RENOVACION
    ,POL.FECHA_INICIO_VIGENCIA_POLIZA
    ,POL.FECHA_FIN_VIGENCIA_POLIZA
    ,POL.CORREO 
    ,POL.CELULAR
    ,POL.MONEDA
    ,POL.VIGENCIA
    ,COALESCE(POL.NOMBRE_AGENTE,'Marvin Solier Huaman') AS NOMBRE_AGENTE 
    ,COALESCE(POL.CODIGO_AGENTE,'16332')              AS CODIGO_AGENTE 
    ,COALESCE(POL.CODIGO_AGENCIA,'906')               AS CODIGO_AGENCIA 
    ,COALESCE(POL.NOMBRE_SUPERVISOR,'Milagros Luna')  AS NOMBRE_SUPERVISOR 
    ,COALESCE(POL.NOMBRE_JEFE,'Sally silvestre')      AS NOMBRE_JEFE 
    ,MOR.NUMERO_CUOTA
    ,(CASE WHEN (POL.ESTADO_POLIZA ='VIGENTE' AND CAR.ESTADO_CARGO='ACTIVO' /*PAGO FUTURO O PAGO TOTAL*/AND FLAG_PAGO_FUTURO!=1 AND MOR.FLAG_PAGOTOTAL_CARGO=False ) 
           THEN /*COALESCE(MOR.DIAS_IMPAGO,0)*/ DATE_DIFF(LEAST(CURRENT_DATE,CAR.PERIODO_DIA_FIN),CAR.FECHA_VENCIMIENTO_CUOTA,DAY)
           ELSE 0 
       END) AS MORA
    ,POL.FRECUENCIA_PAGO
    ,CAR.VIA_COBRO
    ,CASE WHEN CAR.FLAG_PAGO_FUTURO!=1 THEN CAR.NUMERO_VIA_PAGO ELSE NULL END AS NUMERO_VIA_PAGO
    ,COALESCE(REC.OPERADOR,RNO.OPERADOR,PAF.OPERADOR) AS OPERADOR
    ,POL.FECHA_VENTA 
    ,POL.ANTIGUEDAD
    ,CAR.MONTO_TIPO_CAMBIO
    ,COALESCE(REC.PASARELA,RNO.PASARELA,PAF.PASARELA) AS PASARELA
    ,POL.CORREO_VEHICULAR
    ,POL.CELULAR_VEHICULAR
    ,POL.CORREO_CONTACTO
    ,POL.CELULAR_CONTACTO
    ,POL.NOMBRE
    ,POL.APELLIDO_PATERNO
    ,POL.APELLIDO_MATERNO
    ,POL.RAZON_SOCIAL
    -- SEGMENTO
    ,POL.F
    ,POL.M
    ,POL.R
    ,POL.SCORE_RFM
    ,POL.RECENCY
    ,POL.MONETARY_VALUE
    ,POL.FREQUENCY
    ,CAR.FECHA_PAGADO_HASTA
      FROM `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_PORCOBRAR` CAR
INNER JOIN `iter-data-storage-pv-uat.temp.TMP_UNIVERSO_POLIZAS_VEH` POL
        ON POL.NUMERO_POLIZA                = CAR.NUMERO_POLIZA
 LEFT JOIN `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP` REC 
       ON REC.NUMERO_POLIZA                 = CAR.NUMERO_POLIZA 
      AND DATE(REC.FECHA_VENCIMIENTO_CUOTA) = DATE(CAR.FECHA_VENCIMIENTO_CUOTA)
LEFT JOIN `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP` RNO
       ON RNO.NUMERO_POLIZA                 = CAR.NUMERO_POLIZA
      AND RNO.FECHA_VENCIMIENTO_CUOTA_DATE <= DATE(CAR.FECHA_VENCIMIENTO_CUOTA) -- PARA TODAS LAS CUOTAS CON DEUDA O NO CANCELADAS DEL ULTIMO INTENTO
      AND RNO.ESTADO_TRANSACCION   ='N'
      AND RNO.CORRELATIVO_INTENTOS = 1
LEFT JOIN  `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A` PAF
       ON PAF.NUMERO_POLIZA = CAR.NUMERO_POLIZA 
      AND CAR.FLAG_PAGO_FUTURO = 1
LEFT JOIN `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_CUOTAMORA` MOR 
       ON MOR.ID_CARGO      = CAR.ID_CARGO 
      AND MOR.NUMERO_POLIZA = CAR.NUMERO_POLIZA
WHERE CAR.NUMERO_CARGO NOT IN ( SELECT NUMERO_CARGO FROM `iter-data-storage-pv-uat.temp.TMP_PAG_CARGO_PRIMERA_PRIMA` )
--   OR POL.FECHA_BAJA BETWEEN CAR.PERIODO_DIA_INICIO AND CAR.PERIODO_DIA_FIN
;
-- ----------------------------------------------------------------------
-- Paso A13: PERIODO-CALENDARIO : Eliminar el Periodo a reprocesar. 
-- ----------------------------------------------------------------------
    DELETE FROM `iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR`
    WHERE TIPO_PERIODO='RECAUDACION' 
    AND PERIODO = var_periodo_recaudacion;
-- ----------------------------------------------------------------------
-- Paso A14: PERIODO-CALENDARIO : POR COBRAR 
-- ----------------------------------------------------------------------
INSERT INTO `iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR`
(
     PERIODO
    ,TIPO_PERIODO
    ,NUMERO_POLIZA
    ,NUMERO_CARGO
    ,NUMERO_ABONO
    ,ID_DEVOLUCION
    ,PERIODO_DIA_INICIO_4M
    ,PERIODO_DIA_INICIO
    ,PERIODO_DIA_FIN
    ,FECHA_VENCIMIENTO_CUOTA
    ,CARGO_FECHA_COBERTURA_FIN
    ,PERIODO_DESCRIPCION_ABREVIADO
    ,MONTO_CANTIDAD_ABONO_PEN
    ,MONTO_CANTIDAD_ABONO_USD
    ,SALDO_CANTIDAD_PEN	
    ,SALDO_CANTIDAD_USD
    ,FECHA_APLICADO_CARGO_ABONO	
    ,NOMBRE_GRUPO_PRODUCTO
    ,NOMBRE_PRODUCTO
    ,NUMERO_PLACA
    ,ESTADO_POLIZA
    ,CANAL
    ,PLAN
    ,MODELO_VEHICULO
    ,MARCA_VEHICULO
    ,NUMERO_DOCUMENTO
    ,TIPO_DOCUMENTO
    ,NOMBRE_CONTRATANTE
    ,MOTIVO_RECHAZO
    ,TIPO_TARJETA
    ,NUMERO_TARJETA_ENCRYP
    ,TIPO_ENTIDAD			
    ,NOMBRE_TARJETA
    ,BIN_TARJETA
    ,EMISOR
    ,MONTO_POR_COBRAR_PEN
    ,MONTO_POR_COBRAR_USD
    ,ESTADO_CARGO
    ,ESTADO_ABONO
    ,INDICADOR_RENOVACION
    ,FECHA_INICIO_VIGENCIA_POLIZA
    ,FECHA_FIN_VIGENCIA_POLIZA
    ,CORREO
    ,CELULAR
    ,MONEDA
    ,VIGENCIA
    ,NOMBRE_AGENTE 
    ,CODIGO_AGENTE 
    ,CODIGO_AGENCIA 
    ,NOMBRE_SUPERVISOR 
    ,NOMBRE_JEFE
    ,NUMERO_CUOTA
    ,MORA
    ,FRECUENCIA_PAGO
    ,VIA_COBRO
    ,NUMERO_VIA_PAGO
    ,OPERADOR
    ,FECHA_VENTA
    ,ANTIGUEDAD
    ,MONTO_TIPO_CAMBIO
    ,PASARELA
    ,CORREO_VEHICULAR
    ,CELULAR_VEHICULAR
    ,CORREO_CONTACTO
    ,CELULAR_CONTACTO
    ,NOMBRE 
    ,APELLIDO_PATERNO
    ,APELLIDO_MATERNO
    ,RAZON_SOCIAL
    -- PERFIL Y SEGMENTO
    ,SEGMENTO 
    ,PUNTAJE_SEGMENTO
    ,TIPO_MONEDA_TC_PERFIL
    ,PERFIL_FINANCIERO
    --SEGMENTO
    ,F
    ,M
    ,R
    ,SCORE_RFM
    ,RECENCY
    ,MONETARY_VALUE
    ,FREQUENCY
    ,FECHA_PAGADO_HASTA
)
SELECT  
     FNT.PERIODO
    ,FNT.TIPO_PERIODO
    ,FNT.NUMERO_POLIZA
    ,FNT.NUMERO_CARGO
    ,FNT.NUMERO_ABONO
    ,FNT.ID_DEVOLUCION
    ,FNT.PERIODO_DIA_INICIO_4M
    ,FNT.PERIODO_DIA_INICIO
    ,FNT.PERIODO_DIA_FIN
    ,FNT.FECHA_VENCIMIENTO_CUOTA
    ,FNT.CARGO_FECHA_COBERTURA_FIN
    ,FNT.PERIODO_DESCRIPCION_ABREVIADO
    ,FNT.MONTO_CANTIDAD_ABONO_PEN
    ,FNT.MONTO_CANTIDAD_ABONO_USD
    ,FNT.SALDO_CANTIDAD_PEN	
    ,FNT.SALDO_CANTIDAD_USD
    ,FNT.FECHA_APLICADO_CARGO_ABONO	
    ,FNT.NOMBRE_GRUPO_PRODUCTO
    ,FNT.NOMBRE_PRODUCTO
    ,FNT.NUMERO_PLACA
    ,FNT.ESTADO_POLIZA
    ,FNT.CANAL
    ,FNT.PLAN
    ,FNT.MODELO_VEHICULO
    ,FNT.MARCA_VEHICULO
    ,FNT.NUMERO_DOCUMENTO
    ,FNT.TIPO_DOCUMENTO
    ,FNT.NOMBRE_CONTRATANTE
    ,CASE WHEN FNT.MONTO_CANTIDAD_ABONO_USD>0 
          THEN 'OK'
          WHEN COALESCE(FNT.MONTO_CANTIDAD_ABONO_USD,0)=0 AND FNT.MOTIVO_RECHAZO='OK'
          THEN NULL 
          WHEN FNT.FECHA_VENCIMIENTO_CUOTA > CURRENT_DATE("America/Lima")  AND FNT.MOTIVO_RECHAZO IS NOT NULL AND FNT.MOTIVO_RECHAZO !='OK'
          THEN NULL
          ELSE FNT.MOTIVO_RECHAZO 
      END AS MOTIVO_RECHAZO
    ,FNT.TIPO_TARJETA
    ,FNT.NUMERO_TARJETA_ENCRYP
    ,FNT.TIPO_ENTIDAD			
    ,FNT.NOMBRE_TARJETA
    ,FNT.BIN_TARJETA
    ,FNT.EMISOR
    ,FNT.MONTO_POR_COBRAR_PEN
    ,FNT.MONTO_POR_COBRAR_USD
    ,FNT.ESTADO_CARGO
    ,FNT.ESTADO_ABONO
    ,FNT.INDICADOR_RENOVACION
    ,FNT.FECHA_INICIO_VIGENCIA_POLIZA
    ,FNT.FECHA_FIN_VIGENCIA_POLIZA
    ,FNT.CORREO
    ,FNT.CELULAR
    ,FNT.MONEDA
    ,FNT.VIGENCIA
    ,FNT.NOMBRE_AGENTE 
    ,FNT.CODIGO_AGENTE 
    ,FNT.CODIGO_AGENCIA 
    ,FNT.NOMBRE_SUPERVISOR 
    ,FNT.NOMBRE_JEFE
    ,FNT.NUMERO_CUOTA
    ,FNT.MORA
    ,FNT.FRECUENCIA_PAGO
    ,FNT.VIA_COBRO
    ,FNT.NUMERO_VIA_PAGO
    ,FNT.OPERADOR
    ,FNT.FECHA_VENTA
    ,FNT.ANTIGUEDAD
    ,FNT.MONTO_TIPO_CAMBIO
    ,FNT.PASARELA
    ,FNT.CORREO_VEHICULAR
    ,FNT.CELULAR_VEHICULAR
    ,FNT.CORREO_CONTACTO
    ,FNT.CELULAR_CONTACTO
    ,FNT.NOMBRE 
    ,FNT.APELLIDO_PATERNO
    ,FNT.APELLIDO_MATERNO
    ,FNT.RAZON_SOCIAL
    -- DATOS DE SEGMENTO
    ,SEG.SEGMENTO 
    ,CAST(SEG.PUNTAJE AS STRING) AS PUNTAJE_SEGMENTO
    ,PER.TIPO_MONEDA_TC AS TIPO_MONEDA_TC_PERFIL
    ,PER.PERFIL_FINANCIERO
    --SEGMENTO
    ,FNT.F
    ,FNT.M
    ,FNT.R
    ,FNT.SCORE_RFM
    ,FNT.RECENCY
    ,FNT.MONETARY_VALUE
    ,FNT.FREQUENCY
    ,FNT.FECHA_PAGADO_HASTA
     FROM `iter-data-storage-pv-uat.temp.TMP_POLIZA_CARGO_VEHICULAR_PRE` FNT
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_SEGMENTACION_MOROSIDAD`  SEG
        ON SEG.NUMERO_POLIZA = FNT.NUMERO_POLIZA 
 LEFT JOIN `iter-data-storage-pv-uat.goldenrecord_data.POLIZA_PERFIL_FINANCIERO`  PER
        ON PER.NUMERO_POLIZA = FNT.NUMERO_POLIZA
;

-- ----------------------------------------------------------------------
-- Paso A14: INSERTAR DATOS DE PERFIL FINASIERO Y SEGMENTACION  
-- ----------------------------------------------------------------------

--create or replace table `iter-data-storage-pv-uat.temp.TMP_COB_POLIZA_PERFIL_FINACIERO_SEGMENTACION` as 
--SELECT distinct V.PERIODO	,	V.NUMERO_POLIZA,f.PERFIL_FINANCIERO	,f.TIPO_MONEDA_TC TIPO_MONEDA_TC_PERFIL,S.PUNTAJE	PUNTAJE_SEGMENTO,	S.SEGMENTO		 
--FROM iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR v
--LEFT JOIN iter-data-storage-pv-uat.goldenrecord_data.POLIZA_SEGMENTACION_MOROSIDAD s ON s.NUMERO_POLIZA=V.NUMERO_POLIZA AND  CAST(FORMAT_DATE("%Y%m", s.PERIODO) AS INT64) =V.PERIODO
--LEFT JOIN iter-data-storage-pv-uat.goldenrecord_data.POLIZA_PERFIL_FINANCIERO f ON f.NUMERO_POLIZA=V.NUMERO_POLIZA AND  CAST(FORMAT_DATE("%Y%m", f.PERIODO) AS INT64) =V.PERIODO;


-- ----------------------------------------------------------------------
-- Paso A15: PERIODO-CALENDARIO : POR COBRAR 
-- ----------------------------------------------------------------------
-- UPDATE `iter-data-storage-pv-uat.bi_cobranza.HM_POLIZA_CARGO_VEHICULAR`  F
-- SET F.PERFIL_FINANCIERO=O.PERFIL_FINANCIERO
--   ,F.TIPO_MONEDA_TC_PERFIL=O.TIPO_MONEDA_TC_PERFIL
--   ,F.PUNTAJE_SEGMENTO=CAST(O.PUNTAJE_SEGMENTO AS STRING)
--   ,F.SEGMENTO=O.SEGMENTO
-- FROM
--    `iter-data-storage-pv-uat.temp.TMP_COB_POLIZA_PERFIL_FINACIERO_SEGMENTACION` O
--    WHERE O.NUMERO_POLIZA=F.NUMERO_POLIZA AND O.PERIODO=F.PERIODO;

-- ----------------------------------------------------------------------
-- Paso A14: PERIODO-CALENDARIO : POR COBRAR 
-- ----------------------------------------------------------------------
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.RH_POLIZA_TIPO_CAMBIO_VEH_ULT`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PAG_POLIZAS_ERROR_PRIMERAS_PRIMA`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_PAG_CARGO_PRIMERA_PRIMA`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_UNI_PAG_CARGOS_VEHICULAR`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_FIN_PAG_CARGOS`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_UNIVERSO_POLIZAS_VEH`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.RH_RECHAZOS_CUOTAS_TMP`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.RH_TMP_TARJETA_PAGO_FUTUROS_A`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_CUOTAMORA`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.RH_POLIZA_PAGO_VEHICULAR_PORCOBRAR`;
#DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_POLIZA_CARGO_VEHICULAR_PRE`;
--DROP TABLE IF EXISTS `iter-data-storage-pv-uat.temp.TMP_COB_POLIZA_PERFIL_FINACIERO_SEGMENTACION` ;

END;