SELECT   /*+ PARALLEL(2) */
       PRE.NUMEROPOLIZAINPUT            AS NUMERO_POLIZA
      ,PLO.OPERATIONPK                  AS OPERACION
      ,PRE.STATIC                       AS ID_POLIZA
      ,TO_CHAR(PLO.INITIALDATE,'YYYY-MM-DD') AS FECHA_VIGENCIA_INICIO
      ,TO_CHAR(PLO.FINISHDATE,'YYYY-MM-DD')  AS FECHA_VIGENCIA_FIN
      ,UPPER(PRE.FRECUENCIAPAGOINPUT) AS FRECUENCIA_POLIZA
      ,AGR.PRODUCTID
      ,TO_CHAR(TO_DATE(PRE.FECHAEMISIONINPUT,'YYYY-MM-DD'),'YYYY-MM-DD')    AS FECHA_EMISION
      ,UPPER(POR.DESCRIPTION )               AS NOMBRE_PRODUCTO
      ,TO_CHAR(COT.AUDITDATE,'YYYY-MM-DD HH24:MI:SS') AS AUDITDATE_SYSTEM_DATE
      ,TO_CHAR(COT.TIME_STAMP ,'YYYY-MM-DD') AS OPERATION_DATE
      ,TO_CHAR(COT.TIME_STAMP ,'YYYY-MM-DD HH24:MI:SS') AS OPERATION_DATETIME
      ,UPPER(STA.DESCRIPTION) AS ESTADO_POLIZA
      ,TO_CHAR(PLO.INITIALDATE,'YYYY-MM-DD') AS "Effective Date From"
      ,TO_CHAR(PLO.FINISHDATE,'YYYY-MM-DD') AS "Effective Date To"
      ,(CASE WHEN COT.LOADMODE=2 AND COT.EVENTON =0
             THEN 'Manual'
             WHEN COT.LOADMODE=1  AND COT.EVENTON =0
             THEN 'JOB'
             WHEN COT.LOADMODE=2  AND COT.EVENTON =1
             THEN 'Migration'
             ELSE ''||COT.LOADMODE
       END) AS "PROCESS TYPE"
      ,(CASE WHEN COT.STATUS = 1 
             THEN 'Not applied operation' 
             WHEN COT.STATUS = 2 
             THEN 'Applied operation'
             ELSE ''||COT.STATUS
      END ) AS "STATUS OPERATION" 
       ,EVE.DESCRIPTION AS EVENT
       ,COT.VALIDATIONERROR
      ,UPPER(THI.CONCEPT) AS CONCEPT_NETA
      ,NVL(THI.AMMOUNT,0) AS PRIMA_NETA
      ,UPPER(THT.CONCEPT) AS CONCEPT_TOTAL
      ,NVL(THT.AMMOUNT,0) AS PRIMA_TOTAL
      ,NVL(TIG.AMMOUNT,0) AS IGV
      ,NVL(TIA.AMMOUNT,0)  AS PRIMA_NETA_ANUAL
      ,NVL(TIB.AMMOUNT,0)  AS PRIMA_BRUTA_ANUAL
      ,NVL(TII.AMMOUNT,0)  AS IGV_ANUAL
    -- CAMPOS NUEVOS DE LA POLIZA   
    ,UPPER(PRE.MONEDAINPUT) AS MONEDA 
    ,UPPER(PRE.TIPOPRODUCCIONINPUT) AS TIPO_PRODUCTO
    ,UPPER(PRE.OFICINAINPUT) AS OFICINA 
    ,UPPER(PRE.INDAUTRENOVACIONINPUT) AS INDICADOR_RENOVACION
    ,UPPER(PRE.TIPOMONEDAINPUT) AS TIPO_MONEDA
    ,UPPER(PRE.TIPOVIGENCIAINPUT) AS TIPO_VIGENCIA
    ,UPPER(PRE.VIGENCIAINPUT) AS VIGENCIA
    ,PRE.FECHAPROXFACTURACIONINPUT AS FECHA_PROXIMA_FACTURACION
    ,PRE.CANALVENTAINPUT AS CANAL_VENTA
    ,PRE.FECHAPROXIMAGENPRIMAINPUT AS FECHA_PROXIMA_IMAGEN_PRIMA
    -- ,UPPER(PRE.FRECUENCIAPAGOINPUT) AS FRECUENCIA_PAGO
    ,PRE.FECHAEVENTOANTERIORINPUT AS FECHA_EVENTO_ANTERIOR
    ,UPPER(PRE.TIPOPOLIZAINPUT) AS TIPO_POLIZA
    --,PRE.NUMEROPOLIZAASINPUT AS NUMERO_POLIZA_AS
    ,PRE.FECHASUSPCANCELINPUT AS FECHA_SUSPENSION_CANCELACION
    ,UPPER(PRE.FLAGSUSPCANCELINPUT) AS FLAG_SUSPENSION_CANCELACION
    --,PRE.CODSUPERINTINPUT AS CODIGO_
    ,PRE.NOMBREARCHIVOTRAMAINPUT AS NOMBRE_ARCHIVO_TRAMA
    ,PRE.NUMPLANINTERINPUT AS NUMERO_PLAN
    --,PRE.FECINIPOLMATRIZINPUT AS FECHA_INICIO_MATRIZ
    --,PRE.FECFINPOLMATRIZINPUT AS FECHA_
    ,UPPER(PRE.NOMCOMASEGURADOPOLINPUT) AS NOMBRE_ASEGURADO
    ,UPPER(PRE.NOMCOMBENEFICIARIOPOLINPUT) AS NOMBRE_BENEFICIARIO
    --,PRE.JOBSUPDAYSINPUT AS JOB_SUB
   -- ,PRE.JOBSUPDATEINPUT AS JOB_SUPDATE
    --,UPPER(PRE.JOBSUPINDINPUT) AS JOB_SUPENDIDO 
    ,PRE.PRIMATRAMAINPUT AS PRIMA_TRAMA
    ,PRE.FECHACARGASISTEMAINPUT AS FECHA_CARGA_SISTEMA_PREPO
    --,PRE.INDICADORPEINPUT AS INDICADOR_PE
    ,PRE.NUMEROCOTIZACIONINPUT AS NUMERO_COTIZACION
    ,PRE.NUMEROPROPUESTAINPUT AS NUMERO_PROPUESTA
    ,PRE.NUMEROSOLICITUDINPUT AS NUMERO_SOLICITUD
    ,PRE.EMAILENVIOPOLIZAINPUT AS CORREO 
      ,COT.USER_NAME               AS USUARIO_COT
      ,PRE.CANALVENTAVALUE AS ID_CANAL
  FROM INTERSEGURO.PREPOLICY PRE
 INNER JOIN INTERSEGURO.POLICYDCO PLO
         ON PLO.DCOID = PRE.PK
 INNER JOIN INTERSEGURO.CONTEXTOPERATION COT
         ON COT.ID =PLO.OPERATIONPK
 INNER JOIN INTERSEGURO.AGREGATEDPOLICY AGR
         ON AGR.AGREGATEDPOLICYID = PLO.AGREGATEDOBJECTID
 INNER JOIN INTERSEGURO.PRODUCT POR
         ON POR.PRODUCTID = AGR.PRODUCTID
 LEFT JOIN INTERSEGURO.EVENTDCO EVD
         ON EVD.OPERATIONPK = PLO.OPERATIONPK
 LEFT JOIN INTERSEGURO.EVENTTYPE EVE
         ON EVE.EVENTTYPEID= EVD.EVENTTYPEID
--MOVIMIENTOS
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY THI
         ON THI.OPERATIONPK=PLO.OPERATIONPK
        AND THI.POLICYID  =AGR.AGREGATEDPOLICYID
        AND TRIM(THI.CONCEPT)   ='PrimaNeta'
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY THT
       ON THT.OPERATIONPK=PLO.OPERATIONPK
      AND THT.POLICYID  =AGR.AGREGATEDPOLICYID
      AND TRIM(THT.CONCEPT)   ='PrimaTotal'
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY TIG
       ON TIG.OPERATIONPK=PLO.OPERATIONPK
       AND TIG.POLICYID  =AGR.AGREGATEDPOLICYID
       AND TRIM(TIG.CONCEPT)   ='IGV'
       
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY TIA
       ON TIA.OPERATIONPK=PLO.OPERATIONPK
       AND TIA.POLICYID  =AGR.AGREGATEDPOLICYID
       AND TRIM(TIA.CONCEPT)   ='PrimaTotalAnual'
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY TIB
       ON TIB.OPERATIONPK=PLO.OPERATIONPK
       AND TIB.POLICYID  =AGR.AGREGATEDPOLICYID
       AND TRIM(TIB.CONCEPT)   ='PrimaBrutaAnual'
LEFT JOIN INTERSEGURO.THIRDPARTYMOVEMENTPOLICY TII
       ON TII.OPERATIONPK=PLO.OPERATIONPK
       AND TII.POLICYID  =AGR.AGREGATEDPOLICYID
       AND TRIM(TII.CONCEPT)   ='IGVAnual'
 INNER JOIN INTERSEGURO.STATE STA
        ON STA.STATEID = PLO.STATEID
     WHERE PRE.NUMEROPOLIZAINPUT IS NOT NULL
      /*-- AND EVE.DESCRIPTION IN ('Emitir','EmitirMigracion','EmitirPropuesta','EmitirRapida')*/
      --1. para reprocesar
     --AND COT.AUDITDATE BETWEEN TO_DATE('20220324','YYYYMMDD') AND TO_DATE('20220325','YYYYMMDD')  --reprocesar
     -- AND COT.AUDITDATE BETWEEN (CURRENT_DATE-7) AND CURRENT_DATE */
-- OK - PROCESO DIARIO
	--2. Dejar esta linea ************
-->>>>>>>>>>>>AND COT.AUDITDATE >= (CURRENT_DATE-4) 
-- EJECUCION DIARIA
    AND (TRUNC(COT.AUDITDATE,'DD') BETWEEN TRUNC(TO_DATE('${v_FechaInicioYYYYMMDD}','YYYYMMDD'),'DD') AND TRUNC(TO_DATE('${v_FechaFinYYYYMMDD}','YYYYMMDD'),'DD') )

  --3. reproceso por mes
  --AND TO_CHAR(COT.AUDITDATE,'YYYYMMDD') IN ('202108','202107','202106','202105','202104','202103','202102','202101')
  --AND TO_CHAR(COT.AUDITDATE,'YYYYMM') ='202206'
  --4. Por aÃ±o
  --   AND TO_CHAR(COT.AUDITDATE,'YYYY') ='2016'
  
  --AND TRUNC(COT.AUDITDATE,'DD')  BETWEEN TRUNC(CURRENT_DATE-2 ,'DD') AND TRUNC(CURRENT_DATE+1,'DD')
     /*--AND COT.TIME_STAMP >= (CURRENT_DATE-7) */
      
     